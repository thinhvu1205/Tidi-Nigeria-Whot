// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: common_api.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Api {

  /// <summary>Holder for reflection information generated from common_api.proto</summary>
  public static partial class CommonApiReflection {

    #region Descriptor
    /// <summary>File descriptor for common_api.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static CommonApiReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChBjb21tb25fYXBpLnByb3RvEgNhcGkiXwoER2FtZRIMCgRjb2RlGAEgASgJ",
            "Eg4KBmFjdGl2ZRgCIAEoCBIQCghsb2JieV9pZBgDIAEoCRIbCgZsYXlvdXQY",
            "BCABKAsyCy5hcGkuTGF5b3V0EgoKAmlkGAUgASgDIkYKBkxheW91dBILCgNj",
            "b2wYASABKAUSCwoDcm93GAIgASgFEhAKCGNvbF9zcGFuGAMgASgFEhAKCHJv",
            "d19zcGFuGAQgASgFIiwKEEdhbWVMaXN0UmVzcG9uc2USGAoFZ2FtZXMYASAD",
            "KAsyCS5hcGkuR2FtZSIeCg5CZXRMaXN0UmVxdWVzdBIMCgRjb2RlGAEgASgJ",
            "Ih8KD0JldExpc3RSZXNwb25zZRIMCgRiZXRzGAEgAygFIkUKBENoYXQSIAoJ",
            "dHlwZV9jaGF0GAEgASgOMg0uYXBpLlR5cGVDaGF0EgoKAmlkGAIgASgJEg8K",
            "B2NvbnRlbnQYAyABKAkigQMKCEZyZWVDaGlwEgoKAmlkGAEgASgDEhEKCXNl",
            "bmRlcl9pZBgCIAEoCRIUCgxyZWNpcGllbnRfaWQYAyABKAkSDQoFdGl0bGUY",
            "BCABKAkSDwoHY29udGVudBgFIAEoCRINCgVjaGlwcxgGIAEoAxIRCgljbGFp",
            "bWFibGUYByABKAgSDgoGYWN0aW9uGAggASgJEhcKD2NsYWltX3RpbWVfdW5p",
            "eBgJIAEoAxIuCgtjbGFpbV9zdGF1cxgKIAEoDjIZLmFwaS5GcmVlQ2hpcC5D",
            "bGFpbVN0YXR1cyKkAQoLQ2xhaW1TdGF0dXMSHAoYQ0xBSU1fU1RBVFVTX1VO",
            "U1BFQ0lGSUVEEAASIgoeQ0xBSU1fU1RBVFVTX1dBSVRfQURNSU5fQUNDRVBU",
            "EAESIAocQ0xBSU1fU1RBVFVTX1dBSVRfVVNFUl9DTEFJTRACEhgKFENMQUlN",
            "X1NUQVRVU19DTEFJTUVEEAMSFwoTQ0xBSU1fU1RBVFVTX1JFSkVDVBAEInAK",
            "D0ZyZWVDaGlwUmVxdWVzdBIPCgd1c2VyX2lkGAEgASgJEg0KBWxpbWl0GAIg",
            "ASgDEg0KBWN1c29yGAMgASgJEi4KC2NsYWltX3N0YXVzGAQgASgOMhkuYXBp",
            "LkZyZWVDaGlwLkNsYWltU3RhdHVzIoYBCgxMaXN0RnJlZUNoaXASIAoJZnJl",
            "ZWNoaXBzGAEgAygLMg0uYXBpLkZyZWVDaGlwEhIKCm5leHRfY3Vzb3IYAiAB",
            "KAkSEgoKcHJldl9jdXNvchgDIAEoCRINCgV0b3RhbBgEIAEoAxIOCgZvZmZz",
            "ZXQYBSABKAMSDQoFbGltaXQYBiABKAMinQEKBERlYWwSCgoCaWQYASABKAkS",
            "DQoFY2hpcHMYAiABKAMSFAoMYW1vdW50X2NoaXBzGAMgASgDEg0KBWJvbnVz",
            "GAQgASgDEg0KBXByaWNlGAUgASgJEgwKBG5hbWUYBiABKAkSEAoIY3VycmVu",
            "Y3kYByABKAkSDwoHcGVyY2VudBgIIAEoCRIVCg1jaGlwX3Blcl91bml0GAkg",
            "ASgDInIKCkRlYWxJblNob3ASFwoEYmVzdBgBIAEoCzIJLmFwaS5EZWFsEhcK",
            "BGlhcHMYAiADKAsyCS5hcGkuRGVhbBIaCgdnY2FzaGVzGAMgAygLMgkuYXBp",
            "LkRlYWwSFgoDc21zGAQgAygLMgkuYXBpLkRlYWwiXQoRTGVhZGVyQm9hcmRS",
            "ZWNvcmQSEQoJZ2FtZV9jb2RlGAEgASgJEg8KB3VzZXJfaWQYAiABKAkSDQoF",
            "c2NvcmUYAyABKAMSFQoNY2RfcmVzZXRfdW5peBgEIAEoAyLOAgoMRXhjaGFu",
            "Z2VJbmZvEgoKAmlkGAEgASgJEg8KB2lkX2RlYWwYAiABKAkSDQoFY2hpcHMY",
            "AyABKAMSDQoFcHJpY2UYBCABKAkSDgoGc3RhdHVzGAUgASgDEg4KBnVubG9j",
            "axgGIAEoBRIPCgdjYXNoX2lkGAcgASgJEhEKCWNhc2hfdHlwZRgIIAEoCRIX",
            "Cg91c2VyX2lkX3JlcXVlc3QYCSABKAkSGQoRdXNlcl9uYW1lX3JlcXVlc3QY",
            "CiABKAkSDgoGdmlwX2x2GAsgASgDEhEKCWRldmljZV9pZBgMIAEoCRIYChB1",
            "c2VyX2lkX2hhbmRsaW5nGA0gASgJEhoKEnVzZXJfbmFtZV9oYW5kbGluZxgO",
            "IAEoCRIOCgZyZWFzb24YDyABKAkSDgoGY3Vyc29yGBAgASgJEhIKCmNyZWF0",
            "ZVRpbWUYESABKAMiMAoSRXhjaGFuZ2VEZWFsSW5TaG9wEhoKB2djYXNoZXMY",
            "ASADKAsyCS5hcGkuRGVhbCKtAQoQTGlzdEV4Y2hhbmdlSW5mbxIpCg5leGNo",
            "YW5nZV9pbmZvcxgBIAMoCzIRLmFwaS5FeGNoYW5nZUluZm8SEgoKbmV4dF9j",
            "dXNvchgCIAEoCRISCgpwcmV2X2N1c29yGAMgASgJEg0KBXRvdGFsGAQgASgD",
            "Eg4KBm9mZnNldBgFIAEoAxINCgVsaW1pdBgGIAEoAxIMCgRmcm9tGAcgASgD",
            "EgoKAnRvGAggASgDIoEBCg9FeGNoYW5nZVJlcXVlc3QSCgoCaWQYASABKAkS",
            "FwoPdXNlcl9pZF9yZXF1ZXN0GAIgASgJEg0KBWxpbWl0GAMgASgDEgwKBGZy",
            "b20YBCABKAMSCgoCdG8YBSABKAMSDQoFY3Vzb3IYBiABKAkSEQoJY2FzaF90",
            "eXBlGAkgASgJItICCgZSZXdhcmQSEgoKYmFzaWNfY2hpcBgBIAEoAxIVCg1w",
            "ZXJjZW50X2JvbnVzGAIgASgCEhIKCmJvbnVzX2NoaXAYAyABKAMSEwoLb25s",
            "aW5lX2NoaXAYBCABKAMSEgoKdG90YWxfY2hpcBgFIAEoAxIOCgZzdHJlYWsY",
            "BiABKAMSEgoKb25saW5lX3NlYxgHIAEoAxIRCgljYW5fY2xhaW0YCCABKAgS",
            "EQoJbnVtX2NsYWltGAkgASgDEhcKD2xhc3RfY2xhaW1fdW5peBgKIAEoAxIX",
            "Cg9uZXh0X2NsYWltX3VuaXgYCyABKAMSFgoObmV4dF9jbGFpbV9zZWMYDCAB",
            "KAMSGAoQcmVhY2hfbWF4X3N0cmVhaxgNIAEoCBIYChBsYXN0X3NwaW5fbnVt",
            "YmVyGA4gASgDEhgKEGxhc3Rfb25saW5lX3VuaXgYDyABKAMidAoOUmV3YXJk",
            "VGVtcGxhdGUSEwoLYmFzaWNfY2hpcHMYASADKAMSFAoMcGVyY2VuX2JvbnVz",
            "GAIgASgCEhIKCm9ubGluZV9zZWMYAyABKAMSEwoLb25saW5lX2NoaXAYBCAB",
            "KAMSDgoGc3RyZWFrGAUgASgDIpoBCg9MYXN0Q2xhaW1SZXdhcmQSFwoPbGFz",
            "dF9jbGFpbV91bml4GAEgASgDEhcKD25leHRfY2xhaW1fdW5peBgCIAEoAxIO",
            "CgZzdHJlYWsYAyABKAMSGAoQbGFzdF9zcGluX251bWJlchgEIAEoAxIYChBy",
            "ZWFjaF9tYXhfc3RyZWFrGAUgASgIEhEKCW51bV9jbGFpbRgGIAEoAyJEChNE",
            "YWlseVJld2FyZFRlbXBsYXRlEi0KEHJld2FyZF90ZW1wbGF0ZXMYASADKAsy",
            "Ey5hcGkuUmV3YXJkVGVtcGxhdGUiJQoJVXNlckdyb3VwEgoKAmlkGAEgASgD",
            "EgwKBG5hbWUYAiABKAkiigEKDUxpc3RVc2VyR3JvdXASIwoLdXNlcl9ncm91",
            "cHMYASADKAsyDi5hcGkuVXNlckdyb3VwEhIKCm5leHRfY3Vzb3IYAiABKAkS",
            "EgoKcHJldl9jdXNvchgDIAEoCRINCgV0b3RhbBgEIAEoAxIOCgZvZmZzZXQY",
            "BSABKAMSDQoFbGltaXQYBiABKAMiMAoQVXNlckdyb3VwUmVxdWVzdBINCgVs",
            "aW1pdBgBIAEoAxINCgVjdXNvchgCIAEoCSK4AgoIR2lmdENvZGUSCgoCaWQY",
            "ASABKAMSDAoEY29kZRgCIAEoCRIRCgluX2N1cnJlbnQYAyABKAMSDQoFbl9t",
            "YXgYBCABKAMSDQoFdmFsdWUYBSABKAMSFwoPc3RhcnRfdGltZV91bml4GAYg",
            "ASgDEhUKDWVuZF90aW1lX3VuaXgYByABKAMSDwoHbWVzc2FnZRgIIAEoCRIL",
            "CgN2aXAYCSABKAMSKQoOZ2lmdF9jb2RlX3R5cGUYCiABKA4yES5hcGkuR2lm",
            "dENvZGVUeXBlEhcKD3JlYWNoX21heF9jbGFpbRgMIAEoCBIVCg1hbHJlYWR5",
            "X2NsYWltGA0gASgIEg8KB3VzZXJfaWQYDiABKAkSFQoNb3Blbl90b19jbGFp",
            "bRgPIAEoCBIQCghlcnJfY29kZRgQIAEoBSJfCgxMaXN0R2lmdENvZGUSIQoK",
            "Z2lmdF9jb2RlcxgBIAMoCzINLmFwaS5HaWZ0Q29kZRINCgV0b3RhbBgCIAEo",
            "AxIOCgZvZmZzZXQYAyABKAMSDQoFbGltaXQYBCABKAMingEKFkFkZE5vdGlm",
            "aWNhdGlvblJlcXVlc3QSFQoNcmVjaXBpZW50X2lkcxgBIAMoCRIVCg11c2Vy",
            "X2dyb3VwX2lkGAIgASgDEiMKBHR5cGUYAyABKA4yFS5hcGkuVHlwZU5vdGlm",
            "aWNhdGlvbhINCgV0aXRsZRgEIAEoCRIPCgdjb250ZW50GAUgASgJEhEKCXNl",
            "bmRlcl9pZBgGIAEoCSLWAQoMTm90aWZpY2F0aW9uEgoKAmlkGAEgASgDEhQK",
            "DHJlY2lwaWVudF9pZBgCIAEoCRIjCgR0eXBlGAMgASgOMhUuYXBpLlR5cGVO",
            "b3RpZmljYXRpb24SDQoFdGl0bGUYBCABKAkSDwoHY29udGVudBgFIAEoCRIR",
            "CglzZW5kZXJfaWQYBiABKAkSDAoEcmVhZBgHIAEoCBIYChBjcmVhdGVfdGlt",
            "ZV91bml4GAggASgDEhMKC2FwcF9wYWNrYWdlGAkgASgJEg8KB2dhbWVfaWQY",
            "CiABKAkiWAoTTm90aWZpY2F0aW9uUmVxdWVzdBINCgVsaW1pdBgBIAEoAxIN",
            "CgVjdXNvchgCIAEoCRIjCgR0eXBlGAMgASgOMhUuYXBpLlR5cGVOb3RpZmlj",
            "YXRpb24ikgEKEExpc3ROb3RpZmljYXRpb24SKAoNbm90aWZpY2F0aW9ucxgB",
            "IAMoCzIRLmFwaS5Ob3RpZmljYXRpb24SEgoKbmV4dF9jdXNvchgCIAEoCRIS",
            "CgpwcmV2X2N1c29yGAMgASgJEg0KBXRvdGFsGAQgASgDEg4KBm9mZnNldBgF",
            "IAEoAxINCgVsaW1pdBgGIAEoAyIlCglSYW5nZVRpbWUSDAoEZnJvbRgBIAEo",
            "BRIKCgJ0bxgCIAEoBSLQAQoQSW5BcHBNZXNzYWdlRGF0YRInCgZhY3Rpb24Y",
            "ASABKA4yFy5hcGkuSW5BcHBNZXNzYWdlQWN0aW9uEg4KBnRhcmdldBgCIAEo",
            "CRIxCgZwYXJhbXMYAyADKAsyIS5hcGkuSW5BcHBNZXNzYWdlRGF0YS5QYXJh",
            "bXNFbnRyeRIhCglzaG93VGltZXMYBCADKAsyDi5hcGkuUmFuZ2VUaW1lGi0K",
            "C1BhcmFtc0VudHJ5EgsKA2tleRgBIAEoCRINCgV2YWx1ZRgCIAEoCToCOAEi",
            "9AEKDEluQXBwTWVzc2FnZRIKCgJpZBgBIAEoAxIVCg1oaWdoX3ByaW9yaXR5",
            "GAIgASgDEhEKCWdyb3VwX2lkcxgDIAMoAxIjCgR0eXBlGAQgASgOMhUuYXBp",
            "LlR5cGVJbkFwcE1lc3NhZ2USIwoEZGF0YRgFIAEoCzIVLmFwaS5JbkFwcE1l",
            "c3NhZ2VEYXRhEhIKCnN0YXJ0X2RhdGUYBiABKAMSEAoIZW5kX2RhdGUYByAB",
            "KAMSGAoQY3JlYXRlX3RpbWVfdW5peBgIIAEoAxITCgthcHBfcGFja2FnZRgJ",
            "IAEoCRIPCgdnYW1lX2lkGAogASgJIlgKE0luQXBwTWVzc2FnZVJlcXVlc3QS",
            "DQoFbGltaXQYASABKAMSDQoFY3Vzb3IYAiABKAkSIwoEdHlwZRgDIAEoDjIV",
            "LmFwaS5UeXBlSW5BcHBNZXNzYWdlIpQBChBMaXN0SW5BcHBNZXNzYWdlEioK",
            "D2luX2FwcF9tZXNzYWdlcxgBIAMoCzIRLmFwaS5JbkFwcE1lc3NhZ2USEgoK",
            "bmV4dF9jdXNvchgCIAEoCRISCgpwcmV2X2N1c29yGAMgASgJEg0KBXRvdGFs",
            "GAQgASgDEg4KBm9mZnNldBgFIAEoAxINCgVsaW1pdBgGIAEoAyJACg9EZWZh",
            "dWx0UmVzcG9uc2USDwoHbWVzc2FnZRgBIAEoCRIMCgRjb2RlGAIgASgJEg4K",
            "BnN0YXR1cxgDIAEoCSI5ChFQcmVTaWduUHV0UmVxdWVzdBIQCghmaWxlTmFt",
            "ZRgBIAEoCRISCgpidWNrZXROYW1lGAIgASgJIiEKElByZVNpZ25QdXRSZXNw",
            "b25zZRILCgN1cmwYASABKAkiXQoJUmVmZXJVc2VyEgoKAmlkGAEgASgDEhQK",
            "DHVzZXJfaW52aXRvchgCIAEoCRIUCgx1c2VyX2ludml0ZWUYAyABKAkSGAoQ",
            "Y3JlYXRlX3RpbWVfdW5peBgEIAEoAyI9ChNSZXdhcmRSZWZlclRlbXBsYXRl",
            "EgsKA21pbhgBIAEoAxILCgNtYXgYAiABKAMSDAoEcmF0ZRgDIAEoAiJKChdM",
            "aXN0UmV3YXJkUmVmZXJUZW1wbGF0ZRIvCg1yZXdhcmRfcmVmZXJzGAEgAygL",
            "MhguYXBpLlJld2FyZFJlZmVyVGVtcGxhdGUi/wIKC1Jld2FyZFJlZmVyEgoK",
            "AmlkGAEgASgDEg8KB3VzZXJfaWQYAiABKAkSDwoHd2luX2FtdBgDIAEoAxIV",
            "Cg1lc3RfcmV3YXJkX2x2GAQgASgDEhIKCmVzdF9yZXdhcmQYBSABKAMSFwoP",
            "ZXN0X3JhdGVfcmV3YXJkGAYgASgCEiUKC3VzZXJfcmVmZXJzGAcgAygLMhAu",
            "YXBpLlJld2FyZFJlZmVyEi4KDGxpc3RfcmV3YXJkcxgIIAMoCzIYLmFwaS5S",
            "ZXdhcmRSZWZlclRlbXBsYXRlEhEKCWZyb21fdW5peBgJIAEoAxIPCgd0b191",
            "bml4GAogASgDEhgKEHRvdGFsX3VzZXJfcmVmZXIYCyABKAMSGAoQdXBkYXRl",
            "X3RpbWVfdW5peBgMIAEoAxIWCg5zZW5kX3RvX3dhbGxldBgNIAEoCBIYChBj",
            "cmVhdGVfdGltZV91bml4GA4gASgDEh0KFXJlbWFpbl90aW1lX3Jlc2V0X3Nl",
            "YxgPIAEoAyI4Cg9MaXN0UmV3YXJkUmVmZXISJQoLdXNlcl9yZWZlcnMYASAD",
            "KAsyEC5hcGkuUmV3YXJkUmVmZXIiZwoUSGlzdG9yeVJld2FyZFJlcXVlc3QS",
            "DwoHdXNlcl9pZBgBIAEoCRIkCgR0aW1lGAIgASgOMhYuYXBpLkhpc3RvcnlS",
            "ZXdhcmRUaW1lEgwKBGZyb20YAyABKAMSCgoCdG8YBCABKAMiYQoSV2FsbGV0",
            "VHJhbnNSZXF1ZXN0Eg0KBWxpbWl0GAEgASgDEg0KBWN1c29yGAIgASgJEhMK",
            "C21ldGFfYWN0aW9uGAMgASgJEhgKEG1ldGFfYmFua19hY3Rpb24YBCABKAki",
            "SAoFRXJyb3ISDAoEY29kZRgBIAEoAxINCgVlcnJvchgCIAEoCRIiCgplcnJv",
            "cl90eXBlGAMgASgOMg4uYXBpLkVycm9yVHlwZSIoCgdSZXF1ZXN0Eg8KB3Vz",
            "ZXJfaWQYASABKAkSDAoEYm9keRgCIAEoCSIvCghSZXNwb25zZRIMCgRib2R5",
            "GAEgASgJEhUKDWVycm9yX21lc3NhZ2UYAiABKAkivQEKCFVzZXJNZXRhEg8K",
            "B3VzZXJfaWQYASABKAkSCwoDdmlwGAIgASgFEhkKEXRvdGFsX2NoaXBzX3Rv",
            "cHVwGAMgASgDEhsKE3RvdGFsX2NoaXBzX2Nhc2hvdXQYBCABKAMSGAoQdG90",
            "YWxfY2hpcHNfc2VuZBgFIAEoAxIOCgZhZ1BsYXkYBiABKAMSDgoGYWdCYW5r",
            "GAcgASgDEiEKGXRvdGFsX2NoaXBzX2Nhc2hvdXRfaW5kYXkYCCABKAMiIQoF",
            "UmFuZ2USCwoDbWluGAEgASgDEgsKA21heBgCIAEoAyLbAQoJUnVsZUx1Y2t5",
            "EgoKAmlkGAEgASgDEhIKCmRlbGV0ZWRfYXQYAiABKAMSGgoSZW1pdF9ldmVu",
            "dF9hdF91bml4GAMgASgDEhEKCWdhbWVfY29kZRgEIAEoCRIXCgNydHAYBSAB",
            "KAsyCi5hcGkuUmFuZ2USGAoEbWFyaxgGIAEoCzIKLmFwaS5SYW5nZRIXCgN2",
            "aXAYByABKAsyCi5hcGkuUmFuZ2USDwoHcmVfZGVhbBgIIAEoAxIiCg53aW5f",
            "bWFya19yYXRpbxgJIAEoCzIKLmFwaS5SYW5nZSJZCgpSdWxlc0x1Y2t5Eh0K",
            "BXJ1bGVzGAEgAygLMg4uYXBpLlJ1bGVMdWNreRINCgVsaW1pdBgCIAEoAxIO",
            "CgZvZmZzZXQYAyABKAMSDQoFdG90YWwYBCABKAMqaAoIVHlwZUNoYXQSGQoV",
            "VFlQRV9DSEFUX1VOU1BFQ0lGSUVEEAASEgoOVFlQRV9DSEFUX1JPT00QARIX",
            "ChNUWVBFX0NIQVRfRElSRUNUTVNHEAISFAoQVFlQRV9DSEFUX0dST1VVUBAD",
            "KsUBCg5FeGNoYW5nZVN0YXR1cxIfChtFWENIQU5HRV9TVEFUVVNfVU5TUEVD",
            "SUZJRUQQABIbChdFWENIQU5HRV9TVEFUVVNfV0FJVElORxABEiIKHkVYQ0hB",
            "TkdFX1NUQVRVU19DQU5DRUxfQllfVVNFUhACEhsKF0VYQ0hBTkdFX1NUQVRV",
            "U19QRU5ESU5HEAMSGAoURVhDSEFOR0VfU1RBVFVTX0RPTkUQBBIaChZFWENI",
            "QU5HRV9TVEFUVVNfUkVKRUNUEAUqRwoMR2lmdENvZGVUeXBlEh4KGkdJRlRf",
            "Q09ERV9UWVBFX1VOU1BFQ0lGSUVEEAASFwoTR0lGVF9DT0RFX1RZUEVfR0FN",
            "RRABKucBCg1HaWZ0Q29kZUVycm9yEh8KG0dJRlRfQ09ERV9FUlJPUl9VTlNQ",
            "RUNJRklFRBAAEhwKGEdJRlRfQ09ERV9FUlJPUl9OT1RfT1BFThABEh4KGkdJ",
            "RlRfQ09ERV9FUlJPUl9IQVNfQ0xPU0VEEAISJQohR0lGVF9DT0RFX0VSUk9S",
            "X1JFQUNIX01BWF9DTEFJTUVEEAMSIwofR0lGVF9DT0RFX0VSUk9SX0FMUkVB",
            "RFlfQ0xBSU1FRBAEEisKJ0dJRlRfQ09ERV9FUlJPUl9MVl9WSVBfTk9UX01F",
            "RVRfUkVRVUlSRRAFKjgKEFR5cGVOb3RpZmljYXRpb24SDAoIUkVTRVJWRUQQ",
            "ABIMCghNQUlMX0JPWBABEggKBEdJRlQQAiosChBUeXBlSW5BcHBNZXNzYWdl",
            "EgwKCEhPVF9ORVdTEAASCgoGQkFOTkVSEAEqOgoSSW5BcHBNZXNzYWdlQWN0",
            "aW9uEggKBE5PTkUQABIMCghOQVZJR0FURRABEgwKCE9QRU5fVVJMEAIqxgEK",
            "EUhpc3RvcnlSZXdhcmRUaW1lEiMKH0hJU1RPUllfUkVXQVJEX1RJTUVfVU5T",
            "UEVDSUZJRUQQABIhCh1ISVNUT1JZX1JFV0FSRF9USU1FX1RISVNfV0VFSxAB",
            "EiEKHUhJU1RPUllfUkVXQVJEX1RJTUVfTEFTVF9XRUVLEAISIgoeSElTVE9S",
            "WV9SRVdBUkRfVElNRV9USElTX01PTlRIEAMSIgoeSElTVE9SWV9SRVdBUkRf",
            "VElNRV9MQVNUX01PTlRIEAQqRwoJRXJyb3JUeXBlEhoKFkVSUk9SX1RZUEVf",
            "VU5TUEVDSUZJRUQQABIeChpFUlJPUl9UWVBFX0NISVBfTk9UX0VOT1VHSBAB",
            "QjxaOmdpdGh1Yi5jb20vTG9uZ3BoYW05OC90ZWVuLXBhdHRpLXNlcnZlci9j",
            "b21tb24vcHJvdG87cHJvdG9iBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Api.TypeChat), typeof(global::Api.ExchangeStatus), typeof(global::Api.GiftCodeType), typeof(global::Api.GiftCodeError), typeof(global::Api.TypeNotification), typeof(global::Api.TypeInAppMessage), typeof(global::Api.InAppMessageAction), typeof(global::Api.HistoryRewardTime), typeof(global::Api.ErrorType), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.Game), global::Api.Game.Parser, new[]{ "Code", "Active", "LobbyId", "Layout", "Id" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.Layout), global::Api.Layout.Parser, new[]{ "Col", "Row", "ColSpan", "RowSpan" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.GameListResponse), global::Api.GameListResponse.Parser, new[]{ "Games" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.BetListRequest), global::Api.BetListRequest.Parser, new[]{ "Code" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.BetListResponse), global::Api.BetListResponse.Parser, new[]{ "Bets" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.Chat), global::Api.Chat.Parser, new[]{ "TypeChat", "Id", "Content" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.FreeChip), global::Api.FreeChip.Parser, new[]{ "Id", "SenderId", "RecipientId", "Title", "Content", "Chips", "Claimable", "Action", "ClaimTimeUnix", "ClaimStaus" }, null, new[]{ typeof(global::Api.FreeChip.Types.ClaimStatus) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.FreeChipRequest), global::Api.FreeChipRequest.Parser, new[]{ "UserId", "Limit", "Cusor", "ClaimStaus" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.ListFreeChip), global::Api.ListFreeChip.Parser, new[]{ "Freechips", "NextCusor", "PrevCusor", "Total", "Offset", "Limit" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.Deal), global::Api.Deal.Parser, new[]{ "Id", "Chips", "AmountChips", "Bonus", "Price", "Name", "Currency", "Percent", "ChipPerUnit" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.DealInShop), global::Api.DealInShop.Parser, new[]{ "Best", "Iaps", "Gcashes", "Sms" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.LeaderBoardRecord), global::Api.LeaderBoardRecord.Parser, new[]{ "GameCode", "UserId", "Score", "CdResetUnix" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.ExchangeInfo), global::Api.ExchangeInfo.Parser, new[]{ "Id", "IdDeal", "Chips", "Price", "Status", "Unlock", "CashId", "CashType", "UserIdRequest", "UserNameRequest", "VipLv", "DeviceId", "UserIdHandling", "UserNameHandling", "Reason", "Cursor", "CreateTime" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.ExchangeDealInShop), global::Api.ExchangeDealInShop.Parser, new[]{ "Gcashes" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.ListExchangeInfo), global::Api.ListExchangeInfo.Parser, new[]{ "ExchangeInfos", "NextCusor", "PrevCusor", "Total", "Offset", "Limit", "From", "To" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.ExchangeRequest), global::Api.ExchangeRequest.Parser, new[]{ "Id", "UserIdRequest", "Limit", "From", "To", "Cusor", "CashType" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.Reward), global::Api.Reward.Parser, new[]{ "BasicChip", "PercentBonus", "BonusChip", "OnlineChip", "TotalChip", "Streak", "OnlineSec", "CanClaim", "NumClaim", "LastClaimUnix", "NextClaimUnix", "NextClaimSec", "ReachMaxStreak", "LastSpinNumber", "LastOnlineUnix" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.RewardTemplate), global::Api.RewardTemplate.Parser, new[]{ "BasicChips", "PercenBonus", "OnlineSec", "OnlineChip", "Streak" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.LastClaimReward), global::Api.LastClaimReward.Parser, new[]{ "LastClaimUnix", "NextClaimUnix", "Streak", "LastSpinNumber", "ReachMaxStreak", "NumClaim" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.DailyRewardTemplate), global::Api.DailyRewardTemplate.Parser, new[]{ "RewardTemplates" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.UserGroup), global::Api.UserGroup.Parser, new[]{ "Id", "Name" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.ListUserGroup), global::Api.ListUserGroup.Parser, new[]{ "UserGroups", "NextCusor", "PrevCusor", "Total", "Offset", "Limit" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.UserGroupRequest), global::Api.UserGroupRequest.Parser, new[]{ "Limit", "Cusor" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.GiftCode), global::Api.GiftCode.Parser, new[]{ "Id", "Code", "NCurrent", "NMax", "Value", "StartTimeUnix", "EndTimeUnix", "Message", "Vip", "GiftCodeType", "ReachMaxClaim", "AlreadyClaim", "UserId", "OpenToClaim", "ErrCode" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.ListGiftCode), global::Api.ListGiftCode.Parser, new[]{ "GiftCodes", "Total", "Offset", "Limit" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.AddNotificationRequest), global::Api.AddNotificationRequest.Parser, new[]{ "RecipientIds", "UserGroupId", "Type", "Title", "Content", "SenderId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.Notification), global::Api.Notification.Parser, new[]{ "Id", "RecipientId", "Type", "Title", "Content", "SenderId", "Read", "CreateTimeUnix", "AppPackage", "GameId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.NotificationRequest), global::Api.NotificationRequest.Parser, new[]{ "Limit", "Cusor", "Type" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.ListNotification), global::Api.ListNotification.Parser, new[]{ "Notifications", "NextCusor", "PrevCusor", "Total", "Offset", "Limit" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.RangeTime), global::Api.RangeTime.Parser, new[]{ "From", "To" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.InAppMessageData), global::Api.InAppMessageData.Parser, new[]{ "Action", "Target", "Params", "ShowTimes" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.InAppMessage), global::Api.InAppMessage.Parser, new[]{ "Id", "HighPriority", "GroupIds", "Type", "Data", "StartDate", "EndDate", "CreateTimeUnix", "AppPackage", "GameId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.InAppMessageRequest), global::Api.InAppMessageRequest.Parser, new[]{ "Limit", "Cusor", "Type" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.ListInAppMessage), global::Api.ListInAppMessage.Parser, new[]{ "InAppMessages", "NextCusor", "PrevCusor", "Total", "Offset", "Limit" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.DefaultResponse), global::Api.DefaultResponse.Parser, new[]{ "Message", "Code", "Status" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.PreSignPutRequest), global::Api.PreSignPutRequest.Parser, new[]{ "FileName", "BucketName" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.PreSignPutResponse), global::Api.PreSignPutResponse.Parser, new[]{ "Url" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.ReferUser), global::Api.ReferUser.Parser, new[]{ "Id", "UserInvitor", "UserInvitee", "CreateTimeUnix" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.RewardReferTemplate), global::Api.RewardReferTemplate.Parser, new[]{ "Min", "Max", "Rate" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.ListRewardReferTemplate), global::Api.ListRewardReferTemplate.Parser, new[]{ "RewardRefers" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.RewardRefer), global::Api.RewardRefer.Parser, new[]{ "Id", "UserId", "WinAmt", "EstRewardLv", "EstReward", "EstRateReward", "UserRefers", "ListRewards", "FromUnix", "ToUnix", "TotalUserRefer", "UpdateTimeUnix", "SendToWallet", "CreateTimeUnix", "RemainTimeResetSec" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.ListRewardRefer), global::Api.ListRewardRefer.Parser, new[]{ "UserRefers" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.HistoryRewardRequest), global::Api.HistoryRewardRequest.Parser, new[]{ "UserId", "Time", "From", "To" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.WalletTransRequest), global::Api.WalletTransRequest.Parser, new[]{ "Limit", "Cusor", "MetaAction", "MetaBankAction" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.Error), global::Api.Error.Parser, new[]{ "Code", "Error_", "ErrorType" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.Request), global::Api.Request.Parser, new[]{ "UserId", "Body" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.Response), global::Api.Response.Parser, new[]{ "Body", "ErrorMessage" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.UserMeta), global::Api.UserMeta.Parser, new[]{ "UserId", "Vip", "TotalChipsTopup", "TotalChipsCashout", "TotalChipsSend", "AgPlay", "AgBank", "TotalChipsCashoutInday" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.Range), global::Api.Range.Parser, new[]{ "Min", "Max" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.RuleLucky), global::Api.RuleLucky.Parser, new[]{ "Id", "DeletedAt", "EmitEventAtUnix", "GameCode", "Rtp", "Mark", "Vip", "ReDeal", "WinMarkRatio" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.RulesLucky), global::Api.RulesLucky.Parser, new[]{ "Rules", "Limit", "Offset", "Total" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum TypeChat {
    [pbr::OriginalName("TYPE_CHAT_UNSPECIFIED")] Unspecified = 0,
    [pbr::OriginalName("TYPE_CHAT_ROOM")] Room = 1,
    [pbr::OriginalName("TYPE_CHAT_DIRECTMSG")] Directmsg = 2,
    [pbr::OriginalName("TYPE_CHAT_GROUUP")] Grouup = 3,
  }

  public enum ExchangeStatus {
    [pbr::OriginalName("EXCHANGE_STATUS_UNSPECIFIED")] Unspecified = 0,
    [pbr::OriginalName("EXCHANGE_STATUS_WAITING")] Waiting = 1,
    [pbr::OriginalName("EXCHANGE_STATUS_CANCEL_BY_USER")] CancelByUser = 2,
    [pbr::OriginalName("EXCHANGE_STATUS_PENDING")] Pending = 3,
    [pbr::OriginalName("EXCHANGE_STATUS_DONE")] Done = 4,
    [pbr::OriginalName("EXCHANGE_STATUS_REJECT")] Reject = 5,
  }

  public enum GiftCodeType {
    [pbr::OriginalName("GIFT_CODE_TYPE_UNSPECIFIED")] Unspecified = 0,
    [pbr::OriginalName("GIFT_CODE_TYPE_GAME")] Game = 1,
  }

  public enum GiftCodeError {
    [pbr::OriginalName("GIFT_CODE_ERROR_UNSPECIFIED")] Unspecified = 0,
    [pbr::OriginalName("GIFT_CODE_ERROR_NOT_OPEN")] NotOpen = 1,
    [pbr::OriginalName("GIFT_CODE_ERROR_HAS_CLOSED")] HasClosed = 2,
    [pbr::OriginalName("GIFT_CODE_ERROR_REACH_MAX_CLAIMED")] ReachMaxClaimed = 3,
    [pbr::OriginalName("GIFT_CODE_ERROR_ALREADY_CLAIMED")] AlreadyClaimed = 4,
    [pbr::OriginalName("GIFT_CODE_ERROR_LV_VIP_NOT_MEET_REQUIRE")] LvVipNotMeetRequire = 5,
  }

  public enum TypeNotification {
    [pbr::OriginalName("RESERVED")] Reserved = 0,
    [pbr::OriginalName("MAIL_BOX")] MailBox = 1,
    [pbr::OriginalName("GIFT")] Gift = 2,
  }

  public enum TypeInAppMessage {
    [pbr::OriginalName("HOT_NEWS")] HotNews = 0,
    [pbr::OriginalName("BANNER")] Banner = 1,
  }

  public enum InAppMessageAction {
    [pbr::OriginalName("NONE")] None = 0,
    [pbr::OriginalName("NAVIGATE")] Navigate = 1,
    [pbr::OriginalName("OPEN_URL")] OpenUrl = 2,
  }

  public enum HistoryRewardTime {
    [pbr::OriginalName("HISTORY_REWARD_TIME_UNSPECIFIED")] Unspecified = 0,
    [pbr::OriginalName("HISTORY_REWARD_TIME_THIS_WEEK")] ThisWeek = 1,
    [pbr::OriginalName("HISTORY_REWARD_TIME_LAST_WEEK")] LastWeek = 2,
    [pbr::OriginalName("HISTORY_REWARD_TIME_THIS_MONTH")] ThisMonth = 3,
    [pbr::OriginalName("HISTORY_REWARD_TIME_LAST_MONTH")] LastMonth = 4,
  }

  public enum ErrorType {
    [pbr::OriginalName("ERROR_TYPE_UNSPECIFIED")] Unspecified = 0,
    [pbr::OriginalName("ERROR_TYPE_CHIP_NOT_ENOUGH")] ChipNotEnough = 1,
  }

  #endregion

  #region Messages
  public sealed partial class Game : pb::IMessage<Game>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Game> _parser = new pb::MessageParser<Game>(() => new Game());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Game> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.CommonApiReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Game() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Game(Game other) : this() {
      code_ = other.code_;
      active_ = other.active_;
      lobbyId_ = other.lobbyId_;
      layout_ = other.layout_ != null ? other.layout_.Clone() : null;
      id_ = other.id_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Game Clone() {
      return new Game(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private string code_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Code {
      get { return code_; }
      set {
        code_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "active" field.</summary>
    public const int ActiveFieldNumber = 2;
    private bool active_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Active {
      get { return active_; }
      set {
        active_ = value;
      }
    }

    /// <summary>Field number for the "lobby_id" field.</summary>
    public const int LobbyIdFieldNumber = 3;
    private string lobbyId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LobbyId {
      get { return lobbyId_; }
      set {
        lobbyId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "layout" field.</summary>
    public const int LayoutFieldNumber = 4;
    private global::Api.Layout layout_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Api.Layout Layout {
      get { return layout_; }
      set {
        layout_ = value;
      }
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 5;
    private long id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Game);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Game other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if (Active != other.Active) return false;
      if (LobbyId != other.LobbyId) return false;
      if (!object.Equals(Layout, other.Layout)) return false;
      if (Id != other.Id) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Code.Length != 0) hash ^= Code.GetHashCode();
      if (Active != false) hash ^= Active.GetHashCode();
      if (LobbyId.Length != 0) hash ^= LobbyId.GetHashCode();
      if (layout_ != null) hash ^= Layout.GetHashCode();
      if (Id != 0L) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Code.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Code);
      }
      if (Active != false) {
        output.WriteRawTag(16);
        output.WriteBool(Active);
      }
      if (LobbyId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(LobbyId);
      }
      if (layout_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Layout);
      }
      if (Id != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Code.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Code);
      }
      if (Active != false) {
        output.WriteRawTag(16);
        output.WriteBool(Active);
      }
      if (LobbyId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(LobbyId);
      }
      if (layout_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Layout);
      }
      if (Id != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Code.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Code);
      }
      if (Active != false) {
        size += 1 + 1;
      }
      if (LobbyId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LobbyId);
      }
      if (layout_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Layout);
      }
      if (Id != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Game other) {
      if (other == null) {
        return;
      }
      if (other.Code.Length != 0) {
        Code = other.Code;
      }
      if (other.Active != false) {
        Active = other.Active;
      }
      if (other.LobbyId.Length != 0) {
        LobbyId = other.LobbyId;
      }
      if (other.layout_ != null) {
        if (layout_ == null) {
          Layout = new global::Api.Layout();
        }
        Layout.MergeFrom(other.Layout);
      }
      if (other.Id != 0L) {
        Id = other.Id;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Code = input.ReadString();
            break;
          }
          case 16: {
            Active = input.ReadBool();
            break;
          }
          case 26: {
            LobbyId = input.ReadString();
            break;
          }
          case 34: {
            if (layout_ == null) {
              Layout = new global::Api.Layout();
            }
            input.ReadMessage(Layout);
            break;
          }
          case 40: {
            Id = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Code = input.ReadString();
            break;
          }
          case 16: {
            Active = input.ReadBool();
            break;
          }
          case 26: {
            LobbyId = input.ReadString();
            break;
          }
          case 34: {
            if (layout_ == null) {
              Layout = new global::Api.Layout();
            }
            input.ReadMessage(Layout);
            break;
          }
          case 40: {
            Id = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Layout : pb::IMessage<Layout>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Layout> _parser = new pb::MessageParser<Layout>(() => new Layout());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Layout> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.CommonApiReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Layout() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Layout(Layout other) : this() {
      col_ = other.col_;
      row_ = other.row_;
      colSpan_ = other.colSpan_;
      rowSpan_ = other.rowSpan_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Layout Clone() {
      return new Layout(this);
    }

    /// <summary>Field number for the "col" field.</summary>
    public const int ColFieldNumber = 1;
    private int col_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Col {
      get { return col_; }
      set {
        col_ = value;
      }
    }

    /// <summary>Field number for the "row" field.</summary>
    public const int RowFieldNumber = 2;
    private int row_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Row {
      get { return row_; }
      set {
        row_ = value;
      }
    }

    /// <summary>Field number for the "col_span" field.</summary>
    public const int ColSpanFieldNumber = 3;
    private int colSpan_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ColSpan {
      get { return colSpan_; }
      set {
        colSpan_ = value;
      }
    }

    /// <summary>Field number for the "row_span" field.</summary>
    public const int RowSpanFieldNumber = 4;
    private int rowSpan_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RowSpan {
      get { return rowSpan_; }
      set {
        rowSpan_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Layout);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Layout other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Col != other.Col) return false;
      if (Row != other.Row) return false;
      if (ColSpan != other.ColSpan) return false;
      if (RowSpan != other.RowSpan) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Col != 0) hash ^= Col.GetHashCode();
      if (Row != 0) hash ^= Row.GetHashCode();
      if (ColSpan != 0) hash ^= ColSpan.GetHashCode();
      if (RowSpan != 0) hash ^= RowSpan.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Col != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Col);
      }
      if (Row != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Row);
      }
      if (ColSpan != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(ColSpan);
      }
      if (RowSpan != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(RowSpan);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Col != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Col);
      }
      if (Row != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Row);
      }
      if (ColSpan != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(ColSpan);
      }
      if (RowSpan != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(RowSpan);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Col != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Col);
      }
      if (Row != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Row);
      }
      if (ColSpan != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ColSpan);
      }
      if (RowSpan != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RowSpan);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Layout other) {
      if (other == null) {
        return;
      }
      if (other.Col != 0) {
        Col = other.Col;
      }
      if (other.Row != 0) {
        Row = other.Row;
      }
      if (other.ColSpan != 0) {
        ColSpan = other.ColSpan;
      }
      if (other.RowSpan != 0) {
        RowSpan = other.RowSpan;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Col = input.ReadInt32();
            break;
          }
          case 16: {
            Row = input.ReadInt32();
            break;
          }
          case 24: {
            ColSpan = input.ReadInt32();
            break;
          }
          case 32: {
            RowSpan = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Col = input.ReadInt32();
            break;
          }
          case 16: {
            Row = input.ReadInt32();
            break;
          }
          case 24: {
            ColSpan = input.ReadInt32();
            break;
          }
          case 32: {
            RowSpan = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GameListResponse : pb::IMessage<GameListResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GameListResponse> _parser = new pb::MessageParser<GameListResponse>(() => new GameListResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GameListResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.CommonApiReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameListResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameListResponse(GameListResponse other) : this() {
      games_ = other.games_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameListResponse Clone() {
      return new GameListResponse(this);
    }

    /// <summary>Field number for the "games" field.</summary>
    public const int GamesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Api.Game> _repeated_games_codec
        = pb::FieldCodec.ForMessage(10, global::Api.Game.Parser);
    private readonly pbc::RepeatedField<global::Api.Game> games_ = new pbc::RepeatedField<global::Api.Game>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Api.Game> Games {
      get { return games_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GameListResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GameListResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!games_.Equals(other.games_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= games_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      games_.WriteTo(output, _repeated_games_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      games_.WriteTo(ref output, _repeated_games_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += games_.CalculateSize(_repeated_games_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GameListResponse other) {
      if (other == null) {
        return;
      }
      games_.Add(other.games_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            games_.AddEntriesFrom(input, _repeated_games_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            games_.AddEntriesFrom(ref input, _repeated_games_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class BetListRequest : pb::IMessage<BetListRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BetListRequest> _parser = new pb::MessageParser<BetListRequest>(() => new BetListRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BetListRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.CommonApiReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BetListRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BetListRequest(BetListRequest other) : this() {
      code_ = other.code_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BetListRequest Clone() {
      return new BetListRequest(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private string code_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Code {
      get { return code_; }
      set {
        code_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BetListRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BetListRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Code.Length != 0) hash ^= Code.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Code.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Code);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Code.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Code);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Code.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Code);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BetListRequest other) {
      if (other == null) {
        return;
      }
      if (other.Code.Length != 0) {
        Code = other.Code;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Code = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Code = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class BetListResponse : pb::IMessage<BetListResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BetListResponse> _parser = new pb::MessageParser<BetListResponse>(() => new BetListResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BetListResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.CommonApiReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BetListResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BetListResponse(BetListResponse other) : this() {
      bets_ = other.bets_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BetListResponse Clone() {
      return new BetListResponse(this);
    }

    /// <summary>Field number for the "bets" field.</summary>
    public const int BetsFieldNumber = 1;
    private static readonly pb::FieldCodec<int> _repeated_bets_codec
        = pb::FieldCodec.ForInt32(10);
    private readonly pbc::RepeatedField<int> bets_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> Bets {
      get { return bets_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BetListResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BetListResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!bets_.Equals(other.bets_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= bets_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      bets_.WriteTo(output, _repeated_bets_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      bets_.WriteTo(ref output, _repeated_bets_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += bets_.CalculateSize(_repeated_bets_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BetListResponse other) {
      if (other == null) {
        return;
      }
      bets_.Add(other.bets_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            bets_.AddEntriesFrom(input, _repeated_bets_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10:
          case 8: {
            bets_.AddEntriesFrom(ref input, _repeated_bets_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Chat : pb::IMessage<Chat>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Chat> _parser = new pb::MessageParser<Chat>(() => new Chat());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Chat> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.CommonApiReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Chat() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Chat(Chat other) : this() {
      typeChat_ = other.typeChat_;
      id_ = other.id_;
      content_ = other.content_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Chat Clone() {
      return new Chat(this);
    }

    /// <summary>Field number for the "type_chat" field.</summary>
    public const int TypeChatFieldNumber = 1;
    private global::Api.TypeChat typeChat_ = global::Api.TypeChat.Unspecified;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Api.TypeChat TypeChat {
      get { return typeChat_; }
      set {
        typeChat_ = value;
      }
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 2;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "content" field.</summary>
    public const int ContentFieldNumber = 3;
    private string content_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Content {
      get { return content_; }
      set {
        content_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Chat);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Chat other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TypeChat != other.TypeChat) return false;
      if (Id != other.Id) return false;
      if (Content != other.Content) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TypeChat != global::Api.TypeChat.Unspecified) hash ^= TypeChat.GetHashCode();
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Content.Length != 0) hash ^= Content.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (TypeChat != global::Api.TypeChat.Unspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) TypeChat);
      }
      if (Id.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Id);
      }
      if (Content.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Content);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (TypeChat != global::Api.TypeChat.Unspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) TypeChat);
      }
      if (Id.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Id);
      }
      if (Content.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Content);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TypeChat != global::Api.TypeChat.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) TypeChat);
      }
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Content.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Content);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Chat other) {
      if (other == null) {
        return;
      }
      if (other.TypeChat != global::Api.TypeChat.Unspecified) {
        TypeChat = other.TypeChat;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Content.Length != 0) {
        Content = other.Content;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TypeChat = (global::Api.TypeChat) input.ReadEnum();
            break;
          }
          case 18: {
            Id = input.ReadString();
            break;
          }
          case 26: {
            Content = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            TypeChat = (global::Api.TypeChat) input.ReadEnum();
            break;
          }
          case 18: {
            Id = input.ReadString();
            break;
          }
          case 26: {
            Content = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class FreeChip : pb::IMessage<FreeChip>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FreeChip> _parser = new pb::MessageParser<FreeChip>(() => new FreeChip());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FreeChip> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.CommonApiReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FreeChip() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FreeChip(FreeChip other) : this() {
      id_ = other.id_;
      senderId_ = other.senderId_;
      recipientId_ = other.recipientId_;
      title_ = other.title_;
      content_ = other.content_;
      chips_ = other.chips_;
      claimable_ = other.claimable_;
      action_ = other.action_;
      claimTimeUnix_ = other.claimTimeUnix_;
      claimStaus_ = other.claimStaus_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FreeChip Clone() {
      return new FreeChip(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private long id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "sender_id" field.</summary>
    public const int SenderIdFieldNumber = 2;
    private string senderId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SenderId {
      get { return senderId_; }
      set {
        senderId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "recipient_id" field.</summary>
    public const int RecipientIdFieldNumber = 3;
    private string recipientId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RecipientId {
      get { return recipientId_; }
      set {
        recipientId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "title" field.</summary>
    public const int TitleFieldNumber = 4;
    private string title_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Title {
      get { return title_; }
      set {
        title_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "content" field.</summary>
    public const int ContentFieldNumber = 5;
    private string content_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Content {
      get { return content_; }
      set {
        content_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "chips" field.</summary>
    public const int ChipsFieldNumber = 6;
    private long chips_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Chips {
      get { return chips_; }
      set {
        chips_ = value;
      }
    }

    /// <summary>Field number for the "claimable" field.</summary>
    public const int ClaimableFieldNumber = 7;
    private bool claimable_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Claimable {
      get { return claimable_; }
      set {
        claimable_ = value;
      }
    }

    /// <summary>Field number for the "action" field.</summary>
    public const int ActionFieldNumber = 8;
    private string action_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Action {
      get { return action_; }
      set {
        action_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "claim_time_unix" field.</summary>
    public const int ClaimTimeUnixFieldNumber = 9;
    private long claimTimeUnix_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ClaimTimeUnix {
      get { return claimTimeUnix_; }
      set {
        claimTimeUnix_ = value;
      }
    }

    /// <summary>Field number for the "claim_staus" field.</summary>
    public const int ClaimStausFieldNumber = 10;
    private global::Api.FreeChip.Types.ClaimStatus claimStaus_ = global::Api.FreeChip.Types.ClaimStatus.Unspecified;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Api.FreeChip.Types.ClaimStatus ClaimStaus {
      get { return claimStaus_; }
      set {
        claimStaus_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FreeChip);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FreeChip other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (SenderId != other.SenderId) return false;
      if (RecipientId != other.RecipientId) return false;
      if (Title != other.Title) return false;
      if (Content != other.Content) return false;
      if (Chips != other.Chips) return false;
      if (Claimable != other.Claimable) return false;
      if (Action != other.Action) return false;
      if (ClaimTimeUnix != other.ClaimTimeUnix) return false;
      if (ClaimStaus != other.ClaimStaus) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0L) hash ^= Id.GetHashCode();
      if (SenderId.Length != 0) hash ^= SenderId.GetHashCode();
      if (RecipientId.Length != 0) hash ^= RecipientId.GetHashCode();
      if (Title.Length != 0) hash ^= Title.GetHashCode();
      if (Content.Length != 0) hash ^= Content.GetHashCode();
      if (Chips != 0L) hash ^= Chips.GetHashCode();
      if (Claimable != false) hash ^= Claimable.GetHashCode();
      if (Action.Length != 0) hash ^= Action.GetHashCode();
      if (ClaimTimeUnix != 0L) hash ^= ClaimTimeUnix.GetHashCode();
      if (ClaimStaus != global::Api.FreeChip.Types.ClaimStatus.Unspecified) hash ^= ClaimStaus.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Id);
      }
      if (SenderId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SenderId);
      }
      if (RecipientId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(RecipientId);
      }
      if (Title.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Title);
      }
      if (Content.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Content);
      }
      if (Chips != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(Chips);
      }
      if (Claimable != false) {
        output.WriteRawTag(56);
        output.WriteBool(Claimable);
      }
      if (Action.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Action);
      }
      if (ClaimTimeUnix != 0L) {
        output.WriteRawTag(72);
        output.WriteInt64(ClaimTimeUnix);
      }
      if (ClaimStaus != global::Api.FreeChip.Types.ClaimStatus.Unspecified) {
        output.WriteRawTag(80);
        output.WriteEnum((int) ClaimStaus);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Id);
      }
      if (SenderId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SenderId);
      }
      if (RecipientId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(RecipientId);
      }
      if (Title.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Title);
      }
      if (Content.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Content);
      }
      if (Chips != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(Chips);
      }
      if (Claimable != false) {
        output.WriteRawTag(56);
        output.WriteBool(Claimable);
      }
      if (Action.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Action);
      }
      if (ClaimTimeUnix != 0L) {
        output.WriteRawTag(72);
        output.WriteInt64(ClaimTimeUnix);
      }
      if (ClaimStaus != global::Api.FreeChip.Types.ClaimStatus.Unspecified) {
        output.WriteRawTag(80);
        output.WriteEnum((int) ClaimStaus);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Id);
      }
      if (SenderId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SenderId);
      }
      if (RecipientId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RecipientId);
      }
      if (Title.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Title);
      }
      if (Content.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Content);
      }
      if (Chips != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Chips);
      }
      if (Claimable != false) {
        size += 1 + 1;
      }
      if (Action.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Action);
      }
      if (ClaimTimeUnix != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ClaimTimeUnix);
      }
      if (ClaimStaus != global::Api.FreeChip.Types.ClaimStatus.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ClaimStaus);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FreeChip other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0L) {
        Id = other.Id;
      }
      if (other.SenderId.Length != 0) {
        SenderId = other.SenderId;
      }
      if (other.RecipientId.Length != 0) {
        RecipientId = other.RecipientId;
      }
      if (other.Title.Length != 0) {
        Title = other.Title;
      }
      if (other.Content.Length != 0) {
        Content = other.Content;
      }
      if (other.Chips != 0L) {
        Chips = other.Chips;
      }
      if (other.Claimable != false) {
        Claimable = other.Claimable;
      }
      if (other.Action.Length != 0) {
        Action = other.Action;
      }
      if (other.ClaimTimeUnix != 0L) {
        ClaimTimeUnix = other.ClaimTimeUnix;
      }
      if (other.ClaimStaus != global::Api.FreeChip.Types.ClaimStatus.Unspecified) {
        ClaimStaus = other.ClaimStaus;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt64();
            break;
          }
          case 18: {
            SenderId = input.ReadString();
            break;
          }
          case 26: {
            RecipientId = input.ReadString();
            break;
          }
          case 34: {
            Title = input.ReadString();
            break;
          }
          case 42: {
            Content = input.ReadString();
            break;
          }
          case 48: {
            Chips = input.ReadInt64();
            break;
          }
          case 56: {
            Claimable = input.ReadBool();
            break;
          }
          case 66: {
            Action = input.ReadString();
            break;
          }
          case 72: {
            ClaimTimeUnix = input.ReadInt64();
            break;
          }
          case 80: {
            ClaimStaus = (global::Api.FreeChip.Types.ClaimStatus) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt64();
            break;
          }
          case 18: {
            SenderId = input.ReadString();
            break;
          }
          case 26: {
            RecipientId = input.ReadString();
            break;
          }
          case 34: {
            Title = input.ReadString();
            break;
          }
          case 42: {
            Content = input.ReadString();
            break;
          }
          case 48: {
            Chips = input.ReadInt64();
            break;
          }
          case 56: {
            Claimable = input.ReadBool();
            break;
          }
          case 66: {
            Action = input.ReadString();
            break;
          }
          case 72: {
            ClaimTimeUnix = input.ReadInt64();
            break;
          }
          case 80: {
            ClaimStaus = (global::Api.FreeChip.Types.ClaimStatus) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the FreeChip message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum ClaimStatus {
        [pbr::OriginalName("CLAIM_STATUS_UNSPECIFIED")] Unspecified = 0,
        [pbr::OriginalName("CLAIM_STATUS_WAIT_ADMIN_ACCEPT")] WaitAdminAccept = 1,
        [pbr::OriginalName("CLAIM_STATUS_WAIT_USER_CLAIM")] WaitUserClaim = 2,
        [pbr::OriginalName("CLAIM_STATUS_CLAIMED")] Claimed = 3,
        [pbr::OriginalName("CLAIM_STATUS_REJECT")] Reject = 4,
      }

    }
    #endregion

  }

  public sealed partial class FreeChipRequest : pb::IMessage<FreeChipRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FreeChipRequest> _parser = new pb::MessageParser<FreeChipRequest>(() => new FreeChipRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FreeChipRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.CommonApiReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FreeChipRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FreeChipRequest(FreeChipRequest other) : this() {
      userId_ = other.userId_;
      limit_ = other.limit_;
      cusor_ = other.cusor_;
      claimStaus_ = other.claimStaus_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FreeChipRequest Clone() {
      return new FreeChipRequest(this);
    }

    /// <summary>Field number for the "user_id" field.</summary>
    public const int UserIdFieldNumber = 1;
    private string userId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserId {
      get { return userId_; }
      set {
        userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "limit" field.</summary>
    public const int LimitFieldNumber = 2;
    private long limit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Limit {
      get { return limit_; }
      set {
        limit_ = value;
      }
    }

    /// <summary>Field number for the "cusor" field.</summary>
    public const int CusorFieldNumber = 3;
    private string cusor_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Cusor {
      get { return cusor_; }
      set {
        cusor_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "claim_staus" field.</summary>
    public const int ClaimStausFieldNumber = 4;
    private global::Api.FreeChip.Types.ClaimStatus claimStaus_ = global::Api.FreeChip.Types.ClaimStatus.Unspecified;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Api.FreeChip.Types.ClaimStatus ClaimStaus {
      get { return claimStaus_; }
      set {
        claimStaus_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FreeChipRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FreeChipRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserId != other.UserId) return false;
      if (Limit != other.Limit) return false;
      if (Cusor != other.Cusor) return false;
      if (ClaimStaus != other.ClaimStaus) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserId.Length != 0) hash ^= UserId.GetHashCode();
      if (Limit != 0L) hash ^= Limit.GetHashCode();
      if (Cusor.Length != 0) hash ^= Cusor.GetHashCode();
      if (ClaimStaus != global::Api.FreeChip.Types.ClaimStatus.Unspecified) hash ^= ClaimStaus.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (UserId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UserId);
      }
      if (Limit != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Limit);
      }
      if (Cusor.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Cusor);
      }
      if (ClaimStaus != global::Api.FreeChip.Types.ClaimStatus.Unspecified) {
        output.WriteRawTag(32);
        output.WriteEnum((int) ClaimStaus);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (UserId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UserId);
      }
      if (Limit != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Limit);
      }
      if (Cusor.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Cusor);
      }
      if (ClaimStaus != global::Api.FreeChip.Types.ClaimStatus.Unspecified) {
        output.WriteRawTag(32);
        output.WriteEnum((int) ClaimStaus);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
      }
      if (Limit != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Limit);
      }
      if (Cusor.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Cusor);
      }
      if (ClaimStaus != global::Api.FreeChip.Types.ClaimStatus.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ClaimStaus);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FreeChipRequest other) {
      if (other == null) {
        return;
      }
      if (other.UserId.Length != 0) {
        UserId = other.UserId;
      }
      if (other.Limit != 0L) {
        Limit = other.Limit;
      }
      if (other.Cusor.Length != 0) {
        Cusor = other.Cusor;
      }
      if (other.ClaimStaus != global::Api.FreeChip.Types.ClaimStatus.Unspecified) {
        ClaimStaus = other.ClaimStaus;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            UserId = input.ReadString();
            break;
          }
          case 16: {
            Limit = input.ReadInt64();
            break;
          }
          case 26: {
            Cusor = input.ReadString();
            break;
          }
          case 32: {
            ClaimStaus = (global::Api.FreeChip.Types.ClaimStatus) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            UserId = input.ReadString();
            break;
          }
          case 16: {
            Limit = input.ReadInt64();
            break;
          }
          case 26: {
            Cusor = input.ReadString();
            break;
          }
          case 32: {
            ClaimStaus = (global::Api.FreeChip.Types.ClaimStatus) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ListFreeChip : pb::IMessage<ListFreeChip>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ListFreeChip> _parser = new pb::MessageParser<ListFreeChip>(() => new ListFreeChip());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListFreeChip> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.CommonApiReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListFreeChip() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListFreeChip(ListFreeChip other) : this() {
      freechips_ = other.freechips_.Clone();
      nextCusor_ = other.nextCusor_;
      prevCusor_ = other.prevCusor_;
      total_ = other.total_;
      offset_ = other.offset_;
      limit_ = other.limit_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListFreeChip Clone() {
      return new ListFreeChip(this);
    }

    /// <summary>Field number for the "freechips" field.</summary>
    public const int FreechipsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Api.FreeChip> _repeated_freechips_codec
        = pb::FieldCodec.ForMessage(10, global::Api.FreeChip.Parser);
    private readonly pbc::RepeatedField<global::Api.FreeChip> freechips_ = new pbc::RepeatedField<global::Api.FreeChip>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Api.FreeChip> Freechips {
      get { return freechips_; }
    }

    /// <summary>Field number for the "next_cusor" field.</summary>
    public const int NextCusorFieldNumber = 2;
    private string nextCusor_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NextCusor {
      get { return nextCusor_; }
      set {
        nextCusor_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "prev_cusor" field.</summary>
    public const int PrevCusorFieldNumber = 3;
    private string prevCusor_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PrevCusor {
      get { return prevCusor_; }
      set {
        prevCusor_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "total" field.</summary>
    public const int TotalFieldNumber = 4;
    private long total_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Total {
      get { return total_; }
      set {
        total_ = value;
      }
    }

    /// <summary>Field number for the "offset" field.</summary>
    public const int OffsetFieldNumber = 5;
    private long offset_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Offset {
      get { return offset_; }
      set {
        offset_ = value;
      }
    }

    /// <summary>Field number for the "limit" field.</summary>
    public const int LimitFieldNumber = 6;
    private long limit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Limit {
      get { return limit_; }
      set {
        limit_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListFreeChip);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListFreeChip other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!freechips_.Equals(other.freechips_)) return false;
      if (NextCusor != other.NextCusor) return false;
      if (PrevCusor != other.PrevCusor) return false;
      if (Total != other.Total) return false;
      if (Offset != other.Offset) return false;
      if (Limit != other.Limit) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= freechips_.GetHashCode();
      if (NextCusor.Length != 0) hash ^= NextCusor.GetHashCode();
      if (PrevCusor.Length != 0) hash ^= PrevCusor.GetHashCode();
      if (Total != 0L) hash ^= Total.GetHashCode();
      if (Offset != 0L) hash ^= Offset.GetHashCode();
      if (Limit != 0L) hash ^= Limit.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      freechips_.WriteTo(output, _repeated_freechips_codec);
      if (NextCusor.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(NextCusor);
      }
      if (PrevCusor.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(PrevCusor);
      }
      if (Total != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(Total);
      }
      if (Offset != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(Offset);
      }
      if (Limit != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(Limit);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      freechips_.WriteTo(ref output, _repeated_freechips_codec);
      if (NextCusor.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(NextCusor);
      }
      if (PrevCusor.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(PrevCusor);
      }
      if (Total != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(Total);
      }
      if (Offset != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(Offset);
      }
      if (Limit != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(Limit);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += freechips_.CalculateSize(_repeated_freechips_codec);
      if (NextCusor.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NextCusor);
      }
      if (PrevCusor.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PrevCusor);
      }
      if (Total != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Total);
      }
      if (Offset != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Offset);
      }
      if (Limit != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Limit);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListFreeChip other) {
      if (other == null) {
        return;
      }
      freechips_.Add(other.freechips_);
      if (other.NextCusor.Length != 0) {
        NextCusor = other.NextCusor;
      }
      if (other.PrevCusor.Length != 0) {
        PrevCusor = other.PrevCusor;
      }
      if (other.Total != 0L) {
        Total = other.Total;
      }
      if (other.Offset != 0L) {
        Offset = other.Offset;
      }
      if (other.Limit != 0L) {
        Limit = other.Limit;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            freechips_.AddEntriesFrom(input, _repeated_freechips_codec);
            break;
          }
          case 18: {
            NextCusor = input.ReadString();
            break;
          }
          case 26: {
            PrevCusor = input.ReadString();
            break;
          }
          case 32: {
            Total = input.ReadInt64();
            break;
          }
          case 40: {
            Offset = input.ReadInt64();
            break;
          }
          case 48: {
            Limit = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            freechips_.AddEntriesFrom(ref input, _repeated_freechips_codec);
            break;
          }
          case 18: {
            NextCusor = input.ReadString();
            break;
          }
          case 26: {
            PrevCusor = input.ReadString();
            break;
          }
          case 32: {
            Total = input.ReadInt64();
            break;
          }
          case 40: {
            Offset = input.ReadInt64();
            break;
          }
          case 48: {
            Limit = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Deal : pb::IMessage<Deal>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Deal> _parser = new pb::MessageParser<Deal>(() => new Deal());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Deal> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.CommonApiReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Deal() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Deal(Deal other) : this() {
      id_ = other.id_;
      chips_ = other.chips_;
      amountChips_ = other.amountChips_;
      bonus_ = other.bonus_;
      price_ = other.price_;
      name_ = other.name_;
      currency_ = other.currency_;
      percent_ = other.percent_;
      chipPerUnit_ = other.chipPerUnit_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Deal Clone() {
      return new Deal(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "chips" field.</summary>
    public const int ChipsFieldNumber = 2;
    private long chips_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Chips {
      get { return chips_; }
      set {
        chips_ = value;
      }
    }

    /// <summary>Field number for the "amount_chips" field.</summary>
    public const int AmountChipsFieldNumber = 3;
    private long amountChips_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long AmountChips {
      get { return amountChips_; }
      set {
        amountChips_ = value;
      }
    }

    /// <summary>Field number for the "bonus" field.</summary>
    public const int BonusFieldNumber = 4;
    private long bonus_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Bonus {
      get { return bonus_; }
      set {
        bonus_ = value;
      }
    }

    /// <summary>Field number for the "price" field.</summary>
    public const int PriceFieldNumber = 5;
    private string price_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Price {
      get { return price_; }
      set {
        price_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 6;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "currency" field.</summary>
    public const int CurrencyFieldNumber = 7;
    private string currency_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Currency {
      get { return currency_; }
      set {
        currency_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "percent" field.</summary>
    public const int PercentFieldNumber = 8;
    private string percent_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Percent {
      get { return percent_; }
      set {
        percent_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "chip_per_unit" field.</summary>
    public const int ChipPerUnitFieldNumber = 9;
    private long chipPerUnit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ChipPerUnit {
      get { return chipPerUnit_; }
      set {
        chipPerUnit_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Deal);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Deal other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Chips != other.Chips) return false;
      if (AmountChips != other.AmountChips) return false;
      if (Bonus != other.Bonus) return false;
      if (Price != other.Price) return false;
      if (Name != other.Name) return false;
      if (Currency != other.Currency) return false;
      if (Percent != other.Percent) return false;
      if (ChipPerUnit != other.ChipPerUnit) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Chips != 0L) hash ^= Chips.GetHashCode();
      if (AmountChips != 0L) hash ^= AmountChips.GetHashCode();
      if (Bonus != 0L) hash ^= Bonus.GetHashCode();
      if (Price.Length != 0) hash ^= Price.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Currency.Length != 0) hash ^= Currency.GetHashCode();
      if (Percent.Length != 0) hash ^= Percent.GetHashCode();
      if (ChipPerUnit != 0L) hash ^= ChipPerUnit.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Chips != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Chips);
      }
      if (AmountChips != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(AmountChips);
      }
      if (Bonus != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(Bonus);
      }
      if (Price.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Price);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Name);
      }
      if (Currency.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Currency);
      }
      if (Percent.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Percent);
      }
      if (ChipPerUnit != 0L) {
        output.WriteRawTag(72);
        output.WriteInt64(ChipPerUnit);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Chips != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Chips);
      }
      if (AmountChips != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(AmountChips);
      }
      if (Bonus != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(Bonus);
      }
      if (Price.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Price);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Name);
      }
      if (Currency.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Currency);
      }
      if (Percent.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Percent);
      }
      if (ChipPerUnit != 0L) {
        output.WriteRawTag(72);
        output.WriteInt64(ChipPerUnit);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Chips != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Chips);
      }
      if (AmountChips != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(AmountChips);
      }
      if (Bonus != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Bonus);
      }
      if (Price.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Price);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Currency.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Currency);
      }
      if (Percent.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Percent);
      }
      if (ChipPerUnit != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ChipPerUnit);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Deal other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Chips != 0L) {
        Chips = other.Chips;
      }
      if (other.AmountChips != 0L) {
        AmountChips = other.AmountChips;
      }
      if (other.Bonus != 0L) {
        Bonus = other.Bonus;
      }
      if (other.Price.Length != 0) {
        Price = other.Price;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Currency.Length != 0) {
        Currency = other.Currency;
      }
      if (other.Percent.Length != 0) {
        Percent = other.Percent;
      }
      if (other.ChipPerUnit != 0L) {
        ChipPerUnit = other.ChipPerUnit;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 16: {
            Chips = input.ReadInt64();
            break;
          }
          case 24: {
            AmountChips = input.ReadInt64();
            break;
          }
          case 32: {
            Bonus = input.ReadInt64();
            break;
          }
          case 42: {
            Price = input.ReadString();
            break;
          }
          case 50: {
            Name = input.ReadString();
            break;
          }
          case 58: {
            Currency = input.ReadString();
            break;
          }
          case 66: {
            Percent = input.ReadString();
            break;
          }
          case 72: {
            ChipPerUnit = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 16: {
            Chips = input.ReadInt64();
            break;
          }
          case 24: {
            AmountChips = input.ReadInt64();
            break;
          }
          case 32: {
            Bonus = input.ReadInt64();
            break;
          }
          case 42: {
            Price = input.ReadString();
            break;
          }
          case 50: {
            Name = input.ReadString();
            break;
          }
          case 58: {
            Currency = input.ReadString();
            break;
          }
          case 66: {
            Percent = input.ReadString();
            break;
          }
          case 72: {
            ChipPerUnit = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class DealInShop : pb::IMessage<DealInShop>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DealInShop> _parser = new pb::MessageParser<DealInShop>(() => new DealInShop());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DealInShop> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.CommonApiReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DealInShop() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DealInShop(DealInShop other) : this() {
      best_ = other.best_ != null ? other.best_.Clone() : null;
      iaps_ = other.iaps_.Clone();
      gcashes_ = other.gcashes_.Clone();
      sms_ = other.sms_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DealInShop Clone() {
      return new DealInShop(this);
    }

    /// <summary>Field number for the "best" field.</summary>
    public const int BestFieldNumber = 1;
    private global::Api.Deal best_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Api.Deal Best {
      get { return best_; }
      set {
        best_ = value;
      }
    }

    /// <summary>Field number for the "iaps" field.</summary>
    public const int IapsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Api.Deal> _repeated_iaps_codec
        = pb::FieldCodec.ForMessage(18, global::Api.Deal.Parser);
    private readonly pbc::RepeatedField<global::Api.Deal> iaps_ = new pbc::RepeatedField<global::Api.Deal>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Api.Deal> Iaps {
      get { return iaps_; }
    }

    /// <summary>Field number for the "gcashes" field.</summary>
    public const int GcashesFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Api.Deal> _repeated_gcashes_codec
        = pb::FieldCodec.ForMessage(26, global::Api.Deal.Parser);
    private readonly pbc::RepeatedField<global::Api.Deal> gcashes_ = new pbc::RepeatedField<global::Api.Deal>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Api.Deal> Gcashes {
      get { return gcashes_; }
    }

    /// <summary>Field number for the "sms" field.</summary>
    public const int SmsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Api.Deal> _repeated_sms_codec
        = pb::FieldCodec.ForMessage(34, global::Api.Deal.Parser);
    private readonly pbc::RepeatedField<global::Api.Deal> sms_ = new pbc::RepeatedField<global::Api.Deal>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Api.Deal> Sms {
      get { return sms_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DealInShop);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DealInShop other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Best, other.Best)) return false;
      if(!iaps_.Equals(other.iaps_)) return false;
      if(!gcashes_.Equals(other.gcashes_)) return false;
      if(!sms_.Equals(other.sms_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (best_ != null) hash ^= Best.GetHashCode();
      hash ^= iaps_.GetHashCode();
      hash ^= gcashes_.GetHashCode();
      hash ^= sms_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (best_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Best);
      }
      iaps_.WriteTo(output, _repeated_iaps_codec);
      gcashes_.WriteTo(output, _repeated_gcashes_codec);
      sms_.WriteTo(output, _repeated_sms_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (best_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Best);
      }
      iaps_.WriteTo(ref output, _repeated_iaps_codec);
      gcashes_.WriteTo(ref output, _repeated_gcashes_codec);
      sms_.WriteTo(ref output, _repeated_sms_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (best_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Best);
      }
      size += iaps_.CalculateSize(_repeated_iaps_codec);
      size += gcashes_.CalculateSize(_repeated_gcashes_codec);
      size += sms_.CalculateSize(_repeated_sms_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DealInShop other) {
      if (other == null) {
        return;
      }
      if (other.best_ != null) {
        if (best_ == null) {
          Best = new global::Api.Deal();
        }
        Best.MergeFrom(other.Best);
      }
      iaps_.Add(other.iaps_);
      gcashes_.Add(other.gcashes_);
      sms_.Add(other.sms_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (best_ == null) {
              Best = new global::Api.Deal();
            }
            input.ReadMessage(Best);
            break;
          }
          case 18: {
            iaps_.AddEntriesFrom(input, _repeated_iaps_codec);
            break;
          }
          case 26: {
            gcashes_.AddEntriesFrom(input, _repeated_gcashes_codec);
            break;
          }
          case 34: {
            sms_.AddEntriesFrom(input, _repeated_sms_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (best_ == null) {
              Best = new global::Api.Deal();
            }
            input.ReadMessage(Best);
            break;
          }
          case 18: {
            iaps_.AddEntriesFrom(ref input, _repeated_iaps_codec);
            break;
          }
          case 26: {
            gcashes_.AddEntriesFrom(ref input, _repeated_gcashes_codec);
            break;
          }
          case 34: {
            sms_.AddEntriesFrom(ref input, _repeated_sms_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class LeaderBoardRecord : pb::IMessage<LeaderBoardRecord>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LeaderBoardRecord> _parser = new pb::MessageParser<LeaderBoardRecord>(() => new LeaderBoardRecord());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LeaderBoardRecord> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.CommonApiReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LeaderBoardRecord() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LeaderBoardRecord(LeaderBoardRecord other) : this() {
      gameCode_ = other.gameCode_;
      userId_ = other.userId_;
      score_ = other.score_;
      cdResetUnix_ = other.cdResetUnix_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LeaderBoardRecord Clone() {
      return new LeaderBoardRecord(this);
    }

    /// <summary>Field number for the "game_code" field.</summary>
    public const int GameCodeFieldNumber = 1;
    private string gameCode_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GameCode {
      get { return gameCode_; }
      set {
        gameCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "user_id" field.</summary>
    public const int UserIdFieldNumber = 2;
    private string userId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserId {
      get { return userId_; }
      set {
        userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "score" field.</summary>
    public const int ScoreFieldNumber = 3;
    private long score_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Score {
      get { return score_; }
      set {
        score_ = value;
      }
    }

    /// <summary>Field number for the "cd_reset_unix" field.</summary>
    public const int CdResetUnixFieldNumber = 4;
    private long cdResetUnix_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long CdResetUnix {
      get { return cdResetUnix_; }
      set {
        cdResetUnix_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LeaderBoardRecord);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LeaderBoardRecord other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GameCode != other.GameCode) return false;
      if (UserId != other.UserId) return false;
      if (Score != other.Score) return false;
      if (CdResetUnix != other.CdResetUnix) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (GameCode.Length != 0) hash ^= GameCode.GetHashCode();
      if (UserId.Length != 0) hash ^= UserId.GetHashCode();
      if (Score != 0L) hash ^= Score.GetHashCode();
      if (CdResetUnix != 0L) hash ^= CdResetUnix.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (GameCode.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(GameCode);
      }
      if (UserId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(UserId);
      }
      if (Score != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Score);
      }
      if (CdResetUnix != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(CdResetUnix);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (GameCode.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(GameCode);
      }
      if (UserId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(UserId);
      }
      if (Score != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Score);
      }
      if (CdResetUnix != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(CdResetUnix);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (GameCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GameCode);
      }
      if (UserId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
      }
      if (Score != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Score);
      }
      if (CdResetUnix != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CdResetUnix);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LeaderBoardRecord other) {
      if (other == null) {
        return;
      }
      if (other.GameCode.Length != 0) {
        GameCode = other.GameCode;
      }
      if (other.UserId.Length != 0) {
        UserId = other.UserId;
      }
      if (other.Score != 0L) {
        Score = other.Score;
      }
      if (other.CdResetUnix != 0L) {
        CdResetUnix = other.CdResetUnix;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            GameCode = input.ReadString();
            break;
          }
          case 18: {
            UserId = input.ReadString();
            break;
          }
          case 24: {
            Score = input.ReadInt64();
            break;
          }
          case 32: {
            CdResetUnix = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            GameCode = input.ReadString();
            break;
          }
          case 18: {
            UserId = input.ReadString();
            break;
          }
          case 24: {
            Score = input.ReadInt64();
            break;
          }
          case 32: {
            CdResetUnix = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ExchangeInfo : pb::IMessage<ExchangeInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ExchangeInfo> _parser = new pb::MessageParser<ExchangeInfo>(() => new ExchangeInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ExchangeInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.CommonApiReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExchangeInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExchangeInfo(ExchangeInfo other) : this() {
      id_ = other.id_;
      idDeal_ = other.idDeal_;
      chips_ = other.chips_;
      price_ = other.price_;
      status_ = other.status_;
      unlock_ = other.unlock_;
      cashId_ = other.cashId_;
      cashType_ = other.cashType_;
      userIdRequest_ = other.userIdRequest_;
      userNameRequest_ = other.userNameRequest_;
      vipLv_ = other.vipLv_;
      deviceId_ = other.deviceId_;
      userIdHandling_ = other.userIdHandling_;
      userNameHandling_ = other.userNameHandling_;
      reason_ = other.reason_;
      cursor_ = other.cursor_;
      createTime_ = other.createTime_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExchangeInfo Clone() {
      return new ExchangeInfo(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "id_deal" field.</summary>
    public const int IdDealFieldNumber = 2;
    private string idDeal_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string IdDeal {
      get { return idDeal_; }
      set {
        idDeal_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "chips" field.</summary>
    public const int ChipsFieldNumber = 3;
    private long chips_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Chips {
      get { return chips_; }
      set {
        chips_ = value;
      }
    }

    /// <summary>Field number for the "price" field.</summary>
    public const int PriceFieldNumber = 4;
    private string price_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Price {
      get { return price_; }
      set {
        price_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 5;
    private long status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "unlock" field.</summary>
    public const int UnlockFieldNumber = 6;
    private int unlock_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Unlock {
      get { return unlock_; }
      set {
        unlock_ = value;
      }
    }

    /// <summary>Field number for the "cash_id" field.</summary>
    public const int CashIdFieldNumber = 7;
    private string cashId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CashId {
      get { return cashId_; }
      set {
        cashId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "cash_type" field.</summary>
    public const int CashTypeFieldNumber = 8;
    private string cashType_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CashType {
      get { return cashType_; }
      set {
        cashType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "user_id_request" field.</summary>
    public const int UserIdRequestFieldNumber = 9;
    private string userIdRequest_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserIdRequest {
      get { return userIdRequest_; }
      set {
        userIdRequest_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "user_name_request" field.</summary>
    public const int UserNameRequestFieldNumber = 10;
    private string userNameRequest_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserNameRequest {
      get { return userNameRequest_; }
      set {
        userNameRequest_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "vip_lv" field.</summary>
    public const int VipLvFieldNumber = 11;
    private long vipLv_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long VipLv {
      get { return vipLv_; }
      set {
        vipLv_ = value;
      }
    }

    /// <summary>Field number for the "device_id" field.</summary>
    public const int DeviceIdFieldNumber = 12;
    private string deviceId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DeviceId {
      get { return deviceId_; }
      set {
        deviceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "user_id_handling" field.</summary>
    public const int UserIdHandlingFieldNumber = 13;
    private string userIdHandling_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserIdHandling {
      get { return userIdHandling_; }
      set {
        userIdHandling_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "user_name_handling" field.</summary>
    public const int UserNameHandlingFieldNumber = 14;
    private string userNameHandling_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserNameHandling {
      get { return userNameHandling_; }
      set {
        userNameHandling_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "reason" field.</summary>
    public const int ReasonFieldNumber = 15;
    private string reason_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Reason {
      get { return reason_; }
      set {
        reason_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "cursor" field.</summary>
    public const int CursorFieldNumber = 16;
    private string cursor_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Cursor {
      get { return cursor_; }
      set {
        cursor_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "createTime" field.</summary>
    public const int CreateTimeFieldNumber = 17;
    private long createTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long CreateTime {
      get { return createTime_; }
      set {
        createTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ExchangeInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ExchangeInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (IdDeal != other.IdDeal) return false;
      if (Chips != other.Chips) return false;
      if (Price != other.Price) return false;
      if (Status != other.Status) return false;
      if (Unlock != other.Unlock) return false;
      if (CashId != other.CashId) return false;
      if (CashType != other.CashType) return false;
      if (UserIdRequest != other.UserIdRequest) return false;
      if (UserNameRequest != other.UserNameRequest) return false;
      if (VipLv != other.VipLv) return false;
      if (DeviceId != other.DeviceId) return false;
      if (UserIdHandling != other.UserIdHandling) return false;
      if (UserNameHandling != other.UserNameHandling) return false;
      if (Reason != other.Reason) return false;
      if (Cursor != other.Cursor) return false;
      if (CreateTime != other.CreateTime) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (IdDeal.Length != 0) hash ^= IdDeal.GetHashCode();
      if (Chips != 0L) hash ^= Chips.GetHashCode();
      if (Price.Length != 0) hash ^= Price.GetHashCode();
      if (Status != 0L) hash ^= Status.GetHashCode();
      if (Unlock != 0) hash ^= Unlock.GetHashCode();
      if (CashId.Length != 0) hash ^= CashId.GetHashCode();
      if (CashType.Length != 0) hash ^= CashType.GetHashCode();
      if (UserIdRequest.Length != 0) hash ^= UserIdRequest.GetHashCode();
      if (UserNameRequest.Length != 0) hash ^= UserNameRequest.GetHashCode();
      if (VipLv != 0L) hash ^= VipLv.GetHashCode();
      if (DeviceId.Length != 0) hash ^= DeviceId.GetHashCode();
      if (UserIdHandling.Length != 0) hash ^= UserIdHandling.GetHashCode();
      if (UserNameHandling.Length != 0) hash ^= UserNameHandling.GetHashCode();
      if (Reason.Length != 0) hash ^= Reason.GetHashCode();
      if (Cursor.Length != 0) hash ^= Cursor.GetHashCode();
      if (CreateTime != 0L) hash ^= CreateTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (IdDeal.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(IdDeal);
      }
      if (Chips != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Chips);
      }
      if (Price.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Price);
      }
      if (Status != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(Status);
      }
      if (Unlock != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Unlock);
      }
      if (CashId.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(CashId);
      }
      if (CashType.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(CashType);
      }
      if (UserIdRequest.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(UserIdRequest);
      }
      if (UserNameRequest.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(UserNameRequest);
      }
      if (VipLv != 0L) {
        output.WriteRawTag(88);
        output.WriteInt64(VipLv);
      }
      if (DeviceId.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(DeviceId);
      }
      if (UserIdHandling.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(UserIdHandling);
      }
      if (UserNameHandling.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(UserNameHandling);
      }
      if (Reason.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(Reason);
      }
      if (Cursor.Length != 0) {
        output.WriteRawTag(130, 1);
        output.WriteString(Cursor);
      }
      if (CreateTime != 0L) {
        output.WriteRawTag(136, 1);
        output.WriteInt64(CreateTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (IdDeal.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(IdDeal);
      }
      if (Chips != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Chips);
      }
      if (Price.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Price);
      }
      if (Status != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(Status);
      }
      if (Unlock != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Unlock);
      }
      if (CashId.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(CashId);
      }
      if (CashType.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(CashType);
      }
      if (UserIdRequest.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(UserIdRequest);
      }
      if (UserNameRequest.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(UserNameRequest);
      }
      if (VipLv != 0L) {
        output.WriteRawTag(88);
        output.WriteInt64(VipLv);
      }
      if (DeviceId.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(DeviceId);
      }
      if (UserIdHandling.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(UserIdHandling);
      }
      if (UserNameHandling.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(UserNameHandling);
      }
      if (Reason.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(Reason);
      }
      if (Cursor.Length != 0) {
        output.WriteRawTag(130, 1);
        output.WriteString(Cursor);
      }
      if (CreateTime != 0L) {
        output.WriteRawTag(136, 1);
        output.WriteInt64(CreateTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (IdDeal.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(IdDeal);
      }
      if (Chips != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Chips);
      }
      if (Price.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Price);
      }
      if (Status != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Status);
      }
      if (Unlock != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Unlock);
      }
      if (CashId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CashId);
      }
      if (CashType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CashType);
      }
      if (UserIdRequest.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserIdRequest);
      }
      if (UserNameRequest.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserNameRequest);
      }
      if (VipLv != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(VipLv);
      }
      if (DeviceId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DeviceId);
      }
      if (UserIdHandling.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserIdHandling);
      }
      if (UserNameHandling.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserNameHandling);
      }
      if (Reason.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Reason);
      }
      if (Cursor.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Cursor);
      }
      if (CreateTime != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(CreateTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ExchangeInfo other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.IdDeal.Length != 0) {
        IdDeal = other.IdDeal;
      }
      if (other.Chips != 0L) {
        Chips = other.Chips;
      }
      if (other.Price.Length != 0) {
        Price = other.Price;
      }
      if (other.Status != 0L) {
        Status = other.Status;
      }
      if (other.Unlock != 0) {
        Unlock = other.Unlock;
      }
      if (other.CashId.Length != 0) {
        CashId = other.CashId;
      }
      if (other.CashType.Length != 0) {
        CashType = other.CashType;
      }
      if (other.UserIdRequest.Length != 0) {
        UserIdRequest = other.UserIdRequest;
      }
      if (other.UserNameRequest.Length != 0) {
        UserNameRequest = other.UserNameRequest;
      }
      if (other.VipLv != 0L) {
        VipLv = other.VipLv;
      }
      if (other.DeviceId.Length != 0) {
        DeviceId = other.DeviceId;
      }
      if (other.UserIdHandling.Length != 0) {
        UserIdHandling = other.UserIdHandling;
      }
      if (other.UserNameHandling.Length != 0) {
        UserNameHandling = other.UserNameHandling;
      }
      if (other.Reason.Length != 0) {
        Reason = other.Reason;
      }
      if (other.Cursor.Length != 0) {
        Cursor = other.Cursor;
      }
      if (other.CreateTime != 0L) {
        CreateTime = other.CreateTime;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            IdDeal = input.ReadString();
            break;
          }
          case 24: {
            Chips = input.ReadInt64();
            break;
          }
          case 34: {
            Price = input.ReadString();
            break;
          }
          case 40: {
            Status = input.ReadInt64();
            break;
          }
          case 48: {
            Unlock = input.ReadInt32();
            break;
          }
          case 58: {
            CashId = input.ReadString();
            break;
          }
          case 66: {
            CashType = input.ReadString();
            break;
          }
          case 74: {
            UserIdRequest = input.ReadString();
            break;
          }
          case 82: {
            UserNameRequest = input.ReadString();
            break;
          }
          case 88: {
            VipLv = input.ReadInt64();
            break;
          }
          case 98: {
            DeviceId = input.ReadString();
            break;
          }
          case 106: {
            UserIdHandling = input.ReadString();
            break;
          }
          case 114: {
            UserNameHandling = input.ReadString();
            break;
          }
          case 122: {
            Reason = input.ReadString();
            break;
          }
          case 130: {
            Cursor = input.ReadString();
            break;
          }
          case 136: {
            CreateTime = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            IdDeal = input.ReadString();
            break;
          }
          case 24: {
            Chips = input.ReadInt64();
            break;
          }
          case 34: {
            Price = input.ReadString();
            break;
          }
          case 40: {
            Status = input.ReadInt64();
            break;
          }
          case 48: {
            Unlock = input.ReadInt32();
            break;
          }
          case 58: {
            CashId = input.ReadString();
            break;
          }
          case 66: {
            CashType = input.ReadString();
            break;
          }
          case 74: {
            UserIdRequest = input.ReadString();
            break;
          }
          case 82: {
            UserNameRequest = input.ReadString();
            break;
          }
          case 88: {
            VipLv = input.ReadInt64();
            break;
          }
          case 98: {
            DeviceId = input.ReadString();
            break;
          }
          case 106: {
            UserIdHandling = input.ReadString();
            break;
          }
          case 114: {
            UserNameHandling = input.ReadString();
            break;
          }
          case 122: {
            Reason = input.ReadString();
            break;
          }
          case 130: {
            Cursor = input.ReadString();
            break;
          }
          case 136: {
            CreateTime = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ExchangeDealInShop : pb::IMessage<ExchangeDealInShop>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ExchangeDealInShop> _parser = new pb::MessageParser<ExchangeDealInShop>(() => new ExchangeDealInShop());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ExchangeDealInShop> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.CommonApiReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExchangeDealInShop() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExchangeDealInShop(ExchangeDealInShop other) : this() {
      gcashes_ = other.gcashes_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExchangeDealInShop Clone() {
      return new ExchangeDealInShop(this);
    }

    /// <summary>Field number for the "gcashes" field.</summary>
    public const int GcashesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Api.Deal> _repeated_gcashes_codec
        = pb::FieldCodec.ForMessage(10, global::Api.Deal.Parser);
    private readonly pbc::RepeatedField<global::Api.Deal> gcashes_ = new pbc::RepeatedField<global::Api.Deal>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Api.Deal> Gcashes {
      get { return gcashes_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ExchangeDealInShop);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ExchangeDealInShop other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!gcashes_.Equals(other.gcashes_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= gcashes_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      gcashes_.WriteTo(output, _repeated_gcashes_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      gcashes_.WriteTo(ref output, _repeated_gcashes_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += gcashes_.CalculateSize(_repeated_gcashes_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ExchangeDealInShop other) {
      if (other == null) {
        return;
      }
      gcashes_.Add(other.gcashes_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            gcashes_.AddEntriesFrom(input, _repeated_gcashes_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            gcashes_.AddEntriesFrom(ref input, _repeated_gcashes_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ListExchangeInfo : pb::IMessage<ListExchangeInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ListExchangeInfo> _parser = new pb::MessageParser<ListExchangeInfo>(() => new ListExchangeInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListExchangeInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.CommonApiReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListExchangeInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListExchangeInfo(ListExchangeInfo other) : this() {
      exchangeInfos_ = other.exchangeInfos_.Clone();
      nextCusor_ = other.nextCusor_;
      prevCusor_ = other.prevCusor_;
      total_ = other.total_;
      offset_ = other.offset_;
      limit_ = other.limit_;
      from_ = other.from_;
      to_ = other.to_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListExchangeInfo Clone() {
      return new ListExchangeInfo(this);
    }

    /// <summary>Field number for the "exchange_infos" field.</summary>
    public const int ExchangeInfosFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Api.ExchangeInfo> _repeated_exchangeInfos_codec
        = pb::FieldCodec.ForMessage(10, global::Api.ExchangeInfo.Parser);
    private readonly pbc::RepeatedField<global::Api.ExchangeInfo> exchangeInfos_ = new pbc::RepeatedField<global::Api.ExchangeInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Api.ExchangeInfo> ExchangeInfos {
      get { return exchangeInfos_; }
    }

    /// <summary>Field number for the "next_cusor" field.</summary>
    public const int NextCusorFieldNumber = 2;
    private string nextCusor_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NextCusor {
      get { return nextCusor_; }
      set {
        nextCusor_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "prev_cusor" field.</summary>
    public const int PrevCusorFieldNumber = 3;
    private string prevCusor_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PrevCusor {
      get { return prevCusor_; }
      set {
        prevCusor_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "total" field.</summary>
    public const int TotalFieldNumber = 4;
    private long total_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Total {
      get { return total_; }
      set {
        total_ = value;
      }
    }

    /// <summary>Field number for the "offset" field.</summary>
    public const int OffsetFieldNumber = 5;
    private long offset_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Offset {
      get { return offset_; }
      set {
        offset_ = value;
      }
    }

    /// <summary>Field number for the "limit" field.</summary>
    public const int LimitFieldNumber = 6;
    private long limit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Limit {
      get { return limit_; }
      set {
        limit_ = value;
      }
    }

    /// <summary>Field number for the "from" field.</summary>
    public const int FromFieldNumber = 7;
    private long from_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long From {
      get { return from_; }
      set {
        from_ = value;
      }
    }

    /// <summary>Field number for the "to" field.</summary>
    public const int ToFieldNumber = 8;
    private long to_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long To {
      get { return to_; }
      set {
        to_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListExchangeInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListExchangeInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!exchangeInfos_.Equals(other.exchangeInfos_)) return false;
      if (NextCusor != other.NextCusor) return false;
      if (PrevCusor != other.PrevCusor) return false;
      if (Total != other.Total) return false;
      if (Offset != other.Offset) return false;
      if (Limit != other.Limit) return false;
      if (From != other.From) return false;
      if (To != other.To) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= exchangeInfos_.GetHashCode();
      if (NextCusor.Length != 0) hash ^= NextCusor.GetHashCode();
      if (PrevCusor.Length != 0) hash ^= PrevCusor.GetHashCode();
      if (Total != 0L) hash ^= Total.GetHashCode();
      if (Offset != 0L) hash ^= Offset.GetHashCode();
      if (Limit != 0L) hash ^= Limit.GetHashCode();
      if (From != 0L) hash ^= From.GetHashCode();
      if (To != 0L) hash ^= To.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      exchangeInfos_.WriteTo(output, _repeated_exchangeInfos_codec);
      if (NextCusor.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(NextCusor);
      }
      if (PrevCusor.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(PrevCusor);
      }
      if (Total != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(Total);
      }
      if (Offset != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(Offset);
      }
      if (Limit != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(Limit);
      }
      if (From != 0L) {
        output.WriteRawTag(56);
        output.WriteInt64(From);
      }
      if (To != 0L) {
        output.WriteRawTag(64);
        output.WriteInt64(To);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      exchangeInfos_.WriteTo(ref output, _repeated_exchangeInfos_codec);
      if (NextCusor.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(NextCusor);
      }
      if (PrevCusor.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(PrevCusor);
      }
      if (Total != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(Total);
      }
      if (Offset != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(Offset);
      }
      if (Limit != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(Limit);
      }
      if (From != 0L) {
        output.WriteRawTag(56);
        output.WriteInt64(From);
      }
      if (To != 0L) {
        output.WriteRawTag(64);
        output.WriteInt64(To);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += exchangeInfos_.CalculateSize(_repeated_exchangeInfos_codec);
      if (NextCusor.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NextCusor);
      }
      if (PrevCusor.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PrevCusor);
      }
      if (Total != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Total);
      }
      if (Offset != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Offset);
      }
      if (Limit != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Limit);
      }
      if (From != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(From);
      }
      if (To != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(To);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListExchangeInfo other) {
      if (other == null) {
        return;
      }
      exchangeInfos_.Add(other.exchangeInfos_);
      if (other.NextCusor.Length != 0) {
        NextCusor = other.NextCusor;
      }
      if (other.PrevCusor.Length != 0) {
        PrevCusor = other.PrevCusor;
      }
      if (other.Total != 0L) {
        Total = other.Total;
      }
      if (other.Offset != 0L) {
        Offset = other.Offset;
      }
      if (other.Limit != 0L) {
        Limit = other.Limit;
      }
      if (other.From != 0L) {
        From = other.From;
      }
      if (other.To != 0L) {
        To = other.To;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            exchangeInfos_.AddEntriesFrom(input, _repeated_exchangeInfos_codec);
            break;
          }
          case 18: {
            NextCusor = input.ReadString();
            break;
          }
          case 26: {
            PrevCusor = input.ReadString();
            break;
          }
          case 32: {
            Total = input.ReadInt64();
            break;
          }
          case 40: {
            Offset = input.ReadInt64();
            break;
          }
          case 48: {
            Limit = input.ReadInt64();
            break;
          }
          case 56: {
            From = input.ReadInt64();
            break;
          }
          case 64: {
            To = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            exchangeInfos_.AddEntriesFrom(ref input, _repeated_exchangeInfos_codec);
            break;
          }
          case 18: {
            NextCusor = input.ReadString();
            break;
          }
          case 26: {
            PrevCusor = input.ReadString();
            break;
          }
          case 32: {
            Total = input.ReadInt64();
            break;
          }
          case 40: {
            Offset = input.ReadInt64();
            break;
          }
          case 48: {
            Limit = input.ReadInt64();
            break;
          }
          case 56: {
            From = input.ReadInt64();
            break;
          }
          case 64: {
            To = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ExchangeRequest : pb::IMessage<ExchangeRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ExchangeRequest> _parser = new pb::MessageParser<ExchangeRequest>(() => new ExchangeRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ExchangeRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.CommonApiReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExchangeRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExchangeRequest(ExchangeRequest other) : this() {
      id_ = other.id_;
      userIdRequest_ = other.userIdRequest_;
      limit_ = other.limit_;
      from_ = other.from_;
      to_ = other.to_;
      cusor_ = other.cusor_;
      cashType_ = other.cashType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExchangeRequest Clone() {
      return new ExchangeRequest(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "user_id_request" field.</summary>
    public const int UserIdRequestFieldNumber = 2;
    private string userIdRequest_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserIdRequest {
      get { return userIdRequest_; }
      set {
        userIdRequest_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "limit" field.</summary>
    public const int LimitFieldNumber = 3;
    private long limit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Limit {
      get { return limit_; }
      set {
        limit_ = value;
      }
    }

    /// <summary>Field number for the "from" field.</summary>
    public const int FromFieldNumber = 4;
    private long from_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long From {
      get { return from_; }
      set {
        from_ = value;
      }
    }

    /// <summary>Field number for the "to" field.</summary>
    public const int ToFieldNumber = 5;
    private long to_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long To {
      get { return to_; }
      set {
        to_ = value;
      }
    }

    /// <summary>Field number for the "cusor" field.</summary>
    public const int CusorFieldNumber = 6;
    private string cusor_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Cusor {
      get { return cusor_; }
      set {
        cusor_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "cash_type" field.</summary>
    public const int CashTypeFieldNumber = 9;
    private string cashType_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CashType {
      get { return cashType_; }
      set {
        cashType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ExchangeRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ExchangeRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (UserIdRequest != other.UserIdRequest) return false;
      if (Limit != other.Limit) return false;
      if (From != other.From) return false;
      if (To != other.To) return false;
      if (Cusor != other.Cusor) return false;
      if (CashType != other.CashType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (UserIdRequest.Length != 0) hash ^= UserIdRequest.GetHashCode();
      if (Limit != 0L) hash ^= Limit.GetHashCode();
      if (From != 0L) hash ^= From.GetHashCode();
      if (To != 0L) hash ^= To.GetHashCode();
      if (Cusor.Length != 0) hash ^= Cusor.GetHashCode();
      if (CashType.Length != 0) hash ^= CashType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (UserIdRequest.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(UserIdRequest);
      }
      if (Limit != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Limit);
      }
      if (From != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(From);
      }
      if (To != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(To);
      }
      if (Cusor.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Cusor);
      }
      if (CashType.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(CashType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (UserIdRequest.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(UserIdRequest);
      }
      if (Limit != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Limit);
      }
      if (From != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(From);
      }
      if (To != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(To);
      }
      if (Cusor.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Cusor);
      }
      if (CashType.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(CashType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (UserIdRequest.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserIdRequest);
      }
      if (Limit != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Limit);
      }
      if (From != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(From);
      }
      if (To != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(To);
      }
      if (Cusor.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Cusor);
      }
      if (CashType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CashType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ExchangeRequest other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.UserIdRequest.Length != 0) {
        UserIdRequest = other.UserIdRequest;
      }
      if (other.Limit != 0L) {
        Limit = other.Limit;
      }
      if (other.From != 0L) {
        From = other.From;
      }
      if (other.To != 0L) {
        To = other.To;
      }
      if (other.Cusor.Length != 0) {
        Cusor = other.Cusor;
      }
      if (other.CashType.Length != 0) {
        CashType = other.CashType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            UserIdRequest = input.ReadString();
            break;
          }
          case 24: {
            Limit = input.ReadInt64();
            break;
          }
          case 32: {
            From = input.ReadInt64();
            break;
          }
          case 40: {
            To = input.ReadInt64();
            break;
          }
          case 50: {
            Cusor = input.ReadString();
            break;
          }
          case 74: {
            CashType = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            UserIdRequest = input.ReadString();
            break;
          }
          case 24: {
            Limit = input.ReadInt64();
            break;
          }
          case 32: {
            From = input.ReadInt64();
            break;
          }
          case 40: {
            To = input.ReadInt64();
            break;
          }
          case 50: {
            Cusor = input.ReadString();
            break;
          }
          case 74: {
            CashType = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Reward : pb::IMessage<Reward>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Reward> _parser = new pb::MessageParser<Reward>(() => new Reward());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Reward> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.CommonApiReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Reward() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Reward(Reward other) : this() {
      basicChip_ = other.basicChip_;
      percentBonus_ = other.percentBonus_;
      bonusChip_ = other.bonusChip_;
      onlineChip_ = other.onlineChip_;
      totalChip_ = other.totalChip_;
      streak_ = other.streak_;
      onlineSec_ = other.onlineSec_;
      canClaim_ = other.canClaim_;
      numClaim_ = other.numClaim_;
      lastClaimUnix_ = other.lastClaimUnix_;
      nextClaimUnix_ = other.nextClaimUnix_;
      nextClaimSec_ = other.nextClaimSec_;
      reachMaxStreak_ = other.reachMaxStreak_;
      lastSpinNumber_ = other.lastSpinNumber_;
      lastOnlineUnix_ = other.lastOnlineUnix_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Reward Clone() {
      return new Reward(this);
    }

    /// <summary>Field number for the "basic_chip" field.</summary>
    public const int BasicChipFieldNumber = 1;
    private long basicChip_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long BasicChip {
      get { return basicChip_; }
      set {
        basicChip_ = value;
      }
    }

    /// <summary>Field number for the "percent_bonus" field.</summary>
    public const int PercentBonusFieldNumber = 2;
    private float percentBonus_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float PercentBonus {
      get { return percentBonus_; }
      set {
        percentBonus_ = value;
      }
    }

    /// <summary>Field number for the "bonus_chip" field.</summary>
    public const int BonusChipFieldNumber = 3;
    private long bonusChip_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long BonusChip {
      get { return bonusChip_; }
      set {
        bonusChip_ = value;
      }
    }

    /// <summary>Field number for the "online_chip" field.</summary>
    public const int OnlineChipFieldNumber = 4;
    private long onlineChip_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long OnlineChip {
      get { return onlineChip_; }
      set {
        onlineChip_ = value;
      }
    }

    /// <summary>Field number for the "total_chip" field.</summary>
    public const int TotalChipFieldNumber = 5;
    private long totalChip_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TotalChip {
      get { return totalChip_; }
      set {
        totalChip_ = value;
      }
    }

    /// <summary>Field number for the "streak" field.</summary>
    public const int StreakFieldNumber = 6;
    private long streak_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Streak {
      get { return streak_; }
      set {
        streak_ = value;
      }
    }

    /// <summary>Field number for the "online_sec" field.</summary>
    public const int OnlineSecFieldNumber = 7;
    private long onlineSec_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long OnlineSec {
      get { return onlineSec_; }
      set {
        onlineSec_ = value;
      }
    }

    /// <summary>Field number for the "can_claim" field.</summary>
    public const int CanClaimFieldNumber = 8;
    private bool canClaim_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool CanClaim {
      get { return canClaim_; }
      set {
        canClaim_ = value;
      }
    }

    /// <summary>Field number for the "num_claim" field.</summary>
    public const int NumClaimFieldNumber = 9;
    private long numClaim_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long NumClaim {
      get { return numClaim_; }
      set {
        numClaim_ = value;
      }
    }

    /// <summary>Field number for the "last_claim_unix" field.</summary>
    public const int LastClaimUnixFieldNumber = 10;
    private long lastClaimUnix_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long LastClaimUnix {
      get { return lastClaimUnix_; }
      set {
        lastClaimUnix_ = value;
      }
    }

    /// <summary>Field number for the "next_claim_unix" field.</summary>
    public const int NextClaimUnixFieldNumber = 11;
    private long nextClaimUnix_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long NextClaimUnix {
      get { return nextClaimUnix_; }
      set {
        nextClaimUnix_ = value;
      }
    }

    /// <summary>Field number for the "next_claim_sec" field.</summary>
    public const int NextClaimSecFieldNumber = 12;
    private long nextClaimSec_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long NextClaimSec {
      get { return nextClaimSec_; }
      set {
        nextClaimSec_ = value;
      }
    }

    /// <summary>Field number for the "reach_max_streak" field.</summary>
    public const int ReachMaxStreakFieldNumber = 13;
    private bool reachMaxStreak_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool ReachMaxStreak {
      get { return reachMaxStreak_; }
      set {
        reachMaxStreak_ = value;
      }
    }

    /// <summary>Field number for the "last_spin_number" field.</summary>
    public const int LastSpinNumberFieldNumber = 14;
    private long lastSpinNumber_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long LastSpinNumber {
      get { return lastSpinNumber_; }
      set {
        lastSpinNumber_ = value;
      }
    }

    /// <summary>Field number for the "last_online_unix" field.</summary>
    public const int LastOnlineUnixFieldNumber = 15;
    private long lastOnlineUnix_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long LastOnlineUnix {
      get { return lastOnlineUnix_; }
      set {
        lastOnlineUnix_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Reward);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Reward other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BasicChip != other.BasicChip) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PercentBonus, other.PercentBonus)) return false;
      if (BonusChip != other.BonusChip) return false;
      if (OnlineChip != other.OnlineChip) return false;
      if (TotalChip != other.TotalChip) return false;
      if (Streak != other.Streak) return false;
      if (OnlineSec != other.OnlineSec) return false;
      if (CanClaim != other.CanClaim) return false;
      if (NumClaim != other.NumClaim) return false;
      if (LastClaimUnix != other.LastClaimUnix) return false;
      if (NextClaimUnix != other.NextClaimUnix) return false;
      if (NextClaimSec != other.NextClaimSec) return false;
      if (ReachMaxStreak != other.ReachMaxStreak) return false;
      if (LastSpinNumber != other.LastSpinNumber) return false;
      if (LastOnlineUnix != other.LastOnlineUnix) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (BasicChip != 0L) hash ^= BasicChip.GetHashCode();
      if (PercentBonus != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PercentBonus);
      if (BonusChip != 0L) hash ^= BonusChip.GetHashCode();
      if (OnlineChip != 0L) hash ^= OnlineChip.GetHashCode();
      if (TotalChip != 0L) hash ^= TotalChip.GetHashCode();
      if (Streak != 0L) hash ^= Streak.GetHashCode();
      if (OnlineSec != 0L) hash ^= OnlineSec.GetHashCode();
      if (CanClaim != false) hash ^= CanClaim.GetHashCode();
      if (NumClaim != 0L) hash ^= NumClaim.GetHashCode();
      if (LastClaimUnix != 0L) hash ^= LastClaimUnix.GetHashCode();
      if (NextClaimUnix != 0L) hash ^= NextClaimUnix.GetHashCode();
      if (NextClaimSec != 0L) hash ^= NextClaimSec.GetHashCode();
      if (ReachMaxStreak != false) hash ^= ReachMaxStreak.GetHashCode();
      if (LastSpinNumber != 0L) hash ^= LastSpinNumber.GetHashCode();
      if (LastOnlineUnix != 0L) hash ^= LastOnlineUnix.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (BasicChip != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(BasicChip);
      }
      if (PercentBonus != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(PercentBonus);
      }
      if (BonusChip != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(BonusChip);
      }
      if (OnlineChip != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(OnlineChip);
      }
      if (TotalChip != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(TotalChip);
      }
      if (Streak != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(Streak);
      }
      if (OnlineSec != 0L) {
        output.WriteRawTag(56);
        output.WriteInt64(OnlineSec);
      }
      if (CanClaim != false) {
        output.WriteRawTag(64);
        output.WriteBool(CanClaim);
      }
      if (NumClaim != 0L) {
        output.WriteRawTag(72);
        output.WriteInt64(NumClaim);
      }
      if (LastClaimUnix != 0L) {
        output.WriteRawTag(80);
        output.WriteInt64(LastClaimUnix);
      }
      if (NextClaimUnix != 0L) {
        output.WriteRawTag(88);
        output.WriteInt64(NextClaimUnix);
      }
      if (NextClaimSec != 0L) {
        output.WriteRawTag(96);
        output.WriteInt64(NextClaimSec);
      }
      if (ReachMaxStreak != false) {
        output.WriteRawTag(104);
        output.WriteBool(ReachMaxStreak);
      }
      if (LastSpinNumber != 0L) {
        output.WriteRawTag(112);
        output.WriteInt64(LastSpinNumber);
      }
      if (LastOnlineUnix != 0L) {
        output.WriteRawTag(120);
        output.WriteInt64(LastOnlineUnix);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (BasicChip != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(BasicChip);
      }
      if (PercentBonus != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(PercentBonus);
      }
      if (BonusChip != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(BonusChip);
      }
      if (OnlineChip != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(OnlineChip);
      }
      if (TotalChip != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(TotalChip);
      }
      if (Streak != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(Streak);
      }
      if (OnlineSec != 0L) {
        output.WriteRawTag(56);
        output.WriteInt64(OnlineSec);
      }
      if (CanClaim != false) {
        output.WriteRawTag(64);
        output.WriteBool(CanClaim);
      }
      if (NumClaim != 0L) {
        output.WriteRawTag(72);
        output.WriteInt64(NumClaim);
      }
      if (LastClaimUnix != 0L) {
        output.WriteRawTag(80);
        output.WriteInt64(LastClaimUnix);
      }
      if (NextClaimUnix != 0L) {
        output.WriteRawTag(88);
        output.WriteInt64(NextClaimUnix);
      }
      if (NextClaimSec != 0L) {
        output.WriteRawTag(96);
        output.WriteInt64(NextClaimSec);
      }
      if (ReachMaxStreak != false) {
        output.WriteRawTag(104);
        output.WriteBool(ReachMaxStreak);
      }
      if (LastSpinNumber != 0L) {
        output.WriteRawTag(112);
        output.WriteInt64(LastSpinNumber);
      }
      if (LastOnlineUnix != 0L) {
        output.WriteRawTag(120);
        output.WriteInt64(LastOnlineUnix);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (BasicChip != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(BasicChip);
      }
      if (PercentBonus != 0F) {
        size += 1 + 4;
      }
      if (BonusChip != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(BonusChip);
      }
      if (OnlineChip != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(OnlineChip);
      }
      if (TotalChip != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TotalChip);
      }
      if (Streak != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Streak);
      }
      if (OnlineSec != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(OnlineSec);
      }
      if (CanClaim != false) {
        size += 1 + 1;
      }
      if (NumClaim != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(NumClaim);
      }
      if (LastClaimUnix != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(LastClaimUnix);
      }
      if (NextClaimUnix != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(NextClaimUnix);
      }
      if (NextClaimSec != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(NextClaimSec);
      }
      if (ReachMaxStreak != false) {
        size += 1 + 1;
      }
      if (LastSpinNumber != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(LastSpinNumber);
      }
      if (LastOnlineUnix != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(LastOnlineUnix);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Reward other) {
      if (other == null) {
        return;
      }
      if (other.BasicChip != 0L) {
        BasicChip = other.BasicChip;
      }
      if (other.PercentBonus != 0F) {
        PercentBonus = other.PercentBonus;
      }
      if (other.BonusChip != 0L) {
        BonusChip = other.BonusChip;
      }
      if (other.OnlineChip != 0L) {
        OnlineChip = other.OnlineChip;
      }
      if (other.TotalChip != 0L) {
        TotalChip = other.TotalChip;
      }
      if (other.Streak != 0L) {
        Streak = other.Streak;
      }
      if (other.OnlineSec != 0L) {
        OnlineSec = other.OnlineSec;
      }
      if (other.CanClaim != false) {
        CanClaim = other.CanClaim;
      }
      if (other.NumClaim != 0L) {
        NumClaim = other.NumClaim;
      }
      if (other.LastClaimUnix != 0L) {
        LastClaimUnix = other.LastClaimUnix;
      }
      if (other.NextClaimUnix != 0L) {
        NextClaimUnix = other.NextClaimUnix;
      }
      if (other.NextClaimSec != 0L) {
        NextClaimSec = other.NextClaimSec;
      }
      if (other.ReachMaxStreak != false) {
        ReachMaxStreak = other.ReachMaxStreak;
      }
      if (other.LastSpinNumber != 0L) {
        LastSpinNumber = other.LastSpinNumber;
      }
      if (other.LastOnlineUnix != 0L) {
        LastOnlineUnix = other.LastOnlineUnix;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BasicChip = input.ReadInt64();
            break;
          }
          case 21: {
            PercentBonus = input.ReadFloat();
            break;
          }
          case 24: {
            BonusChip = input.ReadInt64();
            break;
          }
          case 32: {
            OnlineChip = input.ReadInt64();
            break;
          }
          case 40: {
            TotalChip = input.ReadInt64();
            break;
          }
          case 48: {
            Streak = input.ReadInt64();
            break;
          }
          case 56: {
            OnlineSec = input.ReadInt64();
            break;
          }
          case 64: {
            CanClaim = input.ReadBool();
            break;
          }
          case 72: {
            NumClaim = input.ReadInt64();
            break;
          }
          case 80: {
            LastClaimUnix = input.ReadInt64();
            break;
          }
          case 88: {
            NextClaimUnix = input.ReadInt64();
            break;
          }
          case 96: {
            NextClaimSec = input.ReadInt64();
            break;
          }
          case 104: {
            ReachMaxStreak = input.ReadBool();
            break;
          }
          case 112: {
            LastSpinNumber = input.ReadInt64();
            break;
          }
          case 120: {
            LastOnlineUnix = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BasicChip = input.ReadInt64();
            break;
          }
          case 21: {
            PercentBonus = input.ReadFloat();
            break;
          }
          case 24: {
            BonusChip = input.ReadInt64();
            break;
          }
          case 32: {
            OnlineChip = input.ReadInt64();
            break;
          }
          case 40: {
            TotalChip = input.ReadInt64();
            break;
          }
          case 48: {
            Streak = input.ReadInt64();
            break;
          }
          case 56: {
            OnlineSec = input.ReadInt64();
            break;
          }
          case 64: {
            CanClaim = input.ReadBool();
            break;
          }
          case 72: {
            NumClaim = input.ReadInt64();
            break;
          }
          case 80: {
            LastClaimUnix = input.ReadInt64();
            break;
          }
          case 88: {
            NextClaimUnix = input.ReadInt64();
            break;
          }
          case 96: {
            NextClaimSec = input.ReadInt64();
            break;
          }
          case 104: {
            ReachMaxStreak = input.ReadBool();
            break;
          }
          case 112: {
            LastSpinNumber = input.ReadInt64();
            break;
          }
          case 120: {
            LastOnlineUnix = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class RewardTemplate : pb::IMessage<RewardTemplate>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RewardTemplate> _parser = new pb::MessageParser<RewardTemplate>(() => new RewardTemplate());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RewardTemplate> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.CommonApiReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RewardTemplate() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RewardTemplate(RewardTemplate other) : this() {
      basicChips_ = other.basicChips_.Clone();
      percenBonus_ = other.percenBonus_;
      onlineSec_ = other.onlineSec_;
      onlineChip_ = other.onlineChip_;
      streak_ = other.streak_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RewardTemplate Clone() {
      return new RewardTemplate(this);
    }

    /// <summary>Field number for the "basic_chips" field.</summary>
    public const int BasicChipsFieldNumber = 1;
    private static readonly pb::FieldCodec<long> _repeated_basicChips_codec
        = pb::FieldCodec.ForInt64(10);
    private readonly pbc::RepeatedField<long> basicChips_ = new pbc::RepeatedField<long>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<long> BasicChips {
      get { return basicChips_; }
    }

    /// <summary>Field number for the "percen_bonus" field.</summary>
    public const int PercenBonusFieldNumber = 2;
    private float percenBonus_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float PercenBonus {
      get { return percenBonus_; }
      set {
        percenBonus_ = value;
      }
    }

    /// <summary>Field number for the "online_sec" field.</summary>
    public const int OnlineSecFieldNumber = 3;
    private long onlineSec_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long OnlineSec {
      get { return onlineSec_; }
      set {
        onlineSec_ = value;
      }
    }

    /// <summary>Field number for the "online_chip" field.</summary>
    public const int OnlineChipFieldNumber = 4;
    private long onlineChip_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long OnlineChip {
      get { return onlineChip_; }
      set {
        onlineChip_ = value;
      }
    }

    /// <summary>Field number for the "streak" field.</summary>
    public const int StreakFieldNumber = 5;
    private long streak_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Streak {
      get { return streak_; }
      set {
        streak_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RewardTemplate);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RewardTemplate other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!basicChips_.Equals(other.basicChips_)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PercenBonus, other.PercenBonus)) return false;
      if (OnlineSec != other.OnlineSec) return false;
      if (OnlineChip != other.OnlineChip) return false;
      if (Streak != other.Streak) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= basicChips_.GetHashCode();
      if (PercenBonus != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PercenBonus);
      if (OnlineSec != 0L) hash ^= OnlineSec.GetHashCode();
      if (OnlineChip != 0L) hash ^= OnlineChip.GetHashCode();
      if (Streak != 0L) hash ^= Streak.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      basicChips_.WriteTo(output, _repeated_basicChips_codec);
      if (PercenBonus != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(PercenBonus);
      }
      if (OnlineSec != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(OnlineSec);
      }
      if (OnlineChip != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(OnlineChip);
      }
      if (Streak != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(Streak);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      basicChips_.WriteTo(ref output, _repeated_basicChips_codec);
      if (PercenBonus != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(PercenBonus);
      }
      if (OnlineSec != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(OnlineSec);
      }
      if (OnlineChip != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(OnlineChip);
      }
      if (Streak != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(Streak);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += basicChips_.CalculateSize(_repeated_basicChips_codec);
      if (PercenBonus != 0F) {
        size += 1 + 4;
      }
      if (OnlineSec != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(OnlineSec);
      }
      if (OnlineChip != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(OnlineChip);
      }
      if (Streak != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Streak);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RewardTemplate other) {
      if (other == null) {
        return;
      }
      basicChips_.Add(other.basicChips_);
      if (other.PercenBonus != 0F) {
        PercenBonus = other.PercenBonus;
      }
      if (other.OnlineSec != 0L) {
        OnlineSec = other.OnlineSec;
      }
      if (other.OnlineChip != 0L) {
        OnlineChip = other.OnlineChip;
      }
      if (other.Streak != 0L) {
        Streak = other.Streak;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            basicChips_.AddEntriesFrom(input, _repeated_basicChips_codec);
            break;
          }
          case 21: {
            PercenBonus = input.ReadFloat();
            break;
          }
          case 24: {
            OnlineSec = input.ReadInt64();
            break;
          }
          case 32: {
            OnlineChip = input.ReadInt64();
            break;
          }
          case 40: {
            Streak = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10:
          case 8: {
            basicChips_.AddEntriesFrom(ref input, _repeated_basicChips_codec);
            break;
          }
          case 21: {
            PercenBonus = input.ReadFloat();
            break;
          }
          case 24: {
            OnlineSec = input.ReadInt64();
            break;
          }
          case 32: {
            OnlineChip = input.ReadInt64();
            break;
          }
          case 40: {
            Streak = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class LastClaimReward : pb::IMessage<LastClaimReward>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LastClaimReward> _parser = new pb::MessageParser<LastClaimReward>(() => new LastClaimReward());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LastClaimReward> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.CommonApiReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LastClaimReward() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LastClaimReward(LastClaimReward other) : this() {
      lastClaimUnix_ = other.lastClaimUnix_;
      nextClaimUnix_ = other.nextClaimUnix_;
      streak_ = other.streak_;
      lastSpinNumber_ = other.lastSpinNumber_;
      reachMaxStreak_ = other.reachMaxStreak_;
      numClaim_ = other.numClaim_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LastClaimReward Clone() {
      return new LastClaimReward(this);
    }

    /// <summary>Field number for the "last_claim_unix" field.</summary>
    public const int LastClaimUnixFieldNumber = 1;
    private long lastClaimUnix_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long LastClaimUnix {
      get { return lastClaimUnix_; }
      set {
        lastClaimUnix_ = value;
      }
    }

    /// <summary>Field number for the "next_claim_unix" field.</summary>
    public const int NextClaimUnixFieldNumber = 2;
    private long nextClaimUnix_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long NextClaimUnix {
      get { return nextClaimUnix_; }
      set {
        nextClaimUnix_ = value;
      }
    }

    /// <summary>Field number for the "streak" field.</summary>
    public const int StreakFieldNumber = 3;
    private long streak_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Streak {
      get { return streak_; }
      set {
        streak_ = value;
      }
    }

    /// <summary>Field number for the "last_spin_number" field.</summary>
    public const int LastSpinNumberFieldNumber = 4;
    private long lastSpinNumber_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long LastSpinNumber {
      get { return lastSpinNumber_; }
      set {
        lastSpinNumber_ = value;
      }
    }

    /// <summary>Field number for the "reach_max_streak" field.</summary>
    public const int ReachMaxStreakFieldNumber = 5;
    private bool reachMaxStreak_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool ReachMaxStreak {
      get { return reachMaxStreak_; }
      set {
        reachMaxStreak_ = value;
      }
    }

    /// <summary>Field number for the "num_claim" field.</summary>
    public const int NumClaimFieldNumber = 6;
    private long numClaim_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long NumClaim {
      get { return numClaim_; }
      set {
        numClaim_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LastClaimReward);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LastClaimReward other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (LastClaimUnix != other.LastClaimUnix) return false;
      if (NextClaimUnix != other.NextClaimUnix) return false;
      if (Streak != other.Streak) return false;
      if (LastSpinNumber != other.LastSpinNumber) return false;
      if (ReachMaxStreak != other.ReachMaxStreak) return false;
      if (NumClaim != other.NumClaim) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (LastClaimUnix != 0L) hash ^= LastClaimUnix.GetHashCode();
      if (NextClaimUnix != 0L) hash ^= NextClaimUnix.GetHashCode();
      if (Streak != 0L) hash ^= Streak.GetHashCode();
      if (LastSpinNumber != 0L) hash ^= LastSpinNumber.GetHashCode();
      if (ReachMaxStreak != false) hash ^= ReachMaxStreak.GetHashCode();
      if (NumClaim != 0L) hash ^= NumClaim.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (LastClaimUnix != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(LastClaimUnix);
      }
      if (NextClaimUnix != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(NextClaimUnix);
      }
      if (Streak != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Streak);
      }
      if (LastSpinNumber != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(LastSpinNumber);
      }
      if (ReachMaxStreak != false) {
        output.WriteRawTag(40);
        output.WriteBool(ReachMaxStreak);
      }
      if (NumClaim != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(NumClaim);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (LastClaimUnix != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(LastClaimUnix);
      }
      if (NextClaimUnix != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(NextClaimUnix);
      }
      if (Streak != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Streak);
      }
      if (LastSpinNumber != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(LastSpinNumber);
      }
      if (ReachMaxStreak != false) {
        output.WriteRawTag(40);
        output.WriteBool(ReachMaxStreak);
      }
      if (NumClaim != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(NumClaim);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (LastClaimUnix != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(LastClaimUnix);
      }
      if (NextClaimUnix != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(NextClaimUnix);
      }
      if (Streak != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Streak);
      }
      if (LastSpinNumber != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(LastSpinNumber);
      }
      if (ReachMaxStreak != false) {
        size += 1 + 1;
      }
      if (NumClaim != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(NumClaim);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LastClaimReward other) {
      if (other == null) {
        return;
      }
      if (other.LastClaimUnix != 0L) {
        LastClaimUnix = other.LastClaimUnix;
      }
      if (other.NextClaimUnix != 0L) {
        NextClaimUnix = other.NextClaimUnix;
      }
      if (other.Streak != 0L) {
        Streak = other.Streak;
      }
      if (other.LastSpinNumber != 0L) {
        LastSpinNumber = other.LastSpinNumber;
      }
      if (other.ReachMaxStreak != false) {
        ReachMaxStreak = other.ReachMaxStreak;
      }
      if (other.NumClaim != 0L) {
        NumClaim = other.NumClaim;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            LastClaimUnix = input.ReadInt64();
            break;
          }
          case 16: {
            NextClaimUnix = input.ReadInt64();
            break;
          }
          case 24: {
            Streak = input.ReadInt64();
            break;
          }
          case 32: {
            LastSpinNumber = input.ReadInt64();
            break;
          }
          case 40: {
            ReachMaxStreak = input.ReadBool();
            break;
          }
          case 48: {
            NumClaim = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            LastClaimUnix = input.ReadInt64();
            break;
          }
          case 16: {
            NextClaimUnix = input.ReadInt64();
            break;
          }
          case 24: {
            Streak = input.ReadInt64();
            break;
          }
          case 32: {
            LastSpinNumber = input.ReadInt64();
            break;
          }
          case 40: {
            ReachMaxStreak = input.ReadBool();
            break;
          }
          case 48: {
            NumClaim = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class DailyRewardTemplate : pb::IMessage<DailyRewardTemplate>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DailyRewardTemplate> _parser = new pb::MessageParser<DailyRewardTemplate>(() => new DailyRewardTemplate());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DailyRewardTemplate> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.CommonApiReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DailyRewardTemplate() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DailyRewardTemplate(DailyRewardTemplate other) : this() {
      rewardTemplates_ = other.rewardTemplates_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DailyRewardTemplate Clone() {
      return new DailyRewardTemplate(this);
    }

    /// <summary>Field number for the "reward_templates" field.</summary>
    public const int RewardTemplatesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Api.RewardTemplate> _repeated_rewardTemplates_codec
        = pb::FieldCodec.ForMessage(10, global::Api.RewardTemplate.Parser);
    private readonly pbc::RepeatedField<global::Api.RewardTemplate> rewardTemplates_ = new pbc::RepeatedField<global::Api.RewardTemplate>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Api.RewardTemplate> RewardTemplates {
      get { return rewardTemplates_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DailyRewardTemplate);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DailyRewardTemplate other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!rewardTemplates_.Equals(other.rewardTemplates_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= rewardTemplates_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      rewardTemplates_.WriteTo(output, _repeated_rewardTemplates_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      rewardTemplates_.WriteTo(ref output, _repeated_rewardTemplates_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += rewardTemplates_.CalculateSize(_repeated_rewardTemplates_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DailyRewardTemplate other) {
      if (other == null) {
        return;
      }
      rewardTemplates_.Add(other.rewardTemplates_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            rewardTemplates_.AddEntriesFrom(input, _repeated_rewardTemplates_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            rewardTemplates_.AddEntriesFrom(ref input, _repeated_rewardTemplates_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class UserGroup : pb::IMessage<UserGroup>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UserGroup> _parser = new pb::MessageParser<UserGroup>(() => new UserGroup());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UserGroup> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.CommonApiReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserGroup() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserGroup(UserGroup other) : this() {
      id_ = other.id_;
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserGroup Clone() {
      return new UserGroup(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private long id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UserGroup);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UserGroup other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0L) hash ^= Id.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Id);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UserGroup other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0L) {
        Id = other.Id;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt64();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt64();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ListUserGroup : pb::IMessage<ListUserGroup>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ListUserGroup> _parser = new pb::MessageParser<ListUserGroup>(() => new ListUserGroup());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListUserGroup> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.CommonApiReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListUserGroup() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListUserGroup(ListUserGroup other) : this() {
      userGroups_ = other.userGroups_.Clone();
      nextCusor_ = other.nextCusor_;
      prevCusor_ = other.prevCusor_;
      total_ = other.total_;
      offset_ = other.offset_;
      limit_ = other.limit_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListUserGroup Clone() {
      return new ListUserGroup(this);
    }

    /// <summary>Field number for the "user_groups" field.</summary>
    public const int UserGroupsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Api.UserGroup> _repeated_userGroups_codec
        = pb::FieldCodec.ForMessage(10, global::Api.UserGroup.Parser);
    private readonly pbc::RepeatedField<global::Api.UserGroup> userGroups_ = new pbc::RepeatedField<global::Api.UserGroup>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Api.UserGroup> UserGroups {
      get { return userGroups_; }
    }

    /// <summary>Field number for the "next_cusor" field.</summary>
    public const int NextCusorFieldNumber = 2;
    private string nextCusor_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NextCusor {
      get { return nextCusor_; }
      set {
        nextCusor_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "prev_cusor" field.</summary>
    public const int PrevCusorFieldNumber = 3;
    private string prevCusor_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PrevCusor {
      get { return prevCusor_; }
      set {
        prevCusor_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "total" field.</summary>
    public const int TotalFieldNumber = 4;
    private long total_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Total {
      get { return total_; }
      set {
        total_ = value;
      }
    }

    /// <summary>Field number for the "offset" field.</summary>
    public const int OffsetFieldNumber = 5;
    private long offset_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Offset {
      get { return offset_; }
      set {
        offset_ = value;
      }
    }

    /// <summary>Field number for the "limit" field.</summary>
    public const int LimitFieldNumber = 6;
    private long limit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Limit {
      get { return limit_; }
      set {
        limit_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListUserGroup);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListUserGroup other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!userGroups_.Equals(other.userGroups_)) return false;
      if (NextCusor != other.NextCusor) return false;
      if (PrevCusor != other.PrevCusor) return false;
      if (Total != other.Total) return false;
      if (Offset != other.Offset) return false;
      if (Limit != other.Limit) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= userGroups_.GetHashCode();
      if (NextCusor.Length != 0) hash ^= NextCusor.GetHashCode();
      if (PrevCusor.Length != 0) hash ^= PrevCusor.GetHashCode();
      if (Total != 0L) hash ^= Total.GetHashCode();
      if (Offset != 0L) hash ^= Offset.GetHashCode();
      if (Limit != 0L) hash ^= Limit.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      userGroups_.WriteTo(output, _repeated_userGroups_codec);
      if (NextCusor.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(NextCusor);
      }
      if (PrevCusor.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(PrevCusor);
      }
      if (Total != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(Total);
      }
      if (Offset != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(Offset);
      }
      if (Limit != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(Limit);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      userGroups_.WriteTo(ref output, _repeated_userGroups_codec);
      if (NextCusor.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(NextCusor);
      }
      if (PrevCusor.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(PrevCusor);
      }
      if (Total != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(Total);
      }
      if (Offset != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(Offset);
      }
      if (Limit != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(Limit);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += userGroups_.CalculateSize(_repeated_userGroups_codec);
      if (NextCusor.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NextCusor);
      }
      if (PrevCusor.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PrevCusor);
      }
      if (Total != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Total);
      }
      if (Offset != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Offset);
      }
      if (Limit != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Limit);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListUserGroup other) {
      if (other == null) {
        return;
      }
      userGroups_.Add(other.userGroups_);
      if (other.NextCusor.Length != 0) {
        NextCusor = other.NextCusor;
      }
      if (other.PrevCusor.Length != 0) {
        PrevCusor = other.PrevCusor;
      }
      if (other.Total != 0L) {
        Total = other.Total;
      }
      if (other.Offset != 0L) {
        Offset = other.Offset;
      }
      if (other.Limit != 0L) {
        Limit = other.Limit;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            userGroups_.AddEntriesFrom(input, _repeated_userGroups_codec);
            break;
          }
          case 18: {
            NextCusor = input.ReadString();
            break;
          }
          case 26: {
            PrevCusor = input.ReadString();
            break;
          }
          case 32: {
            Total = input.ReadInt64();
            break;
          }
          case 40: {
            Offset = input.ReadInt64();
            break;
          }
          case 48: {
            Limit = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            userGroups_.AddEntriesFrom(ref input, _repeated_userGroups_codec);
            break;
          }
          case 18: {
            NextCusor = input.ReadString();
            break;
          }
          case 26: {
            PrevCusor = input.ReadString();
            break;
          }
          case 32: {
            Total = input.ReadInt64();
            break;
          }
          case 40: {
            Offset = input.ReadInt64();
            break;
          }
          case 48: {
            Limit = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class UserGroupRequest : pb::IMessage<UserGroupRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UserGroupRequest> _parser = new pb::MessageParser<UserGroupRequest>(() => new UserGroupRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UserGroupRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.CommonApiReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserGroupRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserGroupRequest(UserGroupRequest other) : this() {
      limit_ = other.limit_;
      cusor_ = other.cusor_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserGroupRequest Clone() {
      return new UserGroupRequest(this);
    }

    /// <summary>Field number for the "limit" field.</summary>
    public const int LimitFieldNumber = 1;
    private long limit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Limit {
      get { return limit_; }
      set {
        limit_ = value;
      }
    }

    /// <summary>Field number for the "cusor" field.</summary>
    public const int CusorFieldNumber = 2;
    private string cusor_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Cusor {
      get { return cusor_; }
      set {
        cusor_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UserGroupRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UserGroupRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Limit != other.Limit) return false;
      if (Cusor != other.Cusor) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Limit != 0L) hash ^= Limit.GetHashCode();
      if (Cusor.Length != 0) hash ^= Cusor.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Limit != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Limit);
      }
      if (Cusor.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Cusor);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Limit != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Limit);
      }
      if (Cusor.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Cusor);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Limit != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Limit);
      }
      if (Cusor.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Cusor);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UserGroupRequest other) {
      if (other == null) {
        return;
      }
      if (other.Limit != 0L) {
        Limit = other.Limit;
      }
      if (other.Cusor.Length != 0) {
        Cusor = other.Cusor;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Limit = input.ReadInt64();
            break;
          }
          case 18: {
            Cusor = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Limit = input.ReadInt64();
            break;
          }
          case 18: {
            Cusor = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GiftCode : pb::IMessage<GiftCode>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GiftCode> _parser = new pb::MessageParser<GiftCode>(() => new GiftCode());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GiftCode> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.CommonApiReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GiftCode() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GiftCode(GiftCode other) : this() {
      id_ = other.id_;
      code_ = other.code_;
      nCurrent_ = other.nCurrent_;
      nMax_ = other.nMax_;
      value_ = other.value_;
      startTimeUnix_ = other.startTimeUnix_;
      endTimeUnix_ = other.endTimeUnix_;
      message_ = other.message_;
      vip_ = other.vip_;
      giftCodeType_ = other.giftCodeType_;
      reachMaxClaim_ = other.reachMaxClaim_;
      alreadyClaim_ = other.alreadyClaim_;
      userId_ = other.userId_;
      openToClaim_ = other.openToClaim_;
      errCode_ = other.errCode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GiftCode Clone() {
      return new GiftCode(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private long id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 2;
    private string code_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Code {
      get { return code_; }
      set {
        code_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "n_current" field.</summary>
    public const int NCurrentFieldNumber = 3;
    private long nCurrent_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long NCurrent {
      get { return nCurrent_; }
      set {
        nCurrent_ = value;
      }
    }

    /// <summary>Field number for the "n_max" field.</summary>
    public const int NMaxFieldNumber = 4;
    private long nMax_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long NMax {
      get { return nMax_; }
      set {
        nMax_ = value;
      }
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 5;
    private long value_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Value {
      get { return value_; }
      set {
        value_ = value;
      }
    }

    /// <summary>Field number for the "start_time_unix" field.</summary>
    public const int StartTimeUnixFieldNumber = 6;
    private long startTimeUnix_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long StartTimeUnix {
      get { return startTimeUnix_; }
      set {
        startTimeUnix_ = value;
      }
    }

    /// <summary>Field number for the "end_time_unix" field.</summary>
    public const int EndTimeUnixFieldNumber = 7;
    private long endTimeUnix_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long EndTimeUnix {
      get { return endTimeUnix_; }
      set {
        endTimeUnix_ = value;
      }
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 8;
    private string message_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "vip" field.</summary>
    public const int VipFieldNumber = 9;
    private long vip_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Vip {
      get { return vip_; }
      set {
        vip_ = value;
      }
    }

    /// <summary>Field number for the "gift_code_type" field.</summary>
    public const int GiftCodeTypeFieldNumber = 10;
    private global::Api.GiftCodeType giftCodeType_ = global::Api.GiftCodeType.Unspecified;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Api.GiftCodeType GiftCodeType {
      get { return giftCodeType_; }
      set {
        giftCodeType_ = value;
      }
    }

    /// <summary>Field number for the "reach_max_claim" field.</summary>
    public const int ReachMaxClaimFieldNumber = 12;
    private bool reachMaxClaim_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool ReachMaxClaim {
      get { return reachMaxClaim_; }
      set {
        reachMaxClaim_ = value;
      }
    }

    /// <summary>Field number for the "already_claim" field.</summary>
    public const int AlreadyClaimFieldNumber = 13;
    private bool alreadyClaim_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool AlreadyClaim {
      get { return alreadyClaim_; }
      set {
        alreadyClaim_ = value;
      }
    }

    /// <summary>Field number for the "user_id" field.</summary>
    public const int UserIdFieldNumber = 14;
    private string userId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserId {
      get { return userId_; }
      set {
        userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "open_to_claim" field.</summary>
    public const int OpenToClaimFieldNumber = 15;
    private bool openToClaim_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool OpenToClaim {
      get { return openToClaim_; }
      set {
        openToClaim_ = value;
      }
    }

    /// <summary>Field number for the "err_code" field.</summary>
    public const int ErrCodeFieldNumber = 16;
    private int errCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ErrCode {
      get { return errCode_; }
      set {
        errCode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GiftCode);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GiftCode other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Code != other.Code) return false;
      if (NCurrent != other.NCurrent) return false;
      if (NMax != other.NMax) return false;
      if (Value != other.Value) return false;
      if (StartTimeUnix != other.StartTimeUnix) return false;
      if (EndTimeUnix != other.EndTimeUnix) return false;
      if (Message != other.Message) return false;
      if (Vip != other.Vip) return false;
      if (GiftCodeType != other.GiftCodeType) return false;
      if (ReachMaxClaim != other.ReachMaxClaim) return false;
      if (AlreadyClaim != other.AlreadyClaim) return false;
      if (UserId != other.UserId) return false;
      if (OpenToClaim != other.OpenToClaim) return false;
      if (ErrCode != other.ErrCode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0L) hash ^= Id.GetHashCode();
      if (Code.Length != 0) hash ^= Code.GetHashCode();
      if (NCurrent != 0L) hash ^= NCurrent.GetHashCode();
      if (NMax != 0L) hash ^= NMax.GetHashCode();
      if (Value != 0L) hash ^= Value.GetHashCode();
      if (StartTimeUnix != 0L) hash ^= StartTimeUnix.GetHashCode();
      if (EndTimeUnix != 0L) hash ^= EndTimeUnix.GetHashCode();
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      if (Vip != 0L) hash ^= Vip.GetHashCode();
      if (GiftCodeType != global::Api.GiftCodeType.Unspecified) hash ^= GiftCodeType.GetHashCode();
      if (ReachMaxClaim != false) hash ^= ReachMaxClaim.GetHashCode();
      if (AlreadyClaim != false) hash ^= AlreadyClaim.GetHashCode();
      if (UserId.Length != 0) hash ^= UserId.GetHashCode();
      if (OpenToClaim != false) hash ^= OpenToClaim.GetHashCode();
      if (ErrCode != 0) hash ^= ErrCode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Id);
      }
      if (Code.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Code);
      }
      if (NCurrent != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(NCurrent);
      }
      if (NMax != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(NMax);
      }
      if (Value != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(Value);
      }
      if (StartTimeUnix != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(StartTimeUnix);
      }
      if (EndTimeUnix != 0L) {
        output.WriteRawTag(56);
        output.WriteInt64(EndTimeUnix);
      }
      if (Message.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Message);
      }
      if (Vip != 0L) {
        output.WriteRawTag(72);
        output.WriteInt64(Vip);
      }
      if (GiftCodeType != global::Api.GiftCodeType.Unspecified) {
        output.WriteRawTag(80);
        output.WriteEnum((int) GiftCodeType);
      }
      if (ReachMaxClaim != false) {
        output.WriteRawTag(96);
        output.WriteBool(ReachMaxClaim);
      }
      if (AlreadyClaim != false) {
        output.WriteRawTag(104);
        output.WriteBool(AlreadyClaim);
      }
      if (UserId.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(UserId);
      }
      if (OpenToClaim != false) {
        output.WriteRawTag(120);
        output.WriteBool(OpenToClaim);
      }
      if (ErrCode != 0) {
        output.WriteRawTag(128, 1);
        output.WriteInt32(ErrCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Id);
      }
      if (Code.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Code);
      }
      if (NCurrent != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(NCurrent);
      }
      if (NMax != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(NMax);
      }
      if (Value != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(Value);
      }
      if (StartTimeUnix != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(StartTimeUnix);
      }
      if (EndTimeUnix != 0L) {
        output.WriteRawTag(56);
        output.WriteInt64(EndTimeUnix);
      }
      if (Message.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Message);
      }
      if (Vip != 0L) {
        output.WriteRawTag(72);
        output.WriteInt64(Vip);
      }
      if (GiftCodeType != global::Api.GiftCodeType.Unspecified) {
        output.WriteRawTag(80);
        output.WriteEnum((int) GiftCodeType);
      }
      if (ReachMaxClaim != false) {
        output.WriteRawTag(96);
        output.WriteBool(ReachMaxClaim);
      }
      if (AlreadyClaim != false) {
        output.WriteRawTag(104);
        output.WriteBool(AlreadyClaim);
      }
      if (UserId.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(UserId);
      }
      if (OpenToClaim != false) {
        output.WriteRawTag(120);
        output.WriteBool(OpenToClaim);
      }
      if (ErrCode != 0) {
        output.WriteRawTag(128, 1);
        output.WriteInt32(ErrCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Id);
      }
      if (Code.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Code);
      }
      if (NCurrent != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(NCurrent);
      }
      if (NMax != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(NMax);
      }
      if (Value != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Value);
      }
      if (StartTimeUnix != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(StartTimeUnix);
      }
      if (EndTimeUnix != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(EndTimeUnix);
      }
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (Vip != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Vip);
      }
      if (GiftCodeType != global::Api.GiftCodeType.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) GiftCodeType);
      }
      if (ReachMaxClaim != false) {
        size += 1 + 1;
      }
      if (AlreadyClaim != false) {
        size += 1 + 1;
      }
      if (UserId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
      }
      if (OpenToClaim != false) {
        size += 1 + 1;
      }
      if (ErrCode != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(ErrCode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GiftCode other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0L) {
        Id = other.Id;
      }
      if (other.Code.Length != 0) {
        Code = other.Code;
      }
      if (other.NCurrent != 0L) {
        NCurrent = other.NCurrent;
      }
      if (other.NMax != 0L) {
        NMax = other.NMax;
      }
      if (other.Value != 0L) {
        Value = other.Value;
      }
      if (other.StartTimeUnix != 0L) {
        StartTimeUnix = other.StartTimeUnix;
      }
      if (other.EndTimeUnix != 0L) {
        EndTimeUnix = other.EndTimeUnix;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
      if (other.Vip != 0L) {
        Vip = other.Vip;
      }
      if (other.GiftCodeType != global::Api.GiftCodeType.Unspecified) {
        GiftCodeType = other.GiftCodeType;
      }
      if (other.ReachMaxClaim != false) {
        ReachMaxClaim = other.ReachMaxClaim;
      }
      if (other.AlreadyClaim != false) {
        AlreadyClaim = other.AlreadyClaim;
      }
      if (other.UserId.Length != 0) {
        UserId = other.UserId;
      }
      if (other.OpenToClaim != false) {
        OpenToClaim = other.OpenToClaim;
      }
      if (other.ErrCode != 0) {
        ErrCode = other.ErrCode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt64();
            break;
          }
          case 18: {
            Code = input.ReadString();
            break;
          }
          case 24: {
            NCurrent = input.ReadInt64();
            break;
          }
          case 32: {
            NMax = input.ReadInt64();
            break;
          }
          case 40: {
            Value = input.ReadInt64();
            break;
          }
          case 48: {
            StartTimeUnix = input.ReadInt64();
            break;
          }
          case 56: {
            EndTimeUnix = input.ReadInt64();
            break;
          }
          case 66: {
            Message = input.ReadString();
            break;
          }
          case 72: {
            Vip = input.ReadInt64();
            break;
          }
          case 80: {
            GiftCodeType = (global::Api.GiftCodeType) input.ReadEnum();
            break;
          }
          case 96: {
            ReachMaxClaim = input.ReadBool();
            break;
          }
          case 104: {
            AlreadyClaim = input.ReadBool();
            break;
          }
          case 114: {
            UserId = input.ReadString();
            break;
          }
          case 120: {
            OpenToClaim = input.ReadBool();
            break;
          }
          case 128: {
            ErrCode = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt64();
            break;
          }
          case 18: {
            Code = input.ReadString();
            break;
          }
          case 24: {
            NCurrent = input.ReadInt64();
            break;
          }
          case 32: {
            NMax = input.ReadInt64();
            break;
          }
          case 40: {
            Value = input.ReadInt64();
            break;
          }
          case 48: {
            StartTimeUnix = input.ReadInt64();
            break;
          }
          case 56: {
            EndTimeUnix = input.ReadInt64();
            break;
          }
          case 66: {
            Message = input.ReadString();
            break;
          }
          case 72: {
            Vip = input.ReadInt64();
            break;
          }
          case 80: {
            GiftCodeType = (global::Api.GiftCodeType) input.ReadEnum();
            break;
          }
          case 96: {
            ReachMaxClaim = input.ReadBool();
            break;
          }
          case 104: {
            AlreadyClaim = input.ReadBool();
            break;
          }
          case 114: {
            UserId = input.ReadString();
            break;
          }
          case 120: {
            OpenToClaim = input.ReadBool();
            break;
          }
          case 128: {
            ErrCode = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ListGiftCode : pb::IMessage<ListGiftCode>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ListGiftCode> _parser = new pb::MessageParser<ListGiftCode>(() => new ListGiftCode());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListGiftCode> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.CommonApiReflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListGiftCode() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListGiftCode(ListGiftCode other) : this() {
      giftCodes_ = other.giftCodes_.Clone();
      total_ = other.total_;
      offset_ = other.offset_;
      limit_ = other.limit_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListGiftCode Clone() {
      return new ListGiftCode(this);
    }

    /// <summary>Field number for the "gift_codes" field.</summary>
    public const int GiftCodesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Api.GiftCode> _repeated_giftCodes_codec
        = pb::FieldCodec.ForMessage(10, global::Api.GiftCode.Parser);
    private readonly pbc::RepeatedField<global::Api.GiftCode> giftCodes_ = new pbc::RepeatedField<global::Api.GiftCode>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Api.GiftCode> GiftCodes {
      get { return giftCodes_; }
    }

    /// <summary>Field number for the "total" field.</summary>
    public const int TotalFieldNumber = 2;
    private long total_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Total {
      get { return total_; }
      set {
        total_ = value;
      }
    }

    /// <summary>Field number for the "offset" field.</summary>
    public const int OffsetFieldNumber = 3;
    private long offset_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Offset {
      get { return offset_; }
      set {
        offset_ = value;
      }
    }

    /// <summary>Field number for the "limit" field.</summary>
    public const int LimitFieldNumber = 4;
    private long limit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Limit {
      get { return limit_; }
      set {
        limit_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListGiftCode);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListGiftCode other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!giftCodes_.Equals(other.giftCodes_)) return false;
      if (Total != other.Total) return false;
      if (Offset != other.Offset) return false;
      if (Limit != other.Limit) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= giftCodes_.GetHashCode();
      if (Total != 0L) hash ^= Total.GetHashCode();
      if (Offset != 0L) hash ^= Offset.GetHashCode();
      if (Limit != 0L) hash ^= Limit.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      giftCodes_.WriteTo(output, _repeated_giftCodes_codec);
      if (Total != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Total);
      }
      if (Offset != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Offset);
      }
      if (Limit != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(Limit);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      giftCodes_.WriteTo(ref output, _repeated_giftCodes_codec);
      if (Total != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Total);
      }
      if (Offset != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Offset);
      }
      if (Limit != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(Limit);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += giftCodes_.CalculateSize(_repeated_giftCodes_codec);
      if (Total != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Total);
      }
      if (Offset != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Offset);
      }
      if (Limit != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Limit);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListGiftCode other) {
      if (other == null) {
        return;
      }
      giftCodes_.Add(other.giftCodes_);
      if (other.Total != 0L) {
        Total = other.Total;
      }
      if (other.Offset != 0L) {
        Offset = other.Offset;
      }
      if (other.Limit != 0L) {
        Limit = other.Limit;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            giftCodes_.AddEntriesFrom(input, _repeated_giftCodes_codec);
            break;
          }
          case 16: {
            Total = input.ReadInt64();
            break;
          }
          case 24: {
            Offset = input.ReadInt64();
            break;
          }
          case 32: {
            Limit = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            giftCodes_.AddEntriesFrom(ref input, _repeated_giftCodes_codec);
            break;
          }
          case 16: {
            Total = input.ReadInt64();
            break;
          }
          case 24: {
            Offset = input.ReadInt64();
            break;
          }
          case 32: {
            Limit = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class AddNotificationRequest : pb::IMessage<AddNotificationRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AddNotificationRequest> _parser = new pb::MessageParser<AddNotificationRequest>(() => new AddNotificationRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AddNotificationRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.CommonApiReflection.Descriptor.MessageTypes[25]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddNotificationRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddNotificationRequest(AddNotificationRequest other) : this() {
      recipientIds_ = other.recipientIds_.Clone();
      userGroupId_ = other.userGroupId_;
      type_ = other.type_;
      title_ = other.title_;
      content_ = other.content_;
      senderId_ = other.senderId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddNotificationRequest Clone() {
      return new AddNotificationRequest(this);
    }

    /// <summary>Field number for the "recipient_ids" field.</summary>
    public const int RecipientIdsFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_recipientIds_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> recipientIds_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> RecipientIds {
      get { return recipientIds_; }
    }

    /// <summary>Field number for the "user_group_id" field.</summary>
    public const int UserGroupIdFieldNumber = 2;
    private long userGroupId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long UserGroupId {
      get { return userGroupId_; }
      set {
        userGroupId_ = value;
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 3;
    private global::Api.TypeNotification type_ = global::Api.TypeNotification.Reserved;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Api.TypeNotification Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "title" field.</summary>
    public const int TitleFieldNumber = 4;
    private string title_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Title {
      get { return title_; }
      set {
        title_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "content" field.</summary>
    public const int ContentFieldNumber = 5;
    private string content_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Content {
      get { return content_; }
      set {
        content_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "sender_id" field.</summary>
    public const int SenderIdFieldNumber = 6;
    private string senderId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SenderId {
      get { return senderId_; }
      set {
        senderId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AddNotificationRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AddNotificationRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!recipientIds_.Equals(other.recipientIds_)) return false;
      if (UserGroupId != other.UserGroupId) return false;
      if (Type != other.Type) return false;
      if (Title != other.Title) return false;
      if (Content != other.Content) return false;
      if (SenderId != other.SenderId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= recipientIds_.GetHashCode();
      if (UserGroupId != 0L) hash ^= UserGroupId.GetHashCode();
      if (Type != global::Api.TypeNotification.Reserved) hash ^= Type.GetHashCode();
      if (Title.Length != 0) hash ^= Title.GetHashCode();
      if (Content.Length != 0) hash ^= Content.GetHashCode();
      if (SenderId.Length != 0) hash ^= SenderId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      recipientIds_.WriteTo(output, _repeated_recipientIds_codec);
      if (UserGroupId != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(UserGroupId);
      }
      if (Type != global::Api.TypeNotification.Reserved) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Type);
      }
      if (Title.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Title);
      }
      if (Content.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Content);
      }
      if (SenderId.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(SenderId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      recipientIds_.WriteTo(ref output, _repeated_recipientIds_codec);
      if (UserGroupId != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(UserGroupId);
      }
      if (Type != global::Api.TypeNotification.Reserved) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Type);
      }
      if (Title.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Title);
      }
      if (Content.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Content);
      }
      if (SenderId.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(SenderId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += recipientIds_.CalculateSize(_repeated_recipientIds_codec);
      if (UserGroupId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(UserGroupId);
      }
      if (Type != global::Api.TypeNotification.Reserved) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (Title.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Title);
      }
      if (Content.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Content);
      }
      if (SenderId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SenderId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AddNotificationRequest other) {
      if (other == null) {
        return;
      }
      recipientIds_.Add(other.recipientIds_);
      if (other.UserGroupId != 0L) {
        UserGroupId = other.UserGroupId;
      }
      if (other.Type != global::Api.TypeNotification.Reserved) {
        Type = other.Type;
      }
      if (other.Title.Length != 0) {
        Title = other.Title;
      }
      if (other.Content.Length != 0) {
        Content = other.Content;
      }
      if (other.SenderId.Length != 0) {
        SenderId = other.SenderId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            recipientIds_.AddEntriesFrom(input, _repeated_recipientIds_codec);
            break;
          }
          case 16: {
            UserGroupId = input.ReadInt64();
            break;
          }
          case 24: {
            Type = (global::Api.TypeNotification) input.ReadEnum();
            break;
          }
          case 34: {
            Title = input.ReadString();
            break;
          }
          case 42: {
            Content = input.ReadString();
            break;
          }
          case 50: {
            SenderId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            recipientIds_.AddEntriesFrom(ref input, _repeated_recipientIds_codec);
            break;
          }
          case 16: {
            UserGroupId = input.ReadInt64();
            break;
          }
          case 24: {
            Type = (global::Api.TypeNotification) input.ReadEnum();
            break;
          }
          case 34: {
            Title = input.ReadString();
            break;
          }
          case 42: {
            Content = input.ReadString();
            break;
          }
          case 50: {
            SenderId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Notification : pb::IMessage<Notification>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Notification> _parser = new pb::MessageParser<Notification>(() => new Notification());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Notification> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.CommonApiReflection.Descriptor.MessageTypes[26]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Notification() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Notification(Notification other) : this() {
      id_ = other.id_;
      recipientId_ = other.recipientId_;
      type_ = other.type_;
      title_ = other.title_;
      content_ = other.content_;
      senderId_ = other.senderId_;
      read_ = other.read_;
      createTimeUnix_ = other.createTimeUnix_;
      appPackage_ = other.appPackage_;
      gameId_ = other.gameId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Notification Clone() {
      return new Notification(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private long id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "recipient_id" field.</summary>
    public const int RecipientIdFieldNumber = 2;
    private string recipientId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RecipientId {
      get { return recipientId_; }
      set {
        recipientId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 3;
    private global::Api.TypeNotification type_ = global::Api.TypeNotification.Reserved;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Api.TypeNotification Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "title" field.</summary>
    public const int TitleFieldNumber = 4;
    private string title_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Title {
      get { return title_; }
      set {
        title_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "content" field.</summary>
    public const int ContentFieldNumber = 5;
    private string content_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Content {
      get { return content_; }
      set {
        content_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "sender_id" field.</summary>
    public const int SenderIdFieldNumber = 6;
    private string senderId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SenderId {
      get { return senderId_; }
      set {
        senderId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "read" field.</summary>
    public const int ReadFieldNumber = 7;
    private bool read_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Read {
      get { return read_; }
      set {
        read_ = value;
      }
    }

    /// <summary>Field number for the "create_time_unix" field.</summary>
    public const int CreateTimeUnixFieldNumber = 8;
    private long createTimeUnix_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long CreateTimeUnix {
      get { return createTimeUnix_; }
      set {
        createTimeUnix_ = value;
      }
    }

    /// <summary>Field number for the "app_package" field.</summary>
    public const int AppPackageFieldNumber = 9;
    private string appPackage_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AppPackage {
      get { return appPackage_; }
      set {
        appPackage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "game_id" field.</summary>
    public const int GameIdFieldNumber = 10;
    private string gameId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GameId {
      get { return gameId_; }
      set {
        gameId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Notification);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Notification other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (RecipientId != other.RecipientId) return false;
      if (Type != other.Type) return false;
      if (Title != other.Title) return false;
      if (Content != other.Content) return false;
      if (SenderId != other.SenderId) return false;
      if (Read != other.Read) return false;
      if (CreateTimeUnix != other.CreateTimeUnix) return false;
      if (AppPackage != other.AppPackage) return false;
      if (GameId != other.GameId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0L) hash ^= Id.GetHashCode();
      if (RecipientId.Length != 0) hash ^= RecipientId.GetHashCode();
      if (Type != global::Api.TypeNotification.Reserved) hash ^= Type.GetHashCode();
      if (Title.Length != 0) hash ^= Title.GetHashCode();
      if (Content.Length != 0) hash ^= Content.GetHashCode();
      if (SenderId.Length != 0) hash ^= SenderId.GetHashCode();
      if (Read != false) hash ^= Read.GetHashCode();
      if (CreateTimeUnix != 0L) hash ^= CreateTimeUnix.GetHashCode();
      if (AppPackage.Length != 0) hash ^= AppPackage.GetHashCode();
      if (GameId.Length != 0) hash ^= GameId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Id);
      }
      if (RecipientId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(RecipientId);
      }
      if (Type != global::Api.TypeNotification.Reserved) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Type);
      }
      if (Title.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Title);
      }
      if (Content.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Content);
      }
      if (SenderId.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(SenderId);
      }
      if (Read != false) {
        output.WriteRawTag(56);
        output.WriteBool(Read);
      }
      if (CreateTimeUnix != 0L) {
        output.WriteRawTag(64);
        output.WriteInt64(CreateTimeUnix);
      }
      if (AppPackage.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(AppPackage);
      }
      if (GameId.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(GameId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Id);
      }
      if (RecipientId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(RecipientId);
      }
      if (Type != global::Api.TypeNotification.Reserved) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Type);
      }
      if (Title.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Title);
      }
      if (Content.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Content);
      }
      if (SenderId.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(SenderId);
      }
      if (Read != false) {
        output.WriteRawTag(56);
        output.WriteBool(Read);
      }
      if (CreateTimeUnix != 0L) {
        output.WriteRawTag(64);
        output.WriteInt64(CreateTimeUnix);
      }
      if (AppPackage.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(AppPackage);
      }
      if (GameId.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(GameId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Id);
      }
      if (RecipientId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RecipientId);
      }
      if (Type != global::Api.TypeNotification.Reserved) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (Title.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Title);
      }
      if (Content.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Content);
      }
      if (SenderId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SenderId);
      }
      if (Read != false) {
        size += 1 + 1;
      }
      if (CreateTimeUnix != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CreateTimeUnix);
      }
      if (AppPackage.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AppPackage);
      }
      if (GameId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GameId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Notification other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0L) {
        Id = other.Id;
      }
      if (other.RecipientId.Length != 0) {
        RecipientId = other.RecipientId;
      }
      if (other.Type != global::Api.TypeNotification.Reserved) {
        Type = other.Type;
      }
      if (other.Title.Length != 0) {
        Title = other.Title;
      }
      if (other.Content.Length != 0) {
        Content = other.Content;
      }
      if (other.SenderId.Length != 0) {
        SenderId = other.SenderId;
      }
      if (other.Read != false) {
        Read = other.Read;
      }
      if (other.CreateTimeUnix != 0L) {
        CreateTimeUnix = other.CreateTimeUnix;
      }
      if (other.AppPackage.Length != 0) {
        AppPackage = other.AppPackage;
      }
      if (other.GameId.Length != 0) {
        GameId = other.GameId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt64();
            break;
          }
          case 18: {
            RecipientId = input.ReadString();
            break;
          }
          case 24: {
            Type = (global::Api.TypeNotification) input.ReadEnum();
            break;
          }
          case 34: {
            Title = input.ReadString();
            break;
          }
          case 42: {
            Content = input.ReadString();
            break;
          }
          case 50: {
            SenderId = input.ReadString();
            break;
          }
          case 56: {
            Read = input.ReadBool();
            break;
          }
          case 64: {
            CreateTimeUnix = input.ReadInt64();
            break;
          }
          case 74: {
            AppPackage = input.ReadString();
            break;
          }
          case 82: {
            GameId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt64();
            break;
          }
          case 18: {
            RecipientId = input.ReadString();
            break;
          }
          case 24: {
            Type = (global::Api.TypeNotification) input.ReadEnum();
            break;
          }
          case 34: {
            Title = input.ReadString();
            break;
          }
          case 42: {
            Content = input.ReadString();
            break;
          }
          case 50: {
            SenderId = input.ReadString();
            break;
          }
          case 56: {
            Read = input.ReadBool();
            break;
          }
          case 64: {
            CreateTimeUnix = input.ReadInt64();
            break;
          }
          case 74: {
            AppPackage = input.ReadString();
            break;
          }
          case 82: {
            GameId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class NotificationRequest : pb::IMessage<NotificationRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<NotificationRequest> _parser = new pb::MessageParser<NotificationRequest>(() => new NotificationRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NotificationRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.CommonApiReflection.Descriptor.MessageTypes[27]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NotificationRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NotificationRequest(NotificationRequest other) : this() {
      limit_ = other.limit_;
      cusor_ = other.cusor_;
      type_ = other.type_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NotificationRequest Clone() {
      return new NotificationRequest(this);
    }

    /// <summary>Field number for the "limit" field.</summary>
    public const int LimitFieldNumber = 1;
    private long limit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Limit {
      get { return limit_; }
      set {
        limit_ = value;
      }
    }

    /// <summary>Field number for the "cusor" field.</summary>
    public const int CusorFieldNumber = 2;
    private string cusor_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Cusor {
      get { return cusor_; }
      set {
        cusor_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 3;
    private global::Api.TypeNotification type_ = global::Api.TypeNotification.Reserved;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Api.TypeNotification Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NotificationRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NotificationRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Limit != other.Limit) return false;
      if (Cusor != other.Cusor) return false;
      if (Type != other.Type) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Limit != 0L) hash ^= Limit.GetHashCode();
      if (Cusor.Length != 0) hash ^= Cusor.GetHashCode();
      if (Type != global::Api.TypeNotification.Reserved) hash ^= Type.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Limit != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Limit);
      }
      if (Cusor.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Cusor);
      }
      if (Type != global::Api.TypeNotification.Reserved) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Limit != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Limit);
      }
      if (Cusor.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Cusor);
      }
      if (Type != global::Api.TypeNotification.Reserved) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Limit != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Limit);
      }
      if (Cusor.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Cusor);
      }
      if (Type != global::Api.TypeNotification.Reserved) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NotificationRequest other) {
      if (other == null) {
        return;
      }
      if (other.Limit != 0L) {
        Limit = other.Limit;
      }
      if (other.Cusor.Length != 0) {
        Cusor = other.Cusor;
      }
      if (other.Type != global::Api.TypeNotification.Reserved) {
        Type = other.Type;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Limit = input.ReadInt64();
            break;
          }
          case 18: {
            Cusor = input.ReadString();
            break;
          }
          case 24: {
            Type = (global::Api.TypeNotification) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Limit = input.ReadInt64();
            break;
          }
          case 18: {
            Cusor = input.ReadString();
            break;
          }
          case 24: {
            Type = (global::Api.TypeNotification) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ListNotification : pb::IMessage<ListNotification>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ListNotification> _parser = new pb::MessageParser<ListNotification>(() => new ListNotification());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListNotification> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.CommonApiReflection.Descriptor.MessageTypes[28]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListNotification() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListNotification(ListNotification other) : this() {
      notifications_ = other.notifications_.Clone();
      nextCusor_ = other.nextCusor_;
      prevCusor_ = other.prevCusor_;
      total_ = other.total_;
      offset_ = other.offset_;
      limit_ = other.limit_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListNotification Clone() {
      return new ListNotification(this);
    }

    /// <summary>Field number for the "notifications" field.</summary>
    public const int NotificationsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Api.Notification> _repeated_notifications_codec
        = pb::FieldCodec.ForMessage(10, global::Api.Notification.Parser);
    private readonly pbc::RepeatedField<global::Api.Notification> notifications_ = new pbc::RepeatedField<global::Api.Notification>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Api.Notification> Notifications {
      get { return notifications_; }
    }

    /// <summary>Field number for the "next_cusor" field.</summary>
    public const int NextCusorFieldNumber = 2;
    private string nextCusor_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NextCusor {
      get { return nextCusor_; }
      set {
        nextCusor_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "prev_cusor" field.</summary>
    public const int PrevCusorFieldNumber = 3;
    private string prevCusor_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PrevCusor {
      get { return prevCusor_; }
      set {
        prevCusor_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "total" field.</summary>
    public const int TotalFieldNumber = 4;
    private long total_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Total {
      get { return total_; }
      set {
        total_ = value;
      }
    }

    /// <summary>Field number for the "offset" field.</summary>
    public const int OffsetFieldNumber = 5;
    private long offset_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Offset {
      get { return offset_; }
      set {
        offset_ = value;
      }
    }

    /// <summary>Field number for the "limit" field.</summary>
    public const int LimitFieldNumber = 6;
    private long limit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Limit {
      get { return limit_; }
      set {
        limit_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListNotification);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListNotification other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!notifications_.Equals(other.notifications_)) return false;
      if (NextCusor != other.NextCusor) return false;
      if (PrevCusor != other.PrevCusor) return false;
      if (Total != other.Total) return false;
      if (Offset != other.Offset) return false;
      if (Limit != other.Limit) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= notifications_.GetHashCode();
      if (NextCusor.Length != 0) hash ^= NextCusor.GetHashCode();
      if (PrevCusor.Length != 0) hash ^= PrevCusor.GetHashCode();
      if (Total != 0L) hash ^= Total.GetHashCode();
      if (Offset != 0L) hash ^= Offset.GetHashCode();
      if (Limit != 0L) hash ^= Limit.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      notifications_.WriteTo(output, _repeated_notifications_codec);
      if (NextCusor.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(NextCusor);
      }
      if (PrevCusor.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(PrevCusor);
      }
      if (Total != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(Total);
      }
      if (Offset != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(Offset);
      }
      if (Limit != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(Limit);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      notifications_.WriteTo(ref output, _repeated_notifications_codec);
      if (NextCusor.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(NextCusor);
      }
      if (PrevCusor.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(PrevCusor);
      }
      if (Total != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(Total);
      }
      if (Offset != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(Offset);
      }
      if (Limit != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(Limit);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += notifications_.CalculateSize(_repeated_notifications_codec);
      if (NextCusor.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NextCusor);
      }
      if (PrevCusor.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PrevCusor);
      }
      if (Total != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Total);
      }
      if (Offset != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Offset);
      }
      if (Limit != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Limit);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListNotification other) {
      if (other == null) {
        return;
      }
      notifications_.Add(other.notifications_);
      if (other.NextCusor.Length != 0) {
        NextCusor = other.NextCusor;
      }
      if (other.PrevCusor.Length != 0) {
        PrevCusor = other.PrevCusor;
      }
      if (other.Total != 0L) {
        Total = other.Total;
      }
      if (other.Offset != 0L) {
        Offset = other.Offset;
      }
      if (other.Limit != 0L) {
        Limit = other.Limit;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            notifications_.AddEntriesFrom(input, _repeated_notifications_codec);
            break;
          }
          case 18: {
            NextCusor = input.ReadString();
            break;
          }
          case 26: {
            PrevCusor = input.ReadString();
            break;
          }
          case 32: {
            Total = input.ReadInt64();
            break;
          }
          case 40: {
            Offset = input.ReadInt64();
            break;
          }
          case 48: {
            Limit = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            notifications_.AddEntriesFrom(ref input, _repeated_notifications_codec);
            break;
          }
          case 18: {
            NextCusor = input.ReadString();
            break;
          }
          case 26: {
            PrevCusor = input.ReadString();
            break;
          }
          case 32: {
            Total = input.ReadInt64();
            break;
          }
          case 40: {
            Offset = input.ReadInt64();
            break;
          }
          case 48: {
            Limit = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class RangeTime : pb::IMessage<RangeTime>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RangeTime> _parser = new pb::MessageParser<RangeTime>(() => new RangeTime());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RangeTime> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.CommonApiReflection.Descriptor.MessageTypes[29]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RangeTime() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RangeTime(RangeTime other) : this() {
      from_ = other.from_;
      to_ = other.to_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RangeTime Clone() {
      return new RangeTime(this);
    }

    /// <summary>Field number for the "from" field.</summary>
    public const int FromFieldNumber = 1;
    private int from_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int From {
      get { return from_; }
      set {
        from_ = value;
      }
    }

    /// <summary>Field number for the "to" field.</summary>
    public const int ToFieldNumber = 2;
    private int to_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int To {
      get { return to_; }
      set {
        to_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RangeTime);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RangeTime other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (From != other.From) return false;
      if (To != other.To) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (From != 0) hash ^= From.GetHashCode();
      if (To != 0) hash ^= To.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (From != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(From);
      }
      if (To != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(To);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (From != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(From);
      }
      if (To != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(To);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (From != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(From);
      }
      if (To != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(To);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RangeTime other) {
      if (other == null) {
        return;
      }
      if (other.From != 0) {
        From = other.From;
      }
      if (other.To != 0) {
        To = other.To;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            From = input.ReadInt32();
            break;
          }
          case 16: {
            To = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            From = input.ReadInt32();
            break;
          }
          case 16: {
            To = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class InAppMessageData : pb::IMessage<InAppMessageData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<InAppMessageData> _parser = new pb::MessageParser<InAppMessageData>(() => new InAppMessageData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InAppMessageData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.CommonApiReflection.Descriptor.MessageTypes[30]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InAppMessageData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InAppMessageData(InAppMessageData other) : this() {
      action_ = other.action_;
      target_ = other.target_;
      params_ = other.params_.Clone();
      showTimes_ = other.showTimes_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InAppMessageData Clone() {
      return new InAppMessageData(this);
    }

    /// <summary>Field number for the "action" field.</summary>
    public const int ActionFieldNumber = 1;
    private global::Api.InAppMessageAction action_ = global::Api.InAppMessageAction.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Api.InAppMessageAction Action {
      get { return action_; }
      set {
        action_ = value;
      }
    }

    /// <summary>Field number for the "target" field.</summary>
    public const int TargetFieldNumber = 2;
    private string target_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Target {
      get { return target_; }
      set {
        target_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "params" field.</summary>
    public const int ParamsFieldNumber = 3;
    private static readonly pbc::MapField<string, string>.Codec _map_params_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForString(18, ""), 26);
    private readonly pbc::MapField<string, string> params_ = new pbc::MapField<string, string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Params {
      get { return params_; }
    }

    /// <summary>Field number for the "showTimes" field.</summary>
    public const int ShowTimesFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Api.RangeTime> _repeated_showTimes_codec
        = pb::FieldCodec.ForMessage(34, global::Api.RangeTime.Parser);
    private readonly pbc::RepeatedField<global::Api.RangeTime> showTimes_ = new pbc::RepeatedField<global::Api.RangeTime>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Api.RangeTime> ShowTimes {
      get { return showTimes_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InAppMessageData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InAppMessageData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Action != other.Action) return false;
      if (Target != other.Target) return false;
      if (!Params.Equals(other.Params)) return false;
      if(!showTimes_.Equals(other.showTimes_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Action != global::Api.InAppMessageAction.None) hash ^= Action.GetHashCode();
      if (Target.Length != 0) hash ^= Target.GetHashCode();
      hash ^= Params.GetHashCode();
      hash ^= showTimes_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Action != global::Api.InAppMessageAction.None) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Action);
      }
      if (Target.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Target);
      }
      params_.WriteTo(output, _map_params_codec);
      showTimes_.WriteTo(output, _repeated_showTimes_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Action != global::Api.InAppMessageAction.None) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Action);
      }
      if (Target.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Target);
      }
      params_.WriteTo(ref output, _map_params_codec);
      showTimes_.WriteTo(ref output, _repeated_showTimes_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Action != global::Api.InAppMessageAction.None) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Action);
      }
      if (Target.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Target);
      }
      size += params_.CalculateSize(_map_params_codec);
      size += showTimes_.CalculateSize(_repeated_showTimes_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InAppMessageData other) {
      if (other == null) {
        return;
      }
      if (other.Action != global::Api.InAppMessageAction.None) {
        Action = other.Action;
      }
      if (other.Target.Length != 0) {
        Target = other.Target;
      }
      params_.Add(other.params_);
      showTimes_.Add(other.showTimes_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Action = (global::Api.InAppMessageAction) input.ReadEnum();
            break;
          }
          case 18: {
            Target = input.ReadString();
            break;
          }
          case 26: {
            params_.AddEntriesFrom(input, _map_params_codec);
            break;
          }
          case 34: {
            showTimes_.AddEntriesFrom(input, _repeated_showTimes_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Action = (global::Api.InAppMessageAction) input.ReadEnum();
            break;
          }
          case 18: {
            Target = input.ReadString();
            break;
          }
          case 26: {
            params_.AddEntriesFrom(ref input, _map_params_codec);
            break;
          }
          case 34: {
            showTimes_.AddEntriesFrom(ref input, _repeated_showTimes_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class InAppMessage : pb::IMessage<InAppMessage>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<InAppMessage> _parser = new pb::MessageParser<InAppMessage>(() => new InAppMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InAppMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.CommonApiReflection.Descriptor.MessageTypes[31]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InAppMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InAppMessage(InAppMessage other) : this() {
      id_ = other.id_;
      highPriority_ = other.highPriority_;
      groupIds_ = other.groupIds_.Clone();
      type_ = other.type_;
      data_ = other.data_ != null ? other.data_.Clone() : null;
      startDate_ = other.startDate_;
      endDate_ = other.endDate_;
      createTimeUnix_ = other.createTimeUnix_;
      appPackage_ = other.appPackage_;
      gameId_ = other.gameId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InAppMessage Clone() {
      return new InAppMessage(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private long id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "high_priority" field.</summary>
    public const int HighPriorityFieldNumber = 2;
    private long highPriority_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long HighPriority {
      get { return highPriority_; }
      set {
        highPriority_ = value;
      }
    }

    /// <summary>Field number for the "group_ids" field.</summary>
    public const int GroupIdsFieldNumber = 3;
    private static readonly pb::FieldCodec<long> _repeated_groupIds_codec
        = pb::FieldCodec.ForInt64(26);
    private readonly pbc::RepeatedField<long> groupIds_ = new pbc::RepeatedField<long>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<long> GroupIds {
      get { return groupIds_; }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 4;
    private global::Api.TypeInAppMessage type_ = global::Api.TypeInAppMessage.HotNews;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Api.TypeInAppMessage Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "data" field.</summary>
    public const int DataFieldNumber = 5;
    private global::Api.InAppMessageData data_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Api.InAppMessageData Data {
      get { return data_; }
      set {
        data_ = value;
      }
    }

    /// <summary>Field number for the "start_date" field.</summary>
    public const int StartDateFieldNumber = 6;
    private long startDate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long StartDate {
      get { return startDate_; }
      set {
        startDate_ = value;
      }
    }

    /// <summary>Field number for the "end_date" field.</summary>
    public const int EndDateFieldNumber = 7;
    private long endDate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long EndDate {
      get { return endDate_; }
      set {
        endDate_ = value;
      }
    }

    /// <summary>Field number for the "create_time_unix" field.</summary>
    public const int CreateTimeUnixFieldNumber = 8;
    private long createTimeUnix_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long CreateTimeUnix {
      get { return createTimeUnix_; }
      set {
        createTimeUnix_ = value;
      }
    }

    /// <summary>Field number for the "app_package" field.</summary>
    public const int AppPackageFieldNumber = 9;
    private string appPackage_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AppPackage {
      get { return appPackage_; }
      set {
        appPackage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "game_id" field.</summary>
    public const int GameIdFieldNumber = 10;
    private string gameId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GameId {
      get { return gameId_; }
      set {
        gameId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InAppMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InAppMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (HighPriority != other.HighPriority) return false;
      if(!groupIds_.Equals(other.groupIds_)) return false;
      if (Type != other.Type) return false;
      if (!object.Equals(Data, other.Data)) return false;
      if (StartDate != other.StartDate) return false;
      if (EndDate != other.EndDate) return false;
      if (CreateTimeUnix != other.CreateTimeUnix) return false;
      if (AppPackage != other.AppPackage) return false;
      if (GameId != other.GameId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0L) hash ^= Id.GetHashCode();
      if (HighPriority != 0L) hash ^= HighPriority.GetHashCode();
      hash ^= groupIds_.GetHashCode();
      if (Type != global::Api.TypeInAppMessage.HotNews) hash ^= Type.GetHashCode();
      if (data_ != null) hash ^= Data.GetHashCode();
      if (StartDate != 0L) hash ^= StartDate.GetHashCode();
      if (EndDate != 0L) hash ^= EndDate.GetHashCode();
      if (CreateTimeUnix != 0L) hash ^= CreateTimeUnix.GetHashCode();
      if (AppPackage.Length != 0) hash ^= AppPackage.GetHashCode();
      if (GameId.Length != 0) hash ^= GameId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Id);
      }
      if (HighPriority != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(HighPriority);
      }
      groupIds_.WriteTo(output, _repeated_groupIds_codec);
      if (Type != global::Api.TypeInAppMessage.HotNews) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Type);
      }
      if (data_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Data);
      }
      if (StartDate != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(StartDate);
      }
      if (EndDate != 0L) {
        output.WriteRawTag(56);
        output.WriteInt64(EndDate);
      }
      if (CreateTimeUnix != 0L) {
        output.WriteRawTag(64);
        output.WriteInt64(CreateTimeUnix);
      }
      if (AppPackage.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(AppPackage);
      }
      if (GameId.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(GameId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Id);
      }
      if (HighPriority != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(HighPriority);
      }
      groupIds_.WriteTo(ref output, _repeated_groupIds_codec);
      if (Type != global::Api.TypeInAppMessage.HotNews) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Type);
      }
      if (data_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Data);
      }
      if (StartDate != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(StartDate);
      }
      if (EndDate != 0L) {
        output.WriteRawTag(56);
        output.WriteInt64(EndDate);
      }
      if (CreateTimeUnix != 0L) {
        output.WriteRawTag(64);
        output.WriteInt64(CreateTimeUnix);
      }
      if (AppPackage.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(AppPackage);
      }
      if (GameId.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(GameId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Id);
      }
      if (HighPriority != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(HighPriority);
      }
      size += groupIds_.CalculateSize(_repeated_groupIds_codec);
      if (Type != global::Api.TypeInAppMessage.HotNews) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (data_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Data);
      }
      if (StartDate != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(StartDate);
      }
      if (EndDate != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(EndDate);
      }
      if (CreateTimeUnix != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CreateTimeUnix);
      }
      if (AppPackage.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AppPackage);
      }
      if (GameId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GameId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InAppMessage other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0L) {
        Id = other.Id;
      }
      if (other.HighPriority != 0L) {
        HighPriority = other.HighPriority;
      }
      groupIds_.Add(other.groupIds_);
      if (other.Type != global::Api.TypeInAppMessage.HotNews) {
        Type = other.Type;
      }
      if (other.data_ != null) {
        if (data_ == null) {
          Data = new global::Api.InAppMessageData();
        }
        Data.MergeFrom(other.Data);
      }
      if (other.StartDate != 0L) {
        StartDate = other.StartDate;
      }
      if (other.EndDate != 0L) {
        EndDate = other.EndDate;
      }
      if (other.CreateTimeUnix != 0L) {
        CreateTimeUnix = other.CreateTimeUnix;
      }
      if (other.AppPackage.Length != 0) {
        AppPackage = other.AppPackage;
      }
      if (other.GameId.Length != 0) {
        GameId = other.GameId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt64();
            break;
          }
          case 16: {
            HighPriority = input.ReadInt64();
            break;
          }
          case 26:
          case 24: {
            groupIds_.AddEntriesFrom(input, _repeated_groupIds_codec);
            break;
          }
          case 32: {
            Type = (global::Api.TypeInAppMessage) input.ReadEnum();
            break;
          }
          case 42: {
            if (data_ == null) {
              Data = new global::Api.InAppMessageData();
            }
            input.ReadMessage(Data);
            break;
          }
          case 48: {
            StartDate = input.ReadInt64();
            break;
          }
          case 56: {
            EndDate = input.ReadInt64();
            break;
          }
          case 64: {
            CreateTimeUnix = input.ReadInt64();
            break;
          }
          case 74: {
            AppPackage = input.ReadString();
            break;
          }
          case 82: {
            GameId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt64();
            break;
          }
          case 16: {
            HighPriority = input.ReadInt64();
            break;
          }
          case 26:
          case 24: {
            groupIds_.AddEntriesFrom(ref input, _repeated_groupIds_codec);
            break;
          }
          case 32: {
            Type = (global::Api.TypeInAppMessage) input.ReadEnum();
            break;
          }
          case 42: {
            if (data_ == null) {
              Data = new global::Api.InAppMessageData();
            }
            input.ReadMessage(Data);
            break;
          }
          case 48: {
            StartDate = input.ReadInt64();
            break;
          }
          case 56: {
            EndDate = input.ReadInt64();
            break;
          }
          case 64: {
            CreateTimeUnix = input.ReadInt64();
            break;
          }
          case 74: {
            AppPackage = input.ReadString();
            break;
          }
          case 82: {
            GameId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class InAppMessageRequest : pb::IMessage<InAppMessageRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<InAppMessageRequest> _parser = new pb::MessageParser<InAppMessageRequest>(() => new InAppMessageRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InAppMessageRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.CommonApiReflection.Descriptor.MessageTypes[32]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InAppMessageRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InAppMessageRequest(InAppMessageRequest other) : this() {
      limit_ = other.limit_;
      cusor_ = other.cusor_;
      type_ = other.type_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InAppMessageRequest Clone() {
      return new InAppMessageRequest(this);
    }

    /// <summary>Field number for the "limit" field.</summary>
    public const int LimitFieldNumber = 1;
    private long limit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Limit {
      get { return limit_; }
      set {
        limit_ = value;
      }
    }

    /// <summary>Field number for the "cusor" field.</summary>
    public const int CusorFieldNumber = 2;
    private string cusor_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Cusor {
      get { return cusor_; }
      set {
        cusor_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 3;
    private global::Api.TypeInAppMessage type_ = global::Api.TypeInAppMessage.HotNews;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Api.TypeInAppMessage Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InAppMessageRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InAppMessageRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Limit != other.Limit) return false;
      if (Cusor != other.Cusor) return false;
      if (Type != other.Type) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Limit != 0L) hash ^= Limit.GetHashCode();
      if (Cusor.Length != 0) hash ^= Cusor.GetHashCode();
      if (Type != global::Api.TypeInAppMessage.HotNews) hash ^= Type.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Limit != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Limit);
      }
      if (Cusor.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Cusor);
      }
      if (Type != global::Api.TypeInAppMessage.HotNews) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Limit != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Limit);
      }
      if (Cusor.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Cusor);
      }
      if (Type != global::Api.TypeInAppMessage.HotNews) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Limit != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Limit);
      }
      if (Cusor.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Cusor);
      }
      if (Type != global::Api.TypeInAppMessage.HotNews) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InAppMessageRequest other) {
      if (other == null) {
        return;
      }
      if (other.Limit != 0L) {
        Limit = other.Limit;
      }
      if (other.Cusor.Length != 0) {
        Cusor = other.Cusor;
      }
      if (other.Type != global::Api.TypeInAppMessage.HotNews) {
        Type = other.Type;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Limit = input.ReadInt64();
            break;
          }
          case 18: {
            Cusor = input.ReadString();
            break;
          }
          case 24: {
            Type = (global::Api.TypeInAppMessage) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Limit = input.ReadInt64();
            break;
          }
          case 18: {
            Cusor = input.ReadString();
            break;
          }
          case 24: {
            Type = (global::Api.TypeInAppMessage) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ListInAppMessage : pb::IMessage<ListInAppMessage>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ListInAppMessage> _parser = new pb::MessageParser<ListInAppMessage>(() => new ListInAppMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListInAppMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.CommonApiReflection.Descriptor.MessageTypes[33]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListInAppMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListInAppMessage(ListInAppMessage other) : this() {
      inAppMessages_ = other.inAppMessages_.Clone();
      nextCusor_ = other.nextCusor_;
      prevCusor_ = other.prevCusor_;
      total_ = other.total_;
      offset_ = other.offset_;
      limit_ = other.limit_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListInAppMessage Clone() {
      return new ListInAppMessage(this);
    }

    /// <summary>Field number for the "in_app_messages" field.</summary>
    public const int InAppMessagesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Api.InAppMessage> _repeated_inAppMessages_codec
        = pb::FieldCodec.ForMessage(10, global::Api.InAppMessage.Parser);
    private readonly pbc::RepeatedField<global::Api.InAppMessage> inAppMessages_ = new pbc::RepeatedField<global::Api.InAppMessage>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Api.InAppMessage> InAppMessages {
      get { return inAppMessages_; }
    }

    /// <summary>Field number for the "next_cusor" field.</summary>
    public const int NextCusorFieldNumber = 2;
    private string nextCusor_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NextCusor {
      get { return nextCusor_; }
      set {
        nextCusor_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "prev_cusor" field.</summary>
    public const int PrevCusorFieldNumber = 3;
    private string prevCusor_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PrevCusor {
      get { return prevCusor_; }
      set {
        prevCusor_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "total" field.</summary>
    public const int TotalFieldNumber = 4;
    private long total_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Total {
      get { return total_; }
      set {
        total_ = value;
      }
    }

    /// <summary>Field number for the "offset" field.</summary>
    public const int OffsetFieldNumber = 5;
    private long offset_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Offset {
      get { return offset_; }
      set {
        offset_ = value;
      }
    }

    /// <summary>Field number for the "limit" field.</summary>
    public const int LimitFieldNumber = 6;
    private long limit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Limit {
      get { return limit_; }
      set {
        limit_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListInAppMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListInAppMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!inAppMessages_.Equals(other.inAppMessages_)) return false;
      if (NextCusor != other.NextCusor) return false;
      if (PrevCusor != other.PrevCusor) return false;
      if (Total != other.Total) return false;
      if (Offset != other.Offset) return false;
      if (Limit != other.Limit) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= inAppMessages_.GetHashCode();
      if (NextCusor.Length != 0) hash ^= NextCusor.GetHashCode();
      if (PrevCusor.Length != 0) hash ^= PrevCusor.GetHashCode();
      if (Total != 0L) hash ^= Total.GetHashCode();
      if (Offset != 0L) hash ^= Offset.GetHashCode();
      if (Limit != 0L) hash ^= Limit.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      inAppMessages_.WriteTo(output, _repeated_inAppMessages_codec);
      if (NextCusor.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(NextCusor);
      }
      if (PrevCusor.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(PrevCusor);
      }
      if (Total != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(Total);
      }
      if (Offset != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(Offset);
      }
      if (Limit != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(Limit);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      inAppMessages_.WriteTo(ref output, _repeated_inAppMessages_codec);
      if (NextCusor.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(NextCusor);
      }
      if (PrevCusor.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(PrevCusor);
      }
      if (Total != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(Total);
      }
      if (Offset != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(Offset);
      }
      if (Limit != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(Limit);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += inAppMessages_.CalculateSize(_repeated_inAppMessages_codec);
      if (NextCusor.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NextCusor);
      }
      if (PrevCusor.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PrevCusor);
      }
      if (Total != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Total);
      }
      if (Offset != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Offset);
      }
      if (Limit != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Limit);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListInAppMessage other) {
      if (other == null) {
        return;
      }
      inAppMessages_.Add(other.inAppMessages_);
      if (other.NextCusor.Length != 0) {
        NextCusor = other.NextCusor;
      }
      if (other.PrevCusor.Length != 0) {
        PrevCusor = other.PrevCusor;
      }
      if (other.Total != 0L) {
        Total = other.Total;
      }
      if (other.Offset != 0L) {
        Offset = other.Offset;
      }
      if (other.Limit != 0L) {
        Limit = other.Limit;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            inAppMessages_.AddEntriesFrom(input, _repeated_inAppMessages_codec);
            break;
          }
          case 18: {
            NextCusor = input.ReadString();
            break;
          }
          case 26: {
            PrevCusor = input.ReadString();
            break;
          }
          case 32: {
            Total = input.ReadInt64();
            break;
          }
          case 40: {
            Offset = input.ReadInt64();
            break;
          }
          case 48: {
            Limit = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            inAppMessages_.AddEntriesFrom(ref input, _repeated_inAppMessages_codec);
            break;
          }
          case 18: {
            NextCusor = input.ReadString();
            break;
          }
          case 26: {
            PrevCusor = input.ReadString();
            break;
          }
          case 32: {
            Total = input.ReadInt64();
            break;
          }
          case 40: {
            Offset = input.ReadInt64();
            break;
          }
          case 48: {
            Limit = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class DefaultResponse : pb::IMessage<DefaultResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DefaultResponse> _parser = new pb::MessageParser<DefaultResponse>(() => new DefaultResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DefaultResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.CommonApiReflection.Descriptor.MessageTypes[34]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DefaultResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DefaultResponse(DefaultResponse other) : this() {
      message_ = other.message_;
      code_ = other.code_;
      status_ = other.status_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DefaultResponse Clone() {
      return new DefaultResponse(this);
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 1;
    private string message_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 2;
    private string code_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Code {
      get { return code_; }
      set {
        code_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 3;
    private string status_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Status {
      get { return status_; }
      set {
        status_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DefaultResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DefaultResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Message != other.Message) return false;
      if (Code != other.Code) return false;
      if (Status != other.Status) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      if (Code.Length != 0) hash ^= Code.GetHashCode();
      if (Status.Length != 0) hash ^= Status.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Message.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Message);
      }
      if (Code.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Code);
      }
      if (Status.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Message.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Message);
      }
      if (Code.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Code);
      }
      if (Status.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (Code.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Code);
      }
      if (Status.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Status);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DefaultResponse other) {
      if (other == null) {
        return;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
      if (other.Code.Length != 0) {
        Code = other.Code;
      }
      if (other.Status.Length != 0) {
        Status = other.Status;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Message = input.ReadString();
            break;
          }
          case 18: {
            Code = input.ReadString();
            break;
          }
          case 26: {
            Status = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Message = input.ReadString();
            break;
          }
          case 18: {
            Code = input.ReadString();
            break;
          }
          case 26: {
            Status = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PreSignPutRequest : pb::IMessage<PreSignPutRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PreSignPutRequest> _parser = new pb::MessageParser<PreSignPutRequest>(() => new PreSignPutRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PreSignPutRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.CommonApiReflection.Descriptor.MessageTypes[35]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PreSignPutRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PreSignPutRequest(PreSignPutRequest other) : this() {
      fileName_ = other.fileName_;
      bucketName_ = other.bucketName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PreSignPutRequest Clone() {
      return new PreSignPutRequest(this);
    }

    /// <summary>Field number for the "fileName" field.</summary>
    public const int FileNameFieldNumber = 1;
    private string fileName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FileName {
      get { return fileName_; }
      set {
        fileName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "bucketName" field.</summary>
    public const int BucketNameFieldNumber = 2;
    private string bucketName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BucketName {
      get { return bucketName_; }
      set {
        bucketName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PreSignPutRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PreSignPutRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FileName != other.FileName) return false;
      if (BucketName != other.BucketName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FileName.Length != 0) hash ^= FileName.GetHashCode();
      if (BucketName.Length != 0) hash ^= BucketName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (FileName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(FileName);
      }
      if (BucketName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(BucketName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (FileName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(FileName);
      }
      if (BucketName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(BucketName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FileName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FileName);
      }
      if (BucketName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BucketName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PreSignPutRequest other) {
      if (other == null) {
        return;
      }
      if (other.FileName.Length != 0) {
        FileName = other.FileName;
      }
      if (other.BucketName.Length != 0) {
        BucketName = other.BucketName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            FileName = input.ReadString();
            break;
          }
          case 18: {
            BucketName = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            FileName = input.ReadString();
            break;
          }
          case 18: {
            BucketName = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PreSignPutResponse : pb::IMessage<PreSignPutResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PreSignPutResponse> _parser = new pb::MessageParser<PreSignPutResponse>(() => new PreSignPutResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PreSignPutResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.CommonApiReflection.Descriptor.MessageTypes[36]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PreSignPutResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PreSignPutResponse(PreSignPutResponse other) : this() {
      url_ = other.url_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PreSignPutResponse Clone() {
      return new PreSignPutResponse(this);
    }

    /// <summary>Field number for the "url" field.</summary>
    public const int UrlFieldNumber = 1;
    private string url_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Url {
      get { return url_; }
      set {
        url_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PreSignPutResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PreSignPutResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Url != other.Url) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Url.Length != 0) hash ^= Url.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Url.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Url);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Url.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Url);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Url.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Url);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PreSignPutResponse other) {
      if (other == null) {
        return;
      }
      if (other.Url.Length != 0) {
        Url = other.Url;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Url = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Url = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ReferUser : pb::IMessage<ReferUser>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ReferUser> _parser = new pb::MessageParser<ReferUser>(() => new ReferUser());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReferUser> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.CommonApiReflection.Descriptor.MessageTypes[37]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReferUser() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReferUser(ReferUser other) : this() {
      id_ = other.id_;
      userInvitor_ = other.userInvitor_;
      userInvitee_ = other.userInvitee_;
      createTimeUnix_ = other.createTimeUnix_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReferUser Clone() {
      return new ReferUser(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private long id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "user_invitor" field.</summary>
    public const int UserInvitorFieldNumber = 2;
    private string userInvitor_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserInvitor {
      get { return userInvitor_; }
      set {
        userInvitor_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "user_invitee" field.</summary>
    public const int UserInviteeFieldNumber = 3;
    private string userInvitee_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserInvitee {
      get { return userInvitee_; }
      set {
        userInvitee_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "create_time_unix" field.</summary>
    public const int CreateTimeUnixFieldNumber = 4;
    private long createTimeUnix_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long CreateTimeUnix {
      get { return createTimeUnix_; }
      set {
        createTimeUnix_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReferUser);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReferUser other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (UserInvitor != other.UserInvitor) return false;
      if (UserInvitee != other.UserInvitee) return false;
      if (CreateTimeUnix != other.CreateTimeUnix) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0L) hash ^= Id.GetHashCode();
      if (UserInvitor.Length != 0) hash ^= UserInvitor.GetHashCode();
      if (UserInvitee.Length != 0) hash ^= UserInvitee.GetHashCode();
      if (CreateTimeUnix != 0L) hash ^= CreateTimeUnix.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Id);
      }
      if (UserInvitor.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(UserInvitor);
      }
      if (UserInvitee.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(UserInvitee);
      }
      if (CreateTimeUnix != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(CreateTimeUnix);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Id);
      }
      if (UserInvitor.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(UserInvitor);
      }
      if (UserInvitee.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(UserInvitee);
      }
      if (CreateTimeUnix != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(CreateTimeUnix);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Id);
      }
      if (UserInvitor.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserInvitor);
      }
      if (UserInvitee.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserInvitee);
      }
      if (CreateTimeUnix != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CreateTimeUnix);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReferUser other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0L) {
        Id = other.Id;
      }
      if (other.UserInvitor.Length != 0) {
        UserInvitor = other.UserInvitor;
      }
      if (other.UserInvitee.Length != 0) {
        UserInvitee = other.UserInvitee;
      }
      if (other.CreateTimeUnix != 0L) {
        CreateTimeUnix = other.CreateTimeUnix;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt64();
            break;
          }
          case 18: {
            UserInvitor = input.ReadString();
            break;
          }
          case 26: {
            UserInvitee = input.ReadString();
            break;
          }
          case 32: {
            CreateTimeUnix = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt64();
            break;
          }
          case 18: {
            UserInvitor = input.ReadString();
            break;
          }
          case 26: {
            UserInvitee = input.ReadString();
            break;
          }
          case 32: {
            CreateTimeUnix = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class RewardReferTemplate : pb::IMessage<RewardReferTemplate>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RewardReferTemplate> _parser = new pb::MessageParser<RewardReferTemplate>(() => new RewardReferTemplate());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RewardReferTemplate> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.CommonApiReflection.Descriptor.MessageTypes[38]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RewardReferTemplate() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RewardReferTemplate(RewardReferTemplate other) : this() {
      min_ = other.min_;
      max_ = other.max_;
      rate_ = other.rate_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RewardReferTemplate Clone() {
      return new RewardReferTemplate(this);
    }

    /// <summary>Field number for the "min" field.</summary>
    public const int MinFieldNumber = 1;
    private long min_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Min {
      get { return min_; }
      set {
        min_ = value;
      }
    }

    /// <summary>Field number for the "max" field.</summary>
    public const int MaxFieldNumber = 2;
    private long max_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Max {
      get { return max_; }
      set {
        max_ = value;
      }
    }

    /// <summary>Field number for the "rate" field.</summary>
    public const int RateFieldNumber = 3;
    private float rate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Rate {
      get { return rate_; }
      set {
        rate_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RewardReferTemplate);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RewardReferTemplate other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Min != other.Min) return false;
      if (Max != other.Max) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Rate, other.Rate)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Min != 0L) hash ^= Min.GetHashCode();
      if (Max != 0L) hash ^= Max.GetHashCode();
      if (Rate != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Rate);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Min != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Min);
      }
      if (Max != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Max);
      }
      if (Rate != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Rate);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Min != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Min);
      }
      if (Max != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Max);
      }
      if (Rate != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Rate);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Min != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Min);
      }
      if (Max != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Max);
      }
      if (Rate != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RewardReferTemplate other) {
      if (other == null) {
        return;
      }
      if (other.Min != 0L) {
        Min = other.Min;
      }
      if (other.Max != 0L) {
        Max = other.Max;
      }
      if (other.Rate != 0F) {
        Rate = other.Rate;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Min = input.ReadInt64();
            break;
          }
          case 16: {
            Max = input.ReadInt64();
            break;
          }
          case 29: {
            Rate = input.ReadFloat();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Min = input.ReadInt64();
            break;
          }
          case 16: {
            Max = input.ReadInt64();
            break;
          }
          case 29: {
            Rate = input.ReadFloat();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ListRewardReferTemplate : pb::IMessage<ListRewardReferTemplate>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ListRewardReferTemplate> _parser = new pb::MessageParser<ListRewardReferTemplate>(() => new ListRewardReferTemplate());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListRewardReferTemplate> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.CommonApiReflection.Descriptor.MessageTypes[39]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListRewardReferTemplate() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListRewardReferTemplate(ListRewardReferTemplate other) : this() {
      rewardRefers_ = other.rewardRefers_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListRewardReferTemplate Clone() {
      return new ListRewardReferTemplate(this);
    }

    /// <summary>Field number for the "reward_refers" field.</summary>
    public const int RewardRefersFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Api.RewardReferTemplate> _repeated_rewardRefers_codec
        = pb::FieldCodec.ForMessage(10, global::Api.RewardReferTemplate.Parser);
    private readonly pbc::RepeatedField<global::Api.RewardReferTemplate> rewardRefers_ = new pbc::RepeatedField<global::Api.RewardReferTemplate>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Api.RewardReferTemplate> RewardRefers {
      get { return rewardRefers_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListRewardReferTemplate);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListRewardReferTemplate other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!rewardRefers_.Equals(other.rewardRefers_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= rewardRefers_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      rewardRefers_.WriteTo(output, _repeated_rewardRefers_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      rewardRefers_.WriteTo(ref output, _repeated_rewardRefers_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += rewardRefers_.CalculateSize(_repeated_rewardRefers_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListRewardReferTemplate other) {
      if (other == null) {
        return;
      }
      rewardRefers_.Add(other.rewardRefers_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            rewardRefers_.AddEntriesFrom(input, _repeated_rewardRefers_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            rewardRefers_.AddEntriesFrom(ref input, _repeated_rewardRefers_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class RewardRefer : pb::IMessage<RewardRefer>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RewardRefer> _parser = new pb::MessageParser<RewardRefer>(() => new RewardRefer());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RewardRefer> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.CommonApiReflection.Descriptor.MessageTypes[40]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RewardRefer() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RewardRefer(RewardRefer other) : this() {
      id_ = other.id_;
      userId_ = other.userId_;
      winAmt_ = other.winAmt_;
      estRewardLv_ = other.estRewardLv_;
      estReward_ = other.estReward_;
      estRateReward_ = other.estRateReward_;
      userRefers_ = other.userRefers_.Clone();
      listRewards_ = other.listRewards_.Clone();
      fromUnix_ = other.fromUnix_;
      toUnix_ = other.toUnix_;
      totalUserRefer_ = other.totalUserRefer_;
      updateTimeUnix_ = other.updateTimeUnix_;
      sendToWallet_ = other.sendToWallet_;
      createTimeUnix_ = other.createTimeUnix_;
      remainTimeResetSec_ = other.remainTimeResetSec_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RewardRefer Clone() {
      return new RewardRefer(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private long id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "user_id" field.</summary>
    public const int UserIdFieldNumber = 2;
    private string userId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserId {
      get { return userId_; }
      set {
        userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "win_amt" field.</summary>
    public const int WinAmtFieldNumber = 3;
    private long winAmt_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long WinAmt {
      get { return winAmt_; }
      set {
        winAmt_ = value;
      }
    }

    /// <summary>Field number for the "est_reward_lv" field.</summary>
    public const int EstRewardLvFieldNumber = 4;
    private long estRewardLv_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long EstRewardLv {
      get { return estRewardLv_; }
      set {
        estRewardLv_ = value;
      }
    }

    /// <summary>Field number for the "est_reward" field.</summary>
    public const int EstRewardFieldNumber = 5;
    private long estReward_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long EstReward {
      get { return estReward_; }
      set {
        estReward_ = value;
      }
    }

    /// <summary>Field number for the "est_rate_reward" field.</summary>
    public const int EstRateRewardFieldNumber = 6;
    private float estRateReward_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float EstRateReward {
      get { return estRateReward_; }
      set {
        estRateReward_ = value;
      }
    }

    /// <summary>Field number for the "user_refers" field.</summary>
    public const int UserRefersFieldNumber = 7;
    private static readonly pb::FieldCodec<global::Api.RewardRefer> _repeated_userRefers_codec
        = pb::FieldCodec.ForMessage(58, global::Api.RewardRefer.Parser);
    private readonly pbc::RepeatedField<global::Api.RewardRefer> userRefers_ = new pbc::RepeatedField<global::Api.RewardRefer>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Api.RewardRefer> UserRefers {
      get { return userRefers_; }
    }

    /// <summary>Field number for the "list_rewards" field.</summary>
    public const int ListRewardsFieldNumber = 8;
    private static readonly pb::FieldCodec<global::Api.RewardReferTemplate> _repeated_listRewards_codec
        = pb::FieldCodec.ForMessage(66, global::Api.RewardReferTemplate.Parser);
    private readonly pbc::RepeatedField<global::Api.RewardReferTemplate> listRewards_ = new pbc::RepeatedField<global::Api.RewardReferTemplate>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Api.RewardReferTemplate> ListRewards {
      get { return listRewards_; }
    }

    /// <summary>Field number for the "from_unix" field.</summary>
    public const int FromUnixFieldNumber = 9;
    private long fromUnix_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long FromUnix {
      get { return fromUnix_; }
      set {
        fromUnix_ = value;
      }
    }

    /// <summary>Field number for the "to_unix" field.</summary>
    public const int ToUnixFieldNumber = 10;
    private long toUnix_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ToUnix {
      get { return toUnix_; }
      set {
        toUnix_ = value;
      }
    }

    /// <summary>Field number for the "total_user_refer" field.</summary>
    public const int TotalUserReferFieldNumber = 11;
    private long totalUserRefer_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TotalUserRefer {
      get { return totalUserRefer_; }
      set {
        totalUserRefer_ = value;
      }
    }

    /// <summary>Field number for the "update_time_unix" field.</summary>
    public const int UpdateTimeUnixFieldNumber = 12;
    private long updateTimeUnix_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long UpdateTimeUnix {
      get { return updateTimeUnix_; }
      set {
        updateTimeUnix_ = value;
      }
    }

    /// <summary>Field number for the "send_to_wallet" field.</summary>
    public const int SendToWalletFieldNumber = 13;
    private bool sendToWallet_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool SendToWallet {
      get { return sendToWallet_; }
      set {
        sendToWallet_ = value;
      }
    }

    /// <summary>Field number for the "create_time_unix" field.</summary>
    public const int CreateTimeUnixFieldNumber = 14;
    private long createTimeUnix_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long CreateTimeUnix {
      get { return createTimeUnix_; }
      set {
        createTimeUnix_ = value;
      }
    }

    /// <summary>Field number for the "remain_time_reset_sec" field.</summary>
    public const int RemainTimeResetSecFieldNumber = 15;
    private long remainTimeResetSec_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long RemainTimeResetSec {
      get { return remainTimeResetSec_; }
      set {
        remainTimeResetSec_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RewardRefer);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RewardRefer other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (UserId != other.UserId) return false;
      if (WinAmt != other.WinAmt) return false;
      if (EstRewardLv != other.EstRewardLv) return false;
      if (EstReward != other.EstReward) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(EstRateReward, other.EstRateReward)) return false;
      if(!userRefers_.Equals(other.userRefers_)) return false;
      if(!listRewards_.Equals(other.listRewards_)) return false;
      if (FromUnix != other.FromUnix) return false;
      if (ToUnix != other.ToUnix) return false;
      if (TotalUserRefer != other.TotalUserRefer) return false;
      if (UpdateTimeUnix != other.UpdateTimeUnix) return false;
      if (SendToWallet != other.SendToWallet) return false;
      if (CreateTimeUnix != other.CreateTimeUnix) return false;
      if (RemainTimeResetSec != other.RemainTimeResetSec) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0L) hash ^= Id.GetHashCode();
      if (UserId.Length != 0) hash ^= UserId.GetHashCode();
      if (WinAmt != 0L) hash ^= WinAmt.GetHashCode();
      if (EstRewardLv != 0L) hash ^= EstRewardLv.GetHashCode();
      if (EstReward != 0L) hash ^= EstReward.GetHashCode();
      if (EstRateReward != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(EstRateReward);
      hash ^= userRefers_.GetHashCode();
      hash ^= listRewards_.GetHashCode();
      if (FromUnix != 0L) hash ^= FromUnix.GetHashCode();
      if (ToUnix != 0L) hash ^= ToUnix.GetHashCode();
      if (TotalUserRefer != 0L) hash ^= TotalUserRefer.GetHashCode();
      if (UpdateTimeUnix != 0L) hash ^= UpdateTimeUnix.GetHashCode();
      if (SendToWallet != false) hash ^= SendToWallet.GetHashCode();
      if (CreateTimeUnix != 0L) hash ^= CreateTimeUnix.GetHashCode();
      if (RemainTimeResetSec != 0L) hash ^= RemainTimeResetSec.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Id);
      }
      if (UserId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(UserId);
      }
      if (WinAmt != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(WinAmt);
      }
      if (EstRewardLv != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(EstRewardLv);
      }
      if (EstReward != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(EstReward);
      }
      if (EstRateReward != 0F) {
        output.WriteRawTag(53);
        output.WriteFloat(EstRateReward);
      }
      userRefers_.WriteTo(output, _repeated_userRefers_codec);
      listRewards_.WriteTo(output, _repeated_listRewards_codec);
      if (FromUnix != 0L) {
        output.WriteRawTag(72);
        output.WriteInt64(FromUnix);
      }
      if (ToUnix != 0L) {
        output.WriteRawTag(80);
        output.WriteInt64(ToUnix);
      }
      if (TotalUserRefer != 0L) {
        output.WriteRawTag(88);
        output.WriteInt64(TotalUserRefer);
      }
      if (UpdateTimeUnix != 0L) {
        output.WriteRawTag(96);
        output.WriteInt64(UpdateTimeUnix);
      }
      if (SendToWallet != false) {
        output.WriteRawTag(104);
        output.WriteBool(SendToWallet);
      }
      if (CreateTimeUnix != 0L) {
        output.WriteRawTag(112);
        output.WriteInt64(CreateTimeUnix);
      }
      if (RemainTimeResetSec != 0L) {
        output.WriteRawTag(120);
        output.WriteInt64(RemainTimeResetSec);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Id);
      }
      if (UserId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(UserId);
      }
      if (WinAmt != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(WinAmt);
      }
      if (EstRewardLv != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(EstRewardLv);
      }
      if (EstReward != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(EstReward);
      }
      if (EstRateReward != 0F) {
        output.WriteRawTag(53);
        output.WriteFloat(EstRateReward);
      }
      userRefers_.WriteTo(ref output, _repeated_userRefers_codec);
      listRewards_.WriteTo(ref output, _repeated_listRewards_codec);
      if (FromUnix != 0L) {
        output.WriteRawTag(72);
        output.WriteInt64(FromUnix);
      }
      if (ToUnix != 0L) {
        output.WriteRawTag(80);
        output.WriteInt64(ToUnix);
      }
      if (TotalUserRefer != 0L) {
        output.WriteRawTag(88);
        output.WriteInt64(TotalUserRefer);
      }
      if (UpdateTimeUnix != 0L) {
        output.WriteRawTag(96);
        output.WriteInt64(UpdateTimeUnix);
      }
      if (SendToWallet != false) {
        output.WriteRawTag(104);
        output.WriteBool(SendToWallet);
      }
      if (CreateTimeUnix != 0L) {
        output.WriteRawTag(112);
        output.WriteInt64(CreateTimeUnix);
      }
      if (RemainTimeResetSec != 0L) {
        output.WriteRawTag(120);
        output.WriteInt64(RemainTimeResetSec);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Id);
      }
      if (UserId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
      }
      if (WinAmt != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(WinAmt);
      }
      if (EstRewardLv != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(EstRewardLv);
      }
      if (EstReward != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(EstReward);
      }
      if (EstRateReward != 0F) {
        size += 1 + 4;
      }
      size += userRefers_.CalculateSize(_repeated_userRefers_codec);
      size += listRewards_.CalculateSize(_repeated_listRewards_codec);
      if (FromUnix != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(FromUnix);
      }
      if (ToUnix != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ToUnix);
      }
      if (TotalUserRefer != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TotalUserRefer);
      }
      if (UpdateTimeUnix != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(UpdateTimeUnix);
      }
      if (SendToWallet != false) {
        size += 1 + 1;
      }
      if (CreateTimeUnix != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CreateTimeUnix);
      }
      if (RemainTimeResetSec != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(RemainTimeResetSec);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RewardRefer other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0L) {
        Id = other.Id;
      }
      if (other.UserId.Length != 0) {
        UserId = other.UserId;
      }
      if (other.WinAmt != 0L) {
        WinAmt = other.WinAmt;
      }
      if (other.EstRewardLv != 0L) {
        EstRewardLv = other.EstRewardLv;
      }
      if (other.EstReward != 0L) {
        EstReward = other.EstReward;
      }
      if (other.EstRateReward != 0F) {
        EstRateReward = other.EstRateReward;
      }
      userRefers_.Add(other.userRefers_);
      listRewards_.Add(other.listRewards_);
      if (other.FromUnix != 0L) {
        FromUnix = other.FromUnix;
      }
      if (other.ToUnix != 0L) {
        ToUnix = other.ToUnix;
      }
      if (other.TotalUserRefer != 0L) {
        TotalUserRefer = other.TotalUserRefer;
      }
      if (other.UpdateTimeUnix != 0L) {
        UpdateTimeUnix = other.UpdateTimeUnix;
      }
      if (other.SendToWallet != false) {
        SendToWallet = other.SendToWallet;
      }
      if (other.CreateTimeUnix != 0L) {
        CreateTimeUnix = other.CreateTimeUnix;
      }
      if (other.RemainTimeResetSec != 0L) {
        RemainTimeResetSec = other.RemainTimeResetSec;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt64();
            break;
          }
          case 18: {
            UserId = input.ReadString();
            break;
          }
          case 24: {
            WinAmt = input.ReadInt64();
            break;
          }
          case 32: {
            EstRewardLv = input.ReadInt64();
            break;
          }
          case 40: {
            EstReward = input.ReadInt64();
            break;
          }
          case 53: {
            EstRateReward = input.ReadFloat();
            break;
          }
          case 58: {
            userRefers_.AddEntriesFrom(input, _repeated_userRefers_codec);
            break;
          }
          case 66: {
            listRewards_.AddEntriesFrom(input, _repeated_listRewards_codec);
            break;
          }
          case 72: {
            FromUnix = input.ReadInt64();
            break;
          }
          case 80: {
            ToUnix = input.ReadInt64();
            break;
          }
          case 88: {
            TotalUserRefer = input.ReadInt64();
            break;
          }
          case 96: {
            UpdateTimeUnix = input.ReadInt64();
            break;
          }
          case 104: {
            SendToWallet = input.ReadBool();
            break;
          }
          case 112: {
            CreateTimeUnix = input.ReadInt64();
            break;
          }
          case 120: {
            RemainTimeResetSec = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt64();
            break;
          }
          case 18: {
            UserId = input.ReadString();
            break;
          }
          case 24: {
            WinAmt = input.ReadInt64();
            break;
          }
          case 32: {
            EstRewardLv = input.ReadInt64();
            break;
          }
          case 40: {
            EstReward = input.ReadInt64();
            break;
          }
          case 53: {
            EstRateReward = input.ReadFloat();
            break;
          }
          case 58: {
            userRefers_.AddEntriesFrom(ref input, _repeated_userRefers_codec);
            break;
          }
          case 66: {
            listRewards_.AddEntriesFrom(ref input, _repeated_listRewards_codec);
            break;
          }
          case 72: {
            FromUnix = input.ReadInt64();
            break;
          }
          case 80: {
            ToUnix = input.ReadInt64();
            break;
          }
          case 88: {
            TotalUserRefer = input.ReadInt64();
            break;
          }
          case 96: {
            UpdateTimeUnix = input.ReadInt64();
            break;
          }
          case 104: {
            SendToWallet = input.ReadBool();
            break;
          }
          case 112: {
            CreateTimeUnix = input.ReadInt64();
            break;
          }
          case 120: {
            RemainTimeResetSec = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ListRewardRefer : pb::IMessage<ListRewardRefer>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ListRewardRefer> _parser = new pb::MessageParser<ListRewardRefer>(() => new ListRewardRefer());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListRewardRefer> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.CommonApiReflection.Descriptor.MessageTypes[41]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListRewardRefer() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListRewardRefer(ListRewardRefer other) : this() {
      userRefers_ = other.userRefers_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListRewardRefer Clone() {
      return new ListRewardRefer(this);
    }

    /// <summary>Field number for the "user_refers" field.</summary>
    public const int UserRefersFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Api.RewardRefer> _repeated_userRefers_codec
        = pb::FieldCodec.ForMessage(10, global::Api.RewardRefer.Parser);
    private readonly pbc::RepeatedField<global::Api.RewardRefer> userRefers_ = new pbc::RepeatedField<global::Api.RewardRefer>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Api.RewardRefer> UserRefers {
      get { return userRefers_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListRewardRefer);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListRewardRefer other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!userRefers_.Equals(other.userRefers_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= userRefers_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      userRefers_.WriteTo(output, _repeated_userRefers_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      userRefers_.WriteTo(ref output, _repeated_userRefers_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += userRefers_.CalculateSize(_repeated_userRefers_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListRewardRefer other) {
      if (other == null) {
        return;
      }
      userRefers_.Add(other.userRefers_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            userRefers_.AddEntriesFrom(input, _repeated_userRefers_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            userRefers_.AddEntriesFrom(ref input, _repeated_userRefers_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class HistoryRewardRequest : pb::IMessage<HistoryRewardRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<HistoryRewardRequest> _parser = new pb::MessageParser<HistoryRewardRequest>(() => new HistoryRewardRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HistoryRewardRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.CommonApiReflection.Descriptor.MessageTypes[42]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HistoryRewardRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HistoryRewardRequest(HistoryRewardRequest other) : this() {
      userId_ = other.userId_;
      time_ = other.time_;
      from_ = other.from_;
      to_ = other.to_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HistoryRewardRequest Clone() {
      return new HistoryRewardRequest(this);
    }

    /// <summary>Field number for the "user_id" field.</summary>
    public const int UserIdFieldNumber = 1;
    private string userId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserId {
      get { return userId_; }
      set {
        userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "time" field.</summary>
    public const int TimeFieldNumber = 2;
    private global::Api.HistoryRewardTime time_ = global::Api.HistoryRewardTime.Unspecified;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Api.HistoryRewardTime Time {
      get { return time_; }
      set {
        time_ = value;
      }
    }

    /// <summary>Field number for the "from" field.</summary>
    public const int FromFieldNumber = 3;
    private long from_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long From {
      get { return from_; }
      set {
        from_ = value;
      }
    }

    /// <summary>Field number for the "to" field.</summary>
    public const int ToFieldNumber = 4;
    private long to_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long To {
      get { return to_; }
      set {
        to_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HistoryRewardRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HistoryRewardRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserId != other.UserId) return false;
      if (Time != other.Time) return false;
      if (From != other.From) return false;
      if (To != other.To) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserId.Length != 0) hash ^= UserId.GetHashCode();
      if (Time != global::Api.HistoryRewardTime.Unspecified) hash ^= Time.GetHashCode();
      if (From != 0L) hash ^= From.GetHashCode();
      if (To != 0L) hash ^= To.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (UserId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UserId);
      }
      if (Time != global::Api.HistoryRewardTime.Unspecified) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Time);
      }
      if (From != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(From);
      }
      if (To != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(To);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (UserId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UserId);
      }
      if (Time != global::Api.HistoryRewardTime.Unspecified) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Time);
      }
      if (From != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(From);
      }
      if (To != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(To);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
      }
      if (Time != global::Api.HistoryRewardTime.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Time);
      }
      if (From != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(From);
      }
      if (To != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(To);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HistoryRewardRequest other) {
      if (other == null) {
        return;
      }
      if (other.UserId.Length != 0) {
        UserId = other.UserId;
      }
      if (other.Time != global::Api.HistoryRewardTime.Unspecified) {
        Time = other.Time;
      }
      if (other.From != 0L) {
        From = other.From;
      }
      if (other.To != 0L) {
        To = other.To;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            UserId = input.ReadString();
            break;
          }
          case 16: {
            Time = (global::Api.HistoryRewardTime) input.ReadEnum();
            break;
          }
          case 24: {
            From = input.ReadInt64();
            break;
          }
          case 32: {
            To = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            UserId = input.ReadString();
            break;
          }
          case 16: {
            Time = (global::Api.HistoryRewardTime) input.ReadEnum();
            break;
          }
          case 24: {
            From = input.ReadInt64();
            break;
          }
          case 32: {
            To = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class WalletTransRequest : pb::IMessage<WalletTransRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<WalletTransRequest> _parser = new pb::MessageParser<WalletTransRequest>(() => new WalletTransRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<WalletTransRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.CommonApiReflection.Descriptor.MessageTypes[43]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WalletTransRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WalletTransRequest(WalletTransRequest other) : this() {
      limit_ = other.limit_;
      cusor_ = other.cusor_;
      metaAction_ = other.metaAction_;
      metaBankAction_ = other.metaBankAction_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WalletTransRequest Clone() {
      return new WalletTransRequest(this);
    }

    /// <summary>Field number for the "limit" field.</summary>
    public const int LimitFieldNumber = 1;
    private long limit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Limit {
      get { return limit_; }
      set {
        limit_ = value;
      }
    }

    /// <summary>Field number for the "cusor" field.</summary>
    public const int CusorFieldNumber = 2;
    private string cusor_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Cusor {
      get { return cusor_; }
      set {
        cusor_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "meta_action" field.</summary>
    public const int MetaActionFieldNumber = 3;
    private string metaAction_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MetaAction {
      get { return metaAction_; }
      set {
        metaAction_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "meta_bank_action" field.</summary>
    public const int MetaBankActionFieldNumber = 4;
    private string metaBankAction_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MetaBankAction {
      get { return metaBankAction_; }
      set {
        metaBankAction_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as WalletTransRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(WalletTransRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Limit != other.Limit) return false;
      if (Cusor != other.Cusor) return false;
      if (MetaAction != other.MetaAction) return false;
      if (MetaBankAction != other.MetaBankAction) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Limit != 0L) hash ^= Limit.GetHashCode();
      if (Cusor.Length != 0) hash ^= Cusor.GetHashCode();
      if (MetaAction.Length != 0) hash ^= MetaAction.GetHashCode();
      if (MetaBankAction.Length != 0) hash ^= MetaBankAction.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Limit != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Limit);
      }
      if (Cusor.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Cusor);
      }
      if (MetaAction.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(MetaAction);
      }
      if (MetaBankAction.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(MetaBankAction);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Limit != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Limit);
      }
      if (Cusor.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Cusor);
      }
      if (MetaAction.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(MetaAction);
      }
      if (MetaBankAction.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(MetaBankAction);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Limit != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Limit);
      }
      if (Cusor.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Cusor);
      }
      if (MetaAction.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MetaAction);
      }
      if (MetaBankAction.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MetaBankAction);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(WalletTransRequest other) {
      if (other == null) {
        return;
      }
      if (other.Limit != 0L) {
        Limit = other.Limit;
      }
      if (other.Cusor.Length != 0) {
        Cusor = other.Cusor;
      }
      if (other.MetaAction.Length != 0) {
        MetaAction = other.MetaAction;
      }
      if (other.MetaBankAction.Length != 0) {
        MetaBankAction = other.MetaBankAction;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Limit = input.ReadInt64();
            break;
          }
          case 18: {
            Cusor = input.ReadString();
            break;
          }
          case 26: {
            MetaAction = input.ReadString();
            break;
          }
          case 34: {
            MetaBankAction = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Limit = input.ReadInt64();
            break;
          }
          case 18: {
            Cusor = input.ReadString();
            break;
          }
          case 26: {
            MetaAction = input.ReadString();
            break;
          }
          case 34: {
            MetaBankAction = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Error : pb::IMessage<Error>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Error> _parser = new pb::MessageParser<Error>(() => new Error());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Error> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.CommonApiReflection.Descriptor.MessageTypes[44]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Error() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Error(Error other) : this() {
      code_ = other.code_;
      error_ = other.error_;
      errorType_ = other.errorType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Error Clone() {
      return new Error(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private long code_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Code {
      get { return code_; }
      set {
        code_ = value;
      }
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int Error_FieldNumber = 2;
    private string error_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Error_ {
      get { return error_; }
      set {
        error_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "error_type" field.</summary>
    public const int ErrorTypeFieldNumber = 3;
    private global::Api.ErrorType errorType_ = global::Api.ErrorType.Unspecified;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Api.ErrorType ErrorType {
      get { return errorType_; }
      set {
        errorType_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Error);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Error other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if (Error_ != other.Error_) return false;
      if (ErrorType != other.ErrorType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Code != 0L) hash ^= Code.GetHashCode();
      if (Error_.Length != 0) hash ^= Error_.GetHashCode();
      if (ErrorType != global::Api.ErrorType.Unspecified) hash ^= ErrorType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Code != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Code);
      }
      if (Error_.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Error_);
      }
      if (ErrorType != global::Api.ErrorType.Unspecified) {
        output.WriteRawTag(24);
        output.WriteEnum((int) ErrorType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Code != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Code);
      }
      if (Error_.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Error_);
      }
      if (ErrorType != global::Api.ErrorType.Unspecified) {
        output.WriteRawTag(24);
        output.WriteEnum((int) ErrorType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Code != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Code);
      }
      if (Error_.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Error_);
      }
      if (ErrorType != global::Api.ErrorType.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ErrorType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Error other) {
      if (other == null) {
        return;
      }
      if (other.Code != 0L) {
        Code = other.Code;
      }
      if (other.Error_.Length != 0) {
        Error_ = other.Error_;
      }
      if (other.ErrorType != global::Api.ErrorType.Unspecified) {
        ErrorType = other.ErrorType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Code = input.ReadInt64();
            break;
          }
          case 18: {
            Error_ = input.ReadString();
            break;
          }
          case 24: {
            ErrorType = (global::Api.ErrorType) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Code = input.ReadInt64();
            break;
          }
          case 18: {
            Error_ = input.ReadString();
            break;
          }
          case 24: {
            ErrorType = (global::Api.ErrorType) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Request : pb::IMessage<Request>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Request> _parser = new pb::MessageParser<Request>(() => new Request());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Request> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.CommonApiReflection.Descriptor.MessageTypes[45]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Request() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Request(Request other) : this() {
      userId_ = other.userId_;
      body_ = other.body_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Request Clone() {
      return new Request(this);
    }

    /// <summary>Field number for the "user_id" field.</summary>
    public const int UserIdFieldNumber = 1;
    private string userId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserId {
      get { return userId_; }
      set {
        userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "body" field.</summary>
    public const int BodyFieldNumber = 2;
    private string body_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Body {
      get { return body_; }
      set {
        body_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Request);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Request other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserId != other.UserId) return false;
      if (Body != other.Body) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserId.Length != 0) hash ^= UserId.GetHashCode();
      if (Body.Length != 0) hash ^= Body.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (UserId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UserId);
      }
      if (Body.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Body);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (UserId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UserId);
      }
      if (Body.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Body);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
      }
      if (Body.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Body);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Request other) {
      if (other == null) {
        return;
      }
      if (other.UserId.Length != 0) {
        UserId = other.UserId;
      }
      if (other.Body.Length != 0) {
        Body = other.Body;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            UserId = input.ReadString();
            break;
          }
          case 18: {
            Body = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            UserId = input.ReadString();
            break;
          }
          case 18: {
            Body = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Response : pb::IMessage<Response>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Response> _parser = new pb::MessageParser<Response>(() => new Response());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Response> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.CommonApiReflection.Descriptor.MessageTypes[46]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Response() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Response(Response other) : this() {
      body_ = other.body_;
      errorMessage_ = other.errorMessage_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Response Clone() {
      return new Response(this);
    }

    /// <summary>Field number for the "body" field.</summary>
    public const int BodyFieldNumber = 1;
    private string body_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Body {
      get { return body_; }
      set {
        body_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "error_message" field.</summary>
    public const int ErrorMessageFieldNumber = 2;
    private string errorMessage_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ErrorMessage {
      get { return errorMessage_; }
      set {
        errorMessage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Response);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Response other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Body != other.Body) return false;
      if (ErrorMessage != other.ErrorMessage) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Body.Length != 0) hash ^= Body.GetHashCode();
      if (ErrorMessage.Length != 0) hash ^= ErrorMessage.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Body.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Body);
      }
      if (ErrorMessage.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ErrorMessage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Body.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Body);
      }
      if (ErrorMessage.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ErrorMessage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Body.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Body);
      }
      if (ErrorMessage.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ErrorMessage);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Response other) {
      if (other == null) {
        return;
      }
      if (other.Body.Length != 0) {
        Body = other.Body;
      }
      if (other.ErrorMessage.Length != 0) {
        ErrorMessage = other.ErrorMessage;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Body = input.ReadString();
            break;
          }
          case 18: {
            ErrorMessage = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Body = input.ReadString();
            break;
          }
          case 18: {
            ErrorMessage = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class UserMeta : pb::IMessage<UserMeta>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UserMeta> _parser = new pb::MessageParser<UserMeta>(() => new UserMeta());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UserMeta> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.CommonApiReflection.Descriptor.MessageTypes[47]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserMeta() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserMeta(UserMeta other) : this() {
      userId_ = other.userId_;
      vip_ = other.vip_;
      totalChipsTopup_ = other.totalChipsTopup_;
      totalChipsCashout_ = other.totalChipsCashout_;
      totalChipsSend_ = other.totalChipsSend_;
      agPlay_ = other.agPlay_;
      agBank_ = other.agBank_;
      totalChipsCashoutInday_ = other.totalChipsCashoutInday_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserMeta Clone() {
      return new UserMeta(this);
    }

    /// <summary>Field number for the "user_id" field.</summary>
    public const int UserIdFieldNumber = 1;
    private string userId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserId {
      get { return userId_; }
      set {
        userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "vip" field.</summary>
    public const int VipFieldNumber = 2;
    private int vip_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Vip {
      get { return vip_; }
      set {
        vip_ = value;
      }
    }

    /// <summary>Field number for the "total_chips_topup" field.</summary>
    public const int TotalChipsTopupFieldNumber = 3;
    private long totalChipsTopup_;
    /// <summary>
    /// Tổng số tiền user đã nạp tính từ lúc tạo account
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TotalChipsTopup {
      get { return totalChipsTopup_; }
      set {
        totalChipsTopup_ = value;
      }
    }

    /// <summary>Field number for the "total_chips_cashout" field.</summary>
    public const int TotalChipsCashoutFieldNumber = 4;
    private long totalChipsCashout_;
    /// <summary>
    /// Tổng gá trị user đã rút tính từ lúc tạo account
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TotalChipsCashout {
      get { return totalChipsCashout_; }
      set {
        totalChipsCashout_ = value;
      }
    }

    /// <summary>Field number for the "total_chips_send" field.</summary>
    public const int TotalChipsSendFieldNumber = 5;
    private long totalChipsSend_;
    /// <summary>
    /// Tổng gá trị user đã chuyển đi cho người khác
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TotalChipsSend {
      get { return totalChipsSend_; }
      set {
        totalChipsSend_ = value;
      }
    }

    /// <summary>Field number for the "agPlay" field.</summary>
    public const int AgPlayFieldNumber = 6;
    private long agPlay_;
    /// <summary>
    /// Số chip user đang có trên người + Số chip đang có trong
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long AgPlay {
      get { return agPlay_; }
      set {
        agPlay_ = value;
      }
    }

    /// <summary>Field number for the "agBank" field.</summary>
    public const int AgBankFieldNumber = 7;
    private long agBank_;
    /// <summary>
    /// free chip mà user chưa nhận
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long AgBank {
      get { return agBank_; }
      set {
        agBank_ = value;
      }
    }

    /// <summary>Field number for the "total_chips_cashout_inday" field.</summary>
    public const int TotalChipsCashoutIndayFieldNumber = 8;
    private long totalChipsCashoutInday_;
    /// <summary>
    ///  cho người khác
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TotalChipsCashoutInday {
      get { return totalChipsCashoutInday_; }
      set {
        totalChipsCashoutInday_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UserMeta);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UserMeta other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserId != other.UserId) return false;
      if (Vip != other.Vip) return false;
      if (TotalChipsTopup != other.TotalChipsTopup) return false;
      if (TotalChipsCashout != other.TotalChipsCashout) return false;
      if (TotalChipsSend != other.TotalChipsSend) return false;
      if (AgPlay != other.AgPlay) return false;
      if (AgBank != other.AgBank) return false;
      if (TotalChipsCashoutInday != other.TotalChipsCashoutInday) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserId.Length != 0) hash ^= UserId.GetHashCode();
      if (Vip != 0) hash ^= Vip.GetHashCode();
      if (TotalChipsTopup != 0L) hash ^= TotalChipsTopup.GetHashCode();
      if (TotalChipsCashout != 0L) hash ^= TotalChipsCashout.GetHashCode();
      if (TotalChipsSend != 0L) hash ^= TotalChipsSend.GetHashCode();
      if (AgPlay != 0L) hash ^= AgPlay.GetHashCode();
      if (AgBank != 0L) hash ^= AgBank.GetHashCode();
      if (TotalChipsCashoutInday != 0L) hash ^= TotalChipsCashoutInday.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (UserId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UserId);
      }
      if (Vip != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Vip);
      }
      if (TotalChipsTopup != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(TotalChipsTopup);
      }
      if (TotalChipsCashout != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(TotalChipsCashout);
      }
      if (TotalChipsSend != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(TotalChipsSend);
      }
      if (AgPlay != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(AgPlay);
      }
      if (AgBank != 0L) {
        output.WriteRawTag(56);
        output.WriteInt64(AgBank);
      }
      if (TotalChipsCashoutInday != 0L) {
        output.WriteRawTag(64);
        output.WriteInt64(TotalChipsCashoutInday);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (UserId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UserId);
      }
      if (Vip != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Vip);
      }
      if (TotalChipsTopup != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(TotalChipsTopup);
      }
      if (TotalChipsCashout != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(TotalChipsCashout);
      }
      if (TotalChipsSend != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(TotalChipsSend);
      }
      if (AgPlay != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(AgPlay);
      }
      if (AgBank != 0L) {
        output.WriteRawTag(56);
        output.WriteInt64(AgBank);
      }
      if (TotalChipsCashoutInday != 0L) {
        output.WriteRawTag(64);
        output.WriteInt64(TotalChipsCashoutInday);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
      }
      if (Vip != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Vip);
      }
      if (TotalChipsTopup != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TotalChipsTopup);
      }
      if (TotalChipsCashout != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TotalChipsCashout);
      }
      if (TotalChipsSend != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TotalChipsSend);
      }
      if (AgPlay != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(AgPlay);
      }
      if (AgBank != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(AgBank);
      }
      if (TotalChipsCashoutInday != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TotalChipsCashoutInday);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UserMeta other) {
      if (other == null) {
        return;
      }
      if (other.UserId.Length != 0) {
        UserId = other.UserId;
      }
      if (other.Vip != 0) {
        Vip = other.Vip;
      }
      if (other.TotalChipsTopup != 0L) {
        TotalChipsTopup = other.TotalChipsTopup;
      }
      if (other.TotalChipsCashout != 0L) {
        TotalChipsCashout = other.TotalChipsCashout;
      }
      if (other.TotalChipsSend != 0L) {
        TotalChipsSend = other.TotalChipsSend;
      }
      if (other.AgPlay != 0L) {
        AgPlay = other.AgPlay;
      }
      if (other.AgBank != 0L) {
        AgBank = other.AgBank;
      }
      if (other.TotalChipsCashoutInday != 0L) {
        TotalChipsCashoutInday = other.TotalChipsCashoutInday;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            UserId = input.ReadString();
            break;
          }
          case 16: {
            Vip = input.ReadInt32();
            break;
          }
          case 24: {
            TotalChipsTopup = input.ReadInt64();
            break;
          }
          case 32: {
            TotalChipsCashout = input.ReadInt64();
            break;
          }
          case 40: {
            TotalChipsSend = input.ReadInt64();
            break;
          }
          case 48: {
            AgPlay = input.ReadInt64();
            break;
          }
          case 56: {
            AgBank = input.ReadInt64();
            break;
          }
          case 64: {
            TotalChipsCashoutInday = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            UserId = input.ReadString();
            break;
          }
          case 16: {
            Vip = input.ReadInt32();
            break;
          }
          case 24: {
            TotalChipsTopup = input.ReadInt64();
            break;
          }
          case 32: {
            TotalChipsCashout = input.ReadInt64();
            break;
          }
          case 40: {
            TotalChipsSend = input.ReadInt64();
            break;
          }
          case 48: {
            AgPlay = input.ReadInt64();
            break;
          }
          case 56: {
            AgBank = input.ReadInt64();
            break;
          }
          case 64: {
            TotalChipsCashoutInday = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Range : pb::IMessage<Range>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Range> _parser = new pb::MessageParser<Range>(() => new Range());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Range> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.CommonApiReflection.Descriptor.MessageTypes[48]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Range() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Range(Range other) : this() {
      min_ = other.min_;
      max_ = other.max_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Range Clone() {
      return new Range(this);
    }

    /// <summary>Field number for the "min" field.</summary>
    public const int MinFieldNumber = 1;
    private long min_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Min {
      get { return min_; }
      set {
        min_ = value;
      }
    }

    /// <summary>Field number for the "max" field.</summary>
    public const int MaxFieldNumber = 2;
    private long max_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Max {
      get { return max_; }
      set {
        max_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Range);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Range other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Min != other.Min) return false;
      if (Max != other.Max) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Min != 0L) hash ^= Min.GetHashCode();
      if (Max != 0L) hash ^= Max.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Min != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Min);
      }
      if (Max != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Max);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Min != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Min);
      }
      if (Max != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Max);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Min != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Min);
      }
      if (Max != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Max);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Range other) {
      if (other == null) {
        return;
      }
      if (other.Min != 0L) {
        Min = other.Min;
      }
      if (other.Max != 0L) {
        Max = other.Max;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Min = input.ReadInt64();
            break;
          }
          case 16: {
            Max = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Min = input.ReadInt64();
            break;
          }
          case 16: {
            Max = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class RuleLucky : pb::IMessage<RuleLucky>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RuleLucky> _parser = new pb::MessageParser<RuleLucky>(() => new RuleLucky());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RuleLucky> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.CommonApiReflection.Descriptor.MessageTypes[49]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RuleLucky() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RuleLucky(RuleLucky other) : this() {
      id_ = other.id_;
      deletedAt_ = other.deletedAt_;
      emitEventAtUnix_ = other.emitEventAtUnix_;
      gameCode_ = other.gameCode_;
      rtp_ = other.rtp_ != null ? other.rtp_.Clone() : null;
      mark_ = other.mark_ != null ? other.mark_.Clone() : null;
      vip_ = other.vip_ != null ? other.vip_.Clone() : null;
      reDeal_ = other.reDeal_;
      winMarkRatio_ = other.winMarkRatio_ != null ? other.winMarkRatio_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RuleLucky Clone() {
      return new RuleLucky(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private long id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "deleted_at" field.</summary>
    public const int DeletedAtFieldNumber = 2;
    private long deletedAt_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long DeletedAt {
      get { return deletedAt_; }
      set {
        deletedAt_ = value;
      }
    }

    /// <summary>Field number for the "emit_event_at_unix" field.</summary>
    public const int EmitEventAtUnixFieldNumber = 3;
    private long emitEventAtUnix_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long EmitEventAtUnix {
      get { return emitEventAtUnix_; }
      set {
        emitEventAtUnix_ = value;
      }
    }

    /// <summary>Field number for the "game_code" field.</summary>
    public const int GameCodeFieldNumber = 4;
    private string gameCode_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GameCode {
      get { return gameCode_; }
      set {
        gameCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "rtp" field.</summary>
    public const int RtpFieldNumber = 5;
    private global::Api.Range rtp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Api.Range Rtp {
      get { return rtp_; }
      set {
        rtp_ = value;
      }
    }

    /// <summary>Field number for the "mark" field.</summary>
    public const int MarkFieldNumber = 6;
    private global::Api.Range mark_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Api.Range Mark {
      get { return mark_; }
      set {
        mark_ = value;
      }
    }

    /// <summary>Field number for the "vip" field.</summary>
    public const int VipFieldNumber = 7;
    private global::Api.Range vip_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Api.Range Vip {
      get { return vip_; }
      set {
        vip_ = value;
      }
    }

    /// <summary>Field number for the "re_deal" field.</summary>
    public const int ReDealFieldNumber = 8;
    private long reDeal_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ReDeal {
      get { return reDeal_; }
      set {
        reDeal_ = value;
      }
    }

    /// <summary>Field number for the "win_mark_ratio" field.</summary>
    public const int WinMarkRatioFieldNumber = 9;
    private global::Api.Range winMarkRatio_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Api.Range WinMarkRatio {
      get { return winMarkRatio_; }
      set {
        winMarkRatio_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RuleLucky);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RuleLucky other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (DeletedAt != other.DeletedAt) return false;
      if (EmitEventAtUnix != other.EmitEventAtUnix) return false;
      if (GameCode != other.GameCode) return false;
      if (!object.Equals(Rtp, other.Rtp)) return false;
      if (!object.Equals(Mark, other.Mark)) return false;
      if (!object.Equals(Vip, other.Vip)) return false;
      if (ReDeal != other.ReDeal) return false;
      if (!object.Equals(WinMarkRatio, other.WinMarkRatio)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0L) hash ^= Id.GetHashCode();
      if (DeletedAt != 0L) hash ^= DeletedAt.GetHashCode();
      if (EmitEventAtUnix != 0L) hash ^= EmitEventAtUnix.GetHashCode();
      if (GameCode.Length != 0) hash ^= GameCode.GetHashCode();
      if (rtp_ != null) hash ^= Rtp.GetHashCode();
      if (mark_ != null) hash ^= Mark.GetHashCode();
      if (vip_ != null) hash ^= Vip.GetHashCode();
      if (ReDeal != 0L) hash ^= ReDeal.GetHashCode();
      if (winMarkRatio_ != null) hash ^= WinMarkRatio.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Id);
      }
      if (DeletedAt != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(DeletedAt);
      }
      if (EmitEventAtUnix != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(EmitEventAtUnix);
      }
      if (GameCode.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(GameCode);
      }
      if (rtp_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Rtp);
      }
      if (mark_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Mark);
      }
      if (vip_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Vip);
      }
      if (ReDeal != 0L) {
        output.WriteRawTag(64);
        output.WriteInt64(ReDeal);
      }
      if (winMarkRatio_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(WinMarkRatio);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Id);
      }
      if (DeletedAt != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(DeletedAt);
      }
      if (EmitEventAtUnix != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(EmitEventAtUnix);
      }
      if (GameCode.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(GameCode);
      }
      if (rtp_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Rtp);
      }
      if (mark_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Mark);
      }
      if (vip_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Vip);
      }
      if (ReDeal != 0L) {
        output.WriteRawTag(64);
        output.WriteInt64(ReDeal);
      }
      if (winMarkRatio_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(WinMarkRatio);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Id);
      }
      if (DeletedAt != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(DeletedAt);
      }
      if (EmitEventAtUnix != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(EmitEventAtUnix);
      }
      if (GameCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GameCode);
      }
      if (rtp_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Rtp);
      }
      if (mark_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Mark);
      }
      if (vip_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Vip);
      }
      if (ReDeal != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ReDeal);
      }
      if (winMarkRatio_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(WinMarkRatio);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RuleLucky other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0L) {
        Id = other.Id;
      }
      if (other.DeletedAt != 0L) {
        DeletedAt = other.DeletedAt;
      }
      if (other.EmitEventAtUnix != 0L) {
        EmitEventAtUnix = other.EmitEventAtUnix;
      }
      if (other.GameCode.Length != 0) {
        GameCode = other.GameCode;
      }
      if (other.rtp_ != null) {
        if (rtp_ == null) {
          Rtp = new global::Api.Range();
        }
        Rtp.MergeFrom(other.Rtp);
      }
      if (other.mark_ != null) {
        if (mark_ == null) {
          Mark = new global::Api.Range();
        }
        Mark.MergeFrom(other.Mark);
      }
      if (other.vip_ != null) {
        if (vip_ == null) {
          Vip = new global::Api.Range();
        }
        Vip.MergeFrom(other.Vip);
      }
      if (other.ReDeal != 0L) {
        ReDeal = other.ReDeal;
      }
      if (other.winMarkRatio_ != null) {
        if (winMarkRatio_ == null) {
          WinMarkRatio = new global::Api.Range();
        }
        WinMarkRatio.MergeFrom(other.WinMarkRatio);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt64();
            break;
          }
          case 16: {
            DeletedAt = input.ReadInt64();
            break;
          }
          case 24: {
            EmitEventAtUnix = input.ReadInt64();
            break;
          }
          case 34: {
            GameCode = input.ReadString();
            break;
          }
          case 42: {
            if (rtp_ == null) {
              Rtp = new global::Api.Range();
            }
            input.ReadMessage(Rtp);
            break;
          }
          case 50: {
            if (mark_ == null) {
              Mark = new global::Api.Range();
            }
            input.ReadMessage(Mark);
            break;
          }
          case 58: {
            if (vip_ == null) {
              Vip = new global::Api.Range();
            }
            input.ReadMessage(Vip);
            break;
          }
          case 64: {
            ReDeal = input.ReadInt64();
            break;
          }
          case 74: {
            if (winMarkRatio_ == null) {
              WinMarkRatio = new global::Api.Range();
            }
            input.ReadMessage(WinMarkRatio);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt64();
            break;
          }
          case 16: {
            DeletedAt = input.ReadInt64();
            break;
          }
          case 24: {
            EmitEventAtUnix = input.ReadInt64();
            break;
          }
          case 34: {
            GameCode = input.ReadString();
            break;
          }
          case 42: {
            if (rtp_ == null) {
              Rtp = new global::Api.Range();
            }
            input.ReadMessage(Rtp);
            break;
          }
          case 50: {
            if (mark_ == null) {
              Mark = new global::Api.Range();
            }
            input.ReadMessage(Mark);
            break;
          }
          case 58: {
            if (vip_ == null) {
              Vip = new global::Api.Range();
            }
            input.ReadMessage(Vip);
            break;
          }
          case 64: {
            ReDeal = input.ReadInt64();
            break;
          }
          case 74: {
            if (winMarkRatio_ == null) {
              WinMarkRatio = new global::Api.Range();
            }
            input.ReadMessage(WinMarkRatio);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class RulesLucky : pb::IMessage<RulesLucky>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RulesLucky> _parser = new pb::MessageParser<RulesLucky>(() => new RulesLucky());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RulesLucky> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.CommonApiReflection.Descriptor.MessageTypes[50]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RulesLucky() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RulesLucky(RulesLucky other) : this() {
      rules_ = other.rules_.Clone();
      limit_ = other.limit_;
      offset_ = other.offset_;
      total_ = other.total_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RulesLucky Clone() {
      return new RulesLucky(this);
    }

    /// <summary>Field number for the "rules" field.</summary>
    public const int RulesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Api.RuleLucky> _repeated_rules_codec
        = pb::FieldCodec.ForMessage(10, global::Api.RuleLucky.Parser);
    private readonly pbc::RepeatedField<global::Api.RuleLucky> rules_ = new pbc::RepeatedField<global::Api.RuleLucky>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Api.RuleLucky> Rules {
      get { return rules_; }
    }

    /// <summary>Field number for the "limit" field.</summary>
    public const int LimitFieldNumber = 2;
    private long limit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Limit {
      get { return limit_; }
      set {
        limit_ = value;
      }
    }

    /// <summary>Field number for the "offset" field.</summary>
    public const int OffsetFieldNumber = 3;
    private long offset_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Offset {
      get { return offset_; }
      set {
        offset_ = value;
      }
    }

    /// <summary>Field number for the "total" field.</summary>
    public const int TotalFieldNumber = 4;
    private long total_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Total {
      get { return total_; }
      set {
        total_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RulesLucky);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RulesLucky other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!rules_.Equals(other.rules_)) return false;
      if (Limit != other.Limit) return false;
      if (Offset != other.Offset) return false;
      if (Total != other.Total) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= rules_.GetHashCode();
      if (Limit != 0L) hash ^= Limit.GetHashCode();
      if (Offset != 0L) hash ^= Offset.GetHashCode();
      if (Total != 0L) hash ^= Total.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      rules_.WriteTo(output, _repeated_rules_codec);
      if (Limit != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Limit);
      }
      if (Offset != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Offset);
      }
      if (Total != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(Total);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      rules_.WriteTo(ref output, _repeated_rules_codec);
      if (Limit != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Limit);
      }
      if (Offset != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Offset);
      }
      if (Total != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(Total);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += rules_.CalculateSize(_repeated_rules_codec);
      if (Limit != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Limit);
      }
      if (Offset != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Offset);
      }
      if (Total != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Total);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RulesLucky other) {
      if (other == null) {
        return;
      }
      rules_.Add(other.rules_);
      if (other.Limit != 0L) {
        Limit = other.Limit;
      }
      if (other.Offset != 0L) {
        Offset = other.Offset;
      }
      if (other.Total != 0L) {
        Total = other.Total;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            rules_.AddEntriesFrom(input, _repeated_rules_codec);
            break;
          }
          case 16: {
            Limit = input.ReadInt64();
            break;
          }
          case 24: {
            Offset = input.ReadInt64();
            break;
          }
          case 32: {
            Total = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            rules_.AddEntriesFrom(ref input, _repeated_rules_codec);
            break;
          }
          case 16: {
            Limit = input.ReadInt64();
            break;
          }
          case 24: {
            Offset = input.ReadInt64();
            break;
          }
          case 32: {
            Total = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
